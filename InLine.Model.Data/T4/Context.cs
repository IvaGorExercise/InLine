
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InLine.Model.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    
    public partial class Context : DbContext
    {
        public Context()
            : base("name=InLineDataContext")
        {
        }
    	
    	public Context(string connectionString)
            : base(connectionString)
        {
    	   ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 6000;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Davanje> Davanje { get; set; }
        public DbSet<DoprinosDohodak> DoprinosDohodak { get; set; }
        public DbSet<DoprinosDohodakVr> DoprinosDohodakVr { get; set; }
        public DbSet<PDV> PDV { get; set; }
        public DbSet<PDVVr> PDVVr { get; set; }
        public DbSet<PorezDohodak> PorezDohodak { get; set; }
        public DbSet<PorezDohodakPrirez> PorezDohodakPrirez { get; set; }
        public DbSet<PorezDohodakVr> PorezDohodakVr { get; set; }
        public DbSet<PosebanPorezDohodak> PosebanPorezDohodak { get; set; }
        public DbSet<PosebanPorezDohodakVr> PosebanPorezDohodakVr { get; set; }
        public DbSet<Dohodak> Dohodak { get; set; }
        public DbSet<DohodakDavanje> DohodakDavanje { get; set; }
        public DbSet<DohodakIsplatitelj> DohodakIsplatitelj { get; set; }
        public DbSet<DohodakOdbitak> DohodakOdbitak { get; set; }
        public DbSet<DohodakPrimatelj> DohodakPrimatelj { get; set; }
        public DbSet<DohodakPrimateljDavanje> DohodakPrimateljDavanje { get; set; }
        public DbSet<DohodakPrimateljIsplataGotovina> DohodakPrimateljIsplataGotovina { get; set; }
        public DbSet<DohodakPrimateljIsplataRacun> DohodakPrimateljIsplataRacun { get; set; }
        public DbSet<DohodakPrimateljKoeficijent> DohodakPrimateljKoeficijent { get; set; }
        public DbSet<DohodakPrimateljOdbitak> DohodakPrimateljOdbitak { get; set; }
        public DbSet<DohodakPrimateljPrimitak> DohodakPrimateljPrimitak { get; set; }
        public DbSet<DohodakPrimateljPrimitakDavanje> DohodakPrimateljPrimitakDavanje { get; set; }
        public DbSet<DohodakPrimitak> DohodakPrimitak { get; set; }
        public DbSet<ObrazacID> ObrazacID { get; set; }
        public DbSet<ObrazacID1> ObrazacID1 { get; set; }
        public DbSet<ObrazacID12010A> ObrazacID12010A { get; set; }
        public DbSet<ObrazacID1Potvrda2010A> ObrazacID1Potvrda2010A { get; set; }
        public DbSet<ObrazacID2009A> ObrazacID2009A { get; set; }
        public DbSet<ObrazacID2011A> ObrazacID2011A { get; set; }
        public DbSet<ObrazacIDOpcina2003A> ObrazacIDOpcina2003A { get; set; }
        public DbSet<ObrazacIP> ObrazacIP { get; set; }
        public DbSet<ObrazacIP2011A> ObrazacIP2011A { get; set; }
        public DbSet<ObrazacIPMjesec2011A> ObrazacIPMjesec2011A { get; set; }
        public DbSet<ObrazacRSm> ObrazacRSm { get; set; }
        public DbSet<ObrazacRSmA2005A> ObrazacRSmA2005A { get; set; }
        public DbSet<ObrazacRSmB2005A> ObrazacRSmB2005A { get; set; }
        public DbSet<Odbitak> Odbitak { get; set; }
        public DbSet<OdbitakGr> OdbitakGr { get; set; }
        public DbSet<OdbitakGrOdbitak> OdbitakGrOdbitak { get; set; }
        public DbSet<OdbitakGrOdbitakGr> OdbitakGrOdbitakGr { get; set; }
        public DbSet<PrimateljKoeficijent> PrimateljKoeficijent { get; set; }
        public DbSet<PrimateljKoeficijentGr> PrimateljKoeficijentGr { get; set; }
        public DbSet<Primitak> Primitak { get; set; }
        public DbSet<PrimitakGr> PrimitakGr { get; set; }
        public DbSet<PrimitakGrPrimitak> PrimitakGrPrimitak { get; set; }
        public DbSet<PrimitakGrPrimitakGr> PrimitakGrPrimitakGr { get; set; }
        public DbSet<PrimitakProsjekGr> PrimitakProsjekGr { get; set; }
        public DbSet<GlavnaKnjiga> GlavnaKnjiga { get; set; }
        public DbSet<KontniPlan> KontniPlan { get; set; }
        public DbSet<KontniPlanAnalitika> KontniPlanAnalitika { get; set; }
        public DbSet<KontniPlanSkup> KontniPlanSkup { get; set; }
        public DbSet<KontniPlanSkupGr> KontniPlanSkupGr { get; set; }
        public DbSet<KontniPlanSkupGrKontniPlanSkup> KontniPlanSkupGrKontniPlanSkup { get; set; }
        public DbSet<KontniPlanSt> KontniPlanSt { get; set; }
        public DbSet<KontniPlanStKriterij> KontniPlanStKriterij { get; set; }
        public DbSet<KontniPlanTemeljnicaVr> KontniPlanTemeljnicaVr { get; set; }
        public DbSet<Kriterij> Kriterij { get; set; }
        public DbSet<KriterijSt> KriterijSt { get; set; }
        public DbSet<KriterijStKriterijSt> KriterijStKriterijSt { get; set; }
        public DbSet<Shema> Shema { get; set; }
        public DbSet<ShemaGr> ShemaGr { get; set; }
        public DbSet<ShemaGrShema> ShemaGrShema { get; set; }
        public DbSet<ShemaGrShemaGr> ShemaGrShemaGr { get; set; }
        public DbSet<ShemaGrShemaGrStruktura> ShemaGrShemaGrStruktura { get; set; }
        public DbSet<ShemaSt> ShemaSt { get; set; }
        public DbSet<ShemaStPolje> ShemaStPolje { get; set; }
        public DbSet<ShemaStPoljeUvjet> ShemaStPoljeUvjet { get; set; }
        public DbSet<Temeljnica> Temeljnica { get; set; }
        public DbSet<TemeljnicaStKriterij> TemeljnicaStKriterij { get; set; }
        public DbSet<TemeljnicaVr> TemeljnicaVr { get; set; }
        public DbSet<HUB> HUB { get; set; }
        public DbSet<HUB2013A> HUB2013A { get; set; }
        public DbSet<Izvod2012A> Izvod2012A { get; set; }
        public DbSet<Izvod2012ASt> Izvod2012ASt { get; set; }
        public DbSet<IzvodSt> IzvodSt { get; set; }
        public DbSet<ZbrojniNalog> ZbrojniNalog { get; set; }
        public DbSet<ZbrojniNalog2013A> ZbrojniNalog2013A { get; set; }
        public DbSet<ZbrojniNalogHUB> ZbrojniNalogHUB { get; set; }
        public DbSet<DatotekaIzvod> DatotekaIzvod { get; set; }
        public DbSet<DatotekaIzvod2012A> DatotekaIzvod2012A { get; set; }
        public DbSet<DatotekaIzvodGr2012A> DatotekaIzvodGr2012A { get; set; }
        public DbSet<DatotekaIzvodSt2012A> DatotekaIzvodSt2012A { get; set; }
        public DbSet<IzvodPosiljatelj> IzvodPosiljatelj { get; set; }
        public DbSet<Drzavljanstvo> Drzavljanstvo { get; set; }
        public DbSet<Narodnost> Narodnost { get; set; }
        public DbSet<RadnoMjesto> RadnoMjesto { get; set; }
        public DbSet<StrucnaSprema> StrucnaSprema { get; set; }
        public DbSet<Zaposlenje> Zaposlenje { get; set; }
        public DbSet<ZaposlenjeOpcina> ZaposlenjeOpcina { get; set; }
        public DbSet<ZaposlenjeRadnoMjesto> ZaposlenjeRadnoMjesto { get; set; }
        public DbSet<Praznik> Praznik { get; set; }
        public DbSet<PraznikGr> PraznikGr { get; set; }
        public DbSet<PraznikGrPraznik> PraznikGrPraznik { get; set; }
        public DbSet<PraznikPravilo> PraznikPravilo { get; set; }
        public DbSet<PraznikPraviloPomak> PraznikPraviloPomak { get; set; }
        public DbSet<PraznikPraviloVr> PraznikPraviloVr { get; set; }
        public DbSet<Rabat> Rabat { get; set; }
        public DbSet<RacunIzlaz> RacunIzlaz { get; set; }
        public DbSet<RacunIzlazKontniPlan> RacunIzlazKontniPlan { get; set; }
        public DbSet<RacunIzlazKontniPlanKriterij> RacunIzlazKontniPlanKriterij { get; set; }
        public DbSet<RacunIzlazSt> RacunIzlazSt { get; set; }
        public DbSet<RacunUlaz> RacunUlaz { get; set; }
        public DbSet<RacunUlazKontniPlan> RacunUlazKontniPlan { get; set; }
        public DbSet<RacunUlazKontniPlanKriterij> RacunUlazKontniPlanKriterij { get; set; }
        public DbSet<RacunUlazSt> RacunUlazSt { get; set; }
        public DbSet<Adresa> Adresa { get; set; }
        public DbSet<DrzavaRadna> DrzavaRadna { get; set; }
        public DbSet<Lokacija> Lokacija { get; set; }
        public DbSet<LokacijaLokacija> LokacijaLokacija { get; set; }
        public DbSet<LokacijaLokacijaStruktura> LokacijaLokacijaStruktura { get; set; }
        public DbSet<Mjesto> Mjesto { get; set; }
        public DbSet<MjestoDrzava> MjestoDrzava { get; set; }
        public DbSet<MjestoGr> MjestoGr { get; set; }
        public DbSet<MjestoGrMjesto> MjestoGrMjesto { get; set; }
        public DbSet<MjestoGrMjestoDatum> MjestoGrMjestoDatum { get; set; }
        public DbSet<MjestoOpcina> MjestoOpcina { get; set; }
        public DbSet<MjestoPosta> MjestoPosta { get; set; }
        public DbSet<Posta> Posta { get; set; }
        public DbSet<Ulica> Ulica { get; set; }
        public DbSet<UlicaTip> UlicaTip { get; set; }
        public DbSet<Jezik> Jezik { get; set; }
        public DbSet<JezikGr> JezikGr { get; set; }
        public DbSet<MjernaJedinica> MjernaJedinica { get; set; }
        public DbSet<PoslovnaGodina> PoslovnaGodina { get; set; }
        public DbSet<PoslovnaGodinaSubjekt> PoslovnaGodinaSubjekt { get; set; }
        public DbSet<PoslovnaGodinaSubjektGr> PoslovnaGodinaSubjektGr { get; set; }
        public DbSet<PoslovnaGodinaSubjektGrSubjekt> PoslovnaGodinaSubjektGrSubjekt { get; set; }
        public DbSet<PoslovniSubjekt> PoslovniSubjekt { get; set; }
        public DbSet<Nekretnina> Nekretnina { get; set; }
        public DbSet<Objekt> Objekt { get; set; }
        public DbSet<ObjektGr> ObjektGr { get; set; }
        public DbSet<ObjektGrObjekt> ObjektGrObjekt { get; set; }
        public DbSet<ObjektGrObjektGr> ObjektGrObjektGr { get; set; }
        public DbSet<Roba> Roba { get; set; }
        public DbSet<Stan> Stan { get; set; }
        public DbSet<Usluga> Usluga { get; set; }
        public DbSet<Vozilo> Vozilo { get; set; }
        public DbSet<Zgrada> Zgrada { get; set; }
        public DbSet<KnjigaOS> KnjigaOS { get; set; }
        public DbSet<OsnovnoSredstvo> OsnovnoSredstvo { get; set; }
        public DbSet<OsnovnoSredstvoDnevnik> OsnovnoSredstvoDnevnik { get; set; }
        public DbSet<HUBImport> HUBImport { get; set; }
        public DbSet<HUBImportHUB> HUBImportHUB { get; set; }
        public DbSet<IzvodTemeljnica> IzvodTemeljnica { get; set; }
        public DbSet<Kupac> Kupac { get; set; }
        public DbSet<Nalog> Nalog { get; set; }
        public DbSet<Opomena> Opomena { get; set; }
        public DbSet<PlacanjeVr> PlacanjeVr { get; set; }
        public DbSet<Racun> Racun { get; set; }
        public DbSet<RacunVr> RacunVr { get; set; }
        public DbSet<UgovorStanOtkupKupac> UgovorStanOtkupKupac { get; set; }
        public DbSet<UgovorStanOtkupMoratorij> UgovorStanOtkupMoratorij { get; set; }
        public DbSet<UgovorStanOtkupMoratorijMjesec> UgovorStanOtkupMoratorijMjesec { get; set; }
        public DbSet<UgovorStanOtkupObrok> UgovorStanOtkupObrok { get; set; }
        public DbSet<UgovorStanOtkupObrokPreplata> UgovorStanOtkupObrokPreplata { get; set; }
        public DbSet<UgovorStanOtkupObrokUplata> UgovorStanOtkupObrokUplata { get; set; }
        public DbSet<UgovorStanOtkupOpomena> UgovorStanOtkupOpomena { get; set; }
        public DbSet<UgovorStanOtkupShema> UgovorStanOtkupShema { get; set; }
        public DbSet<UgovorStanOtkupTrosak> UgovorStanOtkupTrosak { get; set; }
        public DbSet<KnjigaIRA> KnjigaIRA { get; set; }
        public DbSet<KnjigaIRAPDV> KnjigaIRAPDV { get; set; }
        public DbSet<KnjigaURA> KnjigaURA { get; set; }
        public DbSet<KnjigaURAPDV> KnjigaURAPDV { get; set; }
        public DbSet<ObrazacPDV> ObrazacPDV { get; set; }
        public DbSet<ObrazacPDV2012A> ObrazacPDV2012A { get; set; }
        public DbSet<ObrazacPDVK> ObrazacPDVK { get; set; }
        public DbSet<Banka> Banka { get; set; }
        public DbSet<Obrt> Obrt { get; set; }
        public DbSet<Opcina> Opcina { get; set; }
        public DbSet<OpcinaGr> OpcinaGr { get; set; }
        public DbSet<OpcinaGrOpcina> OpcinaGrOpcina { get; set; }
        public DbSet<OpcinaGrOpcinaDatum> OpcinaGrOpcinaDatum { get; set; }
        public DbSet<OpcinaGrTip> OpcinaGrTip { get; set; }
        public DbSet<OpcinaOpcinaTip> OpcinaOpcinaTip { get; set; }
        public DbSet<OpcinaTip> OpcinaTip { get; set; }
        public DbSet<OpcinaZupanija> OpcinaZupanija { get; set; }
        public DbSet<Osoba> Osoba { get; set; }
        public DbSet<OsobaBoraviste> OsobaBoraviste { get; set; }
        public DbSet<OsobaPrebivaliste> OsobaPrebivaliste { get; set; }
        public DbSet<OsobaPrezime> OsobaPrezime { get; set; }
        public DbSet<Poduzece> Poduzece { get; set; }
        public DbSet<PoreznaUprava> PoreznaUprava { get; set; }
        public DbSet<PoreznaUpravaIspostava> PoreznaUpravaIspostava { get; set; }
        public DbSet<Subjekt> Subjekt { get; set; }
        public DbSet<SubjektEmail> SubjektEmail { get; set; }
        public DbSet<SubjektGr> SubjektGr { get; set; }
        public DbSet<SubjektGrSubjekt> SubjektGrSubjekt { get; set; }
        public DbSet<SubjektGrSubjektGr> SubjektGrSubjektGr { get; set; }
        public DbSet<SubjektRacun> SubjektRacun { get; set; }
        public DbSet<SubjektTelefon> SubjektTelefon { get; set; }
        public DbSet<SubjektVeza> SubjektVeza { get; set; }
        public DbSet<SubjektVezaVr> SubjektVezaVr { get; set; }
        public DbSet<SubjektWeb> SubjektWeb { get; set; }
        public DbSet<Zupanija> Zupanija { get; set; }
        public DbSet<ZupanijaGr> ZupanijaGr { get; set; }
        public DbSet<ZupanijaGrTip> ZupanijaGrTip { get; set; }
        public DbSet<ZupanijaGrZupanija> ZupanijaGrZupanija { get; set; }
        public DbSet<ZupanijaGrZupanijaDatum> ZupanijaGrZupanijaDatum { get; set; }
        public DbSet<DatotekaIzvodVerzija> DatotekaIzvodVerzija { get; set; }
        public DbSet<DatotekaIzvodVerzijaTablica> DatotekaIzvodVerzijaTablica { get; set; }
        public DbSet<DavanjeDoprinosDohodak> DavanjeDoprinosDohodak { get; set; }
        public DbSet<DavanjeDoprinosDohodakVr> DavanjeDoprinosDohodakVr { get; set; }
        public DbSet<DavanjePDVVr> DavanjePDVVr { get; set; }
        public DbSet<DavanjePorezDohodakVr> DavanjePorezDohodakVr { get; set; }
        public DbSet<DavanjePosebanPorezDohodakVr> DavanjePosebanPorezDohodakVr { get; set; }
        public DbSet<DavanjeTablica> DavanjeTablica { get; set; }
        public DbSet<DavanjeVr> DavanjeVr { get; set; }
        public DbSet<DavanjeVrTablica> DavanjeVrTablica { get; set; }
        public DbSet<Drzava> Drzava { get; set; }
        public DbSet<DrzavaValuta> DrzavaValuta { get; set; }
        public DbSet<HUBDokumentIzvor2013A> HUBDokumentIzvor2013A { get; set; }
        public DbSet<HUBKontrola> HUBKontrola { get; set; }
        public DbSet<HUBKontrolaModelPodatak2013A> HUBKontrolaModelPodatak2013A { get; set; }
        public DbSet<HUBModel2013A> HUBModel2013A { get; set; }
        public DbSet<HUBModelPodatak2013A> HUBModelPodatak2013A { get; set; }
        public DbSet<HUBNalogVrsta2013A> HUBNalogVrsta2013A { get; set; }
        public DbSet<HUBNamjena2013A> HUBNamjena2013A { get; set; }
        public DbSet<HUBPrimateljVrsta2013A> HUBPrimateljVrsta2013A { get; set; }
        public DbSet<HUBTroskoviOpcija2013A> HUBTroskoviOpcija2013A { get; set; }
        public DbSet<HUBVerzija> HUBVerzija { get; set; }
        public DbSet<HUBVerzijaTablica> HUBVerzijaTablica { get; set; }
        public DbSet<Izvod2012ATransakcijaVr> Izvod2012ATransakcijaVr { get; set; }
        public DbSet<IzvodVerzija> IzvodVerzija { get; set; }
        public DbSet<IzvodVerzijaTablica> IzvodVerzijaTablica { get; set; }
        public DbSet<Kalendar> Kalendar { get; set; }
        public DbSet<KalendarGodina> KalendarGodina { get; set; }
        public DbSet<KalendarGodinaDan> KalendarGodinaDan { get; set; }
        public DbSet<KalendarGodinaKvartal> KalendarGodinaKvartal { get; set; }
        public DbSet<KalendarGodinaMjesec> KalendarGodinaMjesec { get; set; }
        public DbSet<KalendarGodinaTjedan> KalendarGodinaTjedan { get; set; }
        public DbSet<KalendarKvartal> KalendarKvartal { get; set; }
        public DbSet<KalendarMjesec> KalendarMjesec { get; set; }
        public DbSet<KalendarMjesecDan> KalendarMjesecDan { get; set; }
        public DbSet<KalendarMjesecTjedan> KalendarMjesecTjedan { get; set; }
        public DbSet<KalendarTjedanDan> KalendarTjedanDan { get; set; }
        public DbSet<MirovinskiStup> MirovinskiStup { get; set; }
        public DbSet<MjestoDioTip> MjestoDioTip { get; set; }
        public DbSet<MjestoGrTip> MjestoGrTip { get; set; }
        public DbSet<MjestoTip> MjestoTip { get; set; }
        public DbSet<ObjektTablica> ObjektTablica { get; set; }
        public DbSet<ObjektVr> ObjektVr { get; set; }
        public DbSet<ObjektVrTablica> ObjektVrTablica { get; set; }
        public DbSet<ObrazacID1Verzija> ObrazacID1Verzija { get; set; }
        public DbSet<ObrazacIDIdentifikator2009A> ObrazacIDIdentifikator2009A { get; set; }
        public DbSet<ObrazacIDVerzija> ObrazacIDVerzija { get; set; }
        public DbSet<ObrazacIDVerzijaTablica> ObrazacIDVerzijaTablica { get; set; }
        public DbSet<ObrazacIPIdentifikator2005A> ObrazacIPIdentifikator2005A { get; set; }
        public DbSet<ObrazacIPVerzija> ObrazacIPVerzija { get; set; }
        public DbSet<ObrazacRSmDopusteno2005A> ObrazacRSmDopusteno2005A { get; set; }
        public DbSet<ObrazacRSmObracunVr2005A> ObrazacRSmObracunVr2005A { get; set; }
        public DbSet<ObrazacRSmObveznikVr2005A> ObrazacRSmObveznikVr2005A { get; set; }
        public DbSet<ObrazacRSmOsiguranjeOsnova2005A> ObrazacRSmOsiguranjeOsnova2005A { get; set; }
        public DbSet<ObrazacRSmStaz2005A> ObrazacRSmStaz2005A { get; set; }
        public DbSet<ObrazacRSmVerzija> ObrazacRSmVerzija { get; set; }
        public DbSet<OperatorAritmeticki> OperatorAritmeticki { get; set; }
        public DbSet<OperatorLogicki> OperatorLogicki { get; set; }
        public DbSet<OperatorVremenski> OperatorVremenski { get; set; }
        public DbSet<OsnovnoSredstvoDogadaj> OsnovnoSredstvoDogadaj { get; set; }
        public DbSet<PoticanjeZaposljavanja> PoticanjeZaposljavanja { get; set; }
        public DbSet<PrimitakProsjekIznos> PrimitakProsjekIznos { get; set; }
        public DbSet<PrimitakProsjekIzracun> PrimitakProsjekIzracun { get; set; }
        public DbSet<Spol> Spol { get; set; }
        public DbSet<SubjektFunkcija> SubjektFunkcija { get; set; }
        public DbSet<SubjektTablica> SubjektTablica { get; set; }
        public DbSet<SubjektVr> SubjektVr { get; set; }
        public DbSet<SubjektVrTablica> SubjektVrTablica { get; set; }
        public DbSet<Tablica> Tablica { get; set; }
        public DbSet<TablicaPolje> TablicaPolje { get; set; }
        public DbSet<TablicaPoljeUI> TablicaPoljeUI { get; set; }
        public DbSet<TemeljnicaVrVr> TemeljnicaVrVr { get; set; }
        public DbSet<Valuta> Valuta { get; set; }
        public DbSet<ZapisTablica> ZapisTablica { get; set; }
        public DbSet<ZapisVr> ZapisVr { get; set; }
        public DbSet<ZapisVrTablica> ZapisVrTablica { get; set; }
        public DbSet<ZbrojniNalogVerzija> ZbrojniNalogVerzija { get; set; }
        public DbSet<ZbrojniNalogVerzijaTablica> ZbrojniNalogVerzijaTablica { get; set; }
        public DbSet<ZN14OsnovaPlacanja> ZN14OsnovaPlacanja { get; set; }
        public DbSet<Tecaj> Tecaj { get; set; }
        public DbSet<TecajLista> TecajLista { get; set; }
        public DbSet<TecajListaSt> TecajListaSt { get; set; }
        public DbSet<TecajVr> TecajVr { get; set; }
        public DbSet<TransakcijskiRacun> TransakcijskiRacun { get; set; }
        public DbSet<ValutaRadna> ValutaRadna { get; set; }
        public DbSet<Datoteka> Datoteka { get; set; }
        public DbSet<DatotekaPolje> DatotekaPolje { get; set; }
        public DbSet<DatotekaVr> DatotekaVr { get; set; }
        public DbSet<DatotekaVrPolje> DatotekaVrPolje { get; set; }
        public DbSet<DatotekaVrPoljeTip> DatotekaVrPoljeTip { get; set; }
        public DbSet<DatotekaVrVerzija> DatotekaVrVerzija { get; set; }
        public DbSet<Obrazac> Obrazac { get; set; }
        public DbSet<ObrazacPolje> ObrazacPolje { get; set; }
        public DbSet<ObrazacVr> ObrazacVr { get; set; }
        public DbSet<ObrazacVrPolje> ObrazacVrPolje { get; set; }
        public DbSet<ObrazacVrPoljeTip> ObrazacVrPoljeTip { get; set; }
        public DbSet<Zapis> Zapis { get; set; }
        public DbSet<ZapisGr> ZapisGr { get; set; }
        public DbSet<ZapisGrZapis> ZapisGrZapis { get; set; }
        public DbSet<ZapisGrZapisGr> ZapisGrZapisGr { get; set; }
        public DbSet<View.GlavnaKnjigaKontniPlanKontniPlanSt> VIEW_GlavnaKnjigaKontniPlanKontniPlanSt { get; set; }
        public DbSet<View.KontniPlanAnalitika> VIEW_KontniPlanAnalitika { get; set; }
        public DbSet<View.KontniPlanAnalitikaDetalj> VIEW_KontniPlanAnalitikaDetalj { get; set; }
        public DbSet<View.KontniPlanAnalitikaZapisVr> VIEW_KontniPlanAnalitikaZapisVr { get; set; }
        public DbSet<View.KontniPlanDetalj> VIEW_KontniPlanDetalj { get; set; }
        public DbSet<View.KontniPlanSt> VIEW_KontniPlanSt { get; set; }
        public DbSet<View.KontniPlanStDetalj> VIEW_KontniPlanStDetalj { get; set; }
        public DbSet<View.KontniPlanTemeljnicaVr> VIEW_KontniPlanTemeljnicaVr { get; set; }
        public DbSet<View.Kriterij> VIEW_Kriterij { get; set; }
        public DbSet<View.KriterijDetalj> VIEW_KriterijDetalj { get; set; }
        public DbSet<View.KriterijSt> VIEW_KriterijSt { get; set; }
        public DbSet<View.KriterijStDetalj> VIEW_KriterijStDetalj { get; set; }
        public DbSet<View.KriterijStKriterijStKriterijSt> VIEW_KriterijStKriterijStKriterijSt { get; set; }
        public DbSet<View.KriterijStKriterijStKriterijStDetalj> VIEW_KriterijStKriterijStKriterijStDetalj { get; set; }
        public DbSet<View.Temeljnica> VIEW_Temeljnica { get; set; }
        public DbSet<View.TemeljnicaDetalj> VIEW_TemeljnicaDetalj { get; set; }
        public DbSet<View.TemeljnicaSt> VIEW_TemeljnicaSt { get; set; }
        public DbSet<View.TemeljnicaStKontniPlanSt> VIEW_TemeljnicaStKontniPlanSt { get; set; }
        public DbSet<View.TemeljnicaStKriterij> VIEW_TemeljnicaStKriterij { get; set; }
        public DbSet<View.TemeljnicaTemeljnicaVrGlavnaKnjiga> VIEW_TemeljnicaTemeljnicaVrGlavnaKnjiga { get; set; }
        public DbSet<View.TemeljnicaVr> VIEW_TemeljnicaVr { get; set; }
        public DbSet<View.TemeljnicaVrDetalj> VIEW_TemeljnicaVrDetalj { get; set; }
        public DbSet<View.HUB2013A> VIEW_HUB2013A { get; set; }
        public DbSet<View.PoslovnaGodinaDetalj> VIEW_PoslovnaGodinaDetalj { get; set; }
        public DbSet<View.OpomenaDetalj> VIEW_OpomenaDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupDetalj> VIEW_UgovorStanOtkupDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupMoratorij> VIEW_UgovorStanOtkupMoratorij { get; set; }
        public DbSet<View.UgovorStanOtkupMoratorijMjesec> VIEW_UgovorStanOtkupMoratorijMjesec { get; set; }
        public DbSet<View.UgovorStanOtkupMoratorijMjesecDetalj> VIEW_UgovorStanOtkupMoratorijMjesecDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupNalog> VIEW_UgovorStanOtkupNalog { get; set; }
        public DbSet<View.UgovorStanOtkupNalogDetalj> VIEW_UgovorStanOtkupNalogDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupObrok> VIEW_UgovorStanOtkupObrok { get; set; }
        public DbSet<View.UgovorStanOtkupObrokDetalj> VIEW_UgovorStanOtkupObrokDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupObrokPreplataDetalj> VIEW_UgovorStanOtkupObrokPreplataDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupObrokUplataDetalj> VIEW_UgovorStanOtkupObrokUplataDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupOpomenaDetalj> VIEW_UgovorStanOtkupOpomenaDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupTrosak> VIEW_UgovorStanOtkupTrosak { get; set; }
        public DbSet<View.UgovorStanOtkupTrosakDetalj> VIEW_UgovorStanOtkupTrosakDetalj { get; set; }
        public DbSet<View.Osoba> VIEW_Osoba { get; set; }
        public DbSet<View.OsobaDetalj> VIEW_OsobaDetalj { get; set; }
        public DbSet<View.ZapisVrAnalitika> VIEW_ZapisVrAnalitika { get; set; }
        public DbSet<View.Zapis> VIEW_Zapis { get; set; }
        public DbSet<View.ZapisRacunUlaz> VIEW_ZapisRacunUlaz { get; set; }
        public DbSet<View.ZapisUgovorStanOtkup> VIEW_ZapisUgovorStanOtkup { get; set; }
        public DbSet<View.ZapisUgovorStanOtkupAneks> VIEW_ZapisUgovorStanOtkupAneks { get; set; }
        public DbSet<View.GlavnaKnjigaKontniPlanPoslovnaGodinaPoslovniSubjekt> VIEW_GlavnaKnjigaKontniPlanPoslovnaGodinaPoslovniSubjekt { get; set; }
        public DbSet<View.PoslovnaGodinaPoslovniSubjekt> VIEW_PoslovnaGodinaPoslovniSubjekt { get; set; }
        public DbSet<View.PoslovniSubjekt> VIEW_PoslovniSubjekt { get; set; }
        public DbSet<View.PoslovniSubjektSubjekt> VIEW_PoslovniSubjektSubjekt { get; set; }
        public DbSet<View.Subjekt> VIEW_Subjekt { get; set; }
        public DbSet<View.KontniPlan> VIEW_KontniPlan { get; set; }
        public DbSet<View.Izvod2012ASt> VIEW_Izvod2012ASt { get; set; }
        public DbSet<View.SubjektRacunBanka> VIEW_SubjektRacunBanka { get; set; }
        public DbSet<View.Izvod2012ADetalj> VIEW_Izvod2012ADetalj { get; set; }
        public DbSet<View.Izvod2012AStDetalj> VIEW_Izvod2012AStDetalj { get; set; }
        public DbSet<Izvod> Izvod { get; set; }
        public DbSet<View.Izvod2012A> VIEW_Izvod2012A { get; set; }
        public DbSet<View.Stan> VIEW_Stan { get; set; }
        public DbSet<View.StanDetalj> VIEW_StanDetalj { get; set; }
        public DbSet<TemeljnicaSt> TemeljnicaSt { get; set; }
        public DbSet<DokumentVr> DokumentVr { get; set; }
        public DbSet<IzvodStTemeljnica> IzvodStTemeljnica { get; set; }
        public DbSet<UgovorStanOtkup> UgovorStanOtkup { get; set; }
        public DbSet<DokumentGr> DokumentGr { get; set; }
        public DbSet<View.Izvod2012AOtkup> VIEW_Izvod2012AOtkup { get; set; }
        public DbSet<View.Izvod2012AOtkupDetalj> VIEW_Izvod2012AOtkupDetalj { get; set; }
        public DbSet<View.Izvod2012AStOtkup> VIEW_Izvod2012AStOtkup { get; set; }
        public DbSet<View.Izvod2012AStOtkupDetalj> VIEW_Izvod2012AStOtkupDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupObrokPreplata> VIEW_UgovorStanOtkupObrokPreplata { get; set; }
        public DbSet<View.UgovorStanOtkupObrokUplata> VIEW_UgovorStanOtkupObrokUplata { get; set; }
        public DbSet<View.TemeljnicaStDetalj> VIEW_TemeljnicaStDetalj { get; set; }
        public DbSet<View.DokumentVr> VIEW_DokumentVr { get; set; }
        public DbSet<View.DokumentVrDetalj> VIEW_DokumentVrDetalj { get; set; }
        public DbSet<View.DokumentGr> VIEW_DokumentGr { get; set; }
        public DbSet<View.Opomena> VIEW_Opomena { get; set; }
        public DbSet<ObveznicaJavnogDuga> ObveznicaJavnogDuga { get; set; }
        public DbSet<ObveznicaJavnogDugaIspravak> ObveznicaJavnogDugaIspravak { get; set; }
        public DbSet<ZateznaKamata> ZateznaKamata { get; set; }
        public DbSet<View.UgovorStanOtkupOpomena> VIEW_UgovorStanOtkupOpomena { get; set; }
        public DbSet<View.UgovorStanOtkup> VIEW_UgovorStanOtkup { get; set; }
        public DbSet<View.UgovorStanOtkupKupac> VIEW_UgovorStanOtkupKupac { get; set; }
        public DbSet<View.UgovorStanOtkupKupacNositelj> VIEW_UgovorStanOtkupKupacNositelj { get; set; }
        public DbSet<View.KupacDetalj> VIEW_KupacDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupMoratorijDetalj> VIEW_UgovorStanOtkupMoratorijDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupZavrsetak> VIEW_UgovorStanOtkupZavrsetak { get; set; }
        public DbSet<View.UgovorStanOtkupKupacDetalj> VIEW_UgovorStanOtkupKupacDetalj { get; set; }
        public DbSet<View.Kupac> VIEW_Kupac { get; set; }
        public DbSet<UgovorStanOtkupAneks> UgovorStanOtkupAneks { get; set; }
        public DbSet<View.UgovorStanOtkupAneks> VIEW_UgovorStanOtkupAneks { get; set; }
        public DbSet<View.UgovorStanOtkupAneksDetalj> VIEW_UgovorStanOtkupAneksDetalj { get; set; }
        public DbSet<View.UgovorStanOtkupObrokIznos> VIEW_UgovorStanOtkupObrokIznos { get; set; }
        public DbSet<View.TecajLista> VIEW_TecajLista { get; set; }
        public DbSet<View.TecajListaDetalj> VIEW_TecajListaDetalj { get; set; }
        public DbSet<View.TecajListaSt> VIEW_TecajListaSt { get; set; }
        public DbSet<View.TecajListaStDetalj> VIEW_TecajListaStDetalj { get; set; }
    
        public virtual ObjectResult<Banka> C_USP_Banka_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB, string URL, string Opis, string BrojTelefon, long? ID_Banka, string BrojRacun, string VBDIRacun, string IBAN)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var brojTelefonParameter = BrojTelefon != null ?
                new ObjectParameter("BrojTelefon", BrojTelefon) :
                new ObjectParameter("BrojTelefon", typeof(string));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojRacunParameter = BrojRacun != null ?
                new ObjectParameter("BrojRacun", BrojRacun) :
                new ObjectParameter("BrojRacun", typeof(string));
    
            var vBDIRacunParameter = VBDIRacun != null ?
                new ObjectParameter("VBDIRacun", VBDIRacun) :
                new ObjectParameter("VBDIRacun", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("C_USP_Banka_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter, uRLParameter, opisParameter, brojTelefonParameter, iD_BankaParameter, brojRacunParameter, vBDIRacunParameter, iBANParameter);
        }
    
        public virtual ObjectResult<Banka> C_USP_Banka_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB, string URL, string Opis, string BrojTelefon, long? ID_Banka, string BrojRacun, string VBDIRacun, string IBAN, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var brojTelefonParameter = BrojTelefon != null ?
                new ObjectParameter("BrojTelefon", BrojTelefon) :
                new ObjectParameter("BrojTelefon", typeof(string));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojRacunParameter = BrojRacun != null ?
                new ObjectParameter("BrojRacun", BrojRacun) :
                new ObjectParameter("BrojRacun", typeof(string));
    
            var vBDIRacunParameter = VBDIRacun != null ?
                new ObjectParameter("VBDIRacun", VBDIRacun) :
                new ObjectParameter("VBDIRacun", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("C_USP_Banka_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter, uRLParameter, opisParameter, brojTelefonParameter, iD_BankaParameter, brojRacunParameter, vBDIRacunParameter, iBANParameter);
        }
    
        public virtual int C_USP_HUB_IMPORT(string Datoteka, int? Godina, int? Mjesec, int? IDHUBNamjena2013A)
        {
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("C_USP_HUB_IMPORT", datotekaParameter, godinaParameter, mjesecParameter, iDHUBNamjena2013AParameter);
        }
    
        public virtual int C_USP_HUB_IMPORT_Test(int? Godina, int? Mjesec, int? BrojUgovorMin, int? BrojUgovorMax, int? IDHUBNamjena2013A, string Datoteka)
        {
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojUgovorMinParameter = BrojUgovorMin.HasValue ?
                new ObjectParameter("BrojUgovorMin", BrojUgovorMin) :
                new ObjectParameter("BrojUgovorMin", typeof(int));
    
            var brojUgovorMaxParameter = BrojUgovorMax.HasValue ?
                new ObjectParameter("BrojUgovorMax", BrojUgovorMax) :
                new ObjectParameter("BrojUgovorMax", typeof(int));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("C_USP_HUB_IMPORT_Test", godinaParameter, mjesecParameter, brojUgovorMinParameter, brojUgovorMaxParameter, iDHUBNamjena2013AParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Adresa_DELETE(int? ID_Adresa)
        {
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Adresa_DELETE", iD_AdresaParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_INSERT(int? ID_Posta, int? ID_Mjesto, int? ID_Ulica, string Mjesto, string Ulica, string KucniBroj, string KucniBrojDodatak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(int));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(int));
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(int));
    
            var mjestoParameter = Mjesto != null ?
                new ObjectParameter("Mjesto", Mjesto) :
                new ObjectParameter("Mjesto", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_INSERT", iD_PostaParameter, iD_MjestoParameter, iD_UlicaParameter, mjestoParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_INSERT(int? ID_Posta, int? ID_Mjesto, int? ID_Ulica, string Mjesto, string Ulica, string KucniBroj, string KucniBrojDodatak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(int));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(int));
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(int));
    
            var mjestoParameter = Mjesto != null ?
                new ObjectParameter("Mjesto", Mjesto) :
                new ObjectParameter("Mjesto", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_INSERT", mergeOption, iD_PostaParameter, iD_MjestoParameter, iD_UlicaParameter, mjestoParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_SELECT(int? ID_Adresa)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_SELECT", iD_AdresaParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_SELECT(int? ID_Adresa, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_SELECT", mergeOption, iD_AdresaParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_UPDATE(int? ID_Adresa, int? ID_Posta, int? ID_Mjesto, int? ID_Ulica, string Mjesto, string Ulica, string KucniBroj, string KucniBrojDodatak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(int));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(int));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(int));
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(int));
    
            var mjestoParameter = Mjesto != null ?
                new ObjectParameter("Mjesto", Mjesto) :
                new ObjectParameter("Mjesto", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_UPDATE", iD_AdresaParameter, iD_PostaParameter, iD_MjestoParameter, iD_UlicaParameter, mjestoParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter);
        }
    
        public virtual ObjectResult<Adresa> USP_Adresa_UPDATE(int? ID_Adresa, int? ID_Posta, int? ID_Mjesto, int? ID_Ulica, string Mjesto, string Ulica, string KucniBroj, string KucniBrojDodatak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Adresa).Assembly);
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(int));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(int));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(int));
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(int));
    
            var mjestoParameter = Mjesto != null ?
                new ObjectParameter("Mjesto", Mjesto) :
                new ObjectParameter("Mjesto", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adresa>("USP_Adresa_UPDATE", mergeOption, iD_AdresaParameter, iD_PostaParameter, iD_MjestoParameter, iD_UlicaParameter, mjestoParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter);
        }
    
        public virtual ObjectResult<int?> USP_Banka_DELETE(long? ID_Banka)
        {
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Banka_DELETE", iD_BankaParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_SELECT(long? ID_Banka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_SELECT", iD_BankaParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_SELECT(long? ID_Banka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_SELECT", mergeOption, iD_BankaParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_UPDATE(long? ID_Banka, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_UPDATE", iD_BankaParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Banka> USP_Banka_UPDATE(long? ID_Banka, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string VBDI, string Swift, string DealingCode, string FINAModel, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Banka).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var swiftParameter = Swift != null ?
                new ObjectParameter("Swift", Swift) :
                new ObjectParameter("Swift", typeof(string));
    
            var dealingCodeParameter = DealingCode != null ?
                new ObjectParameter("DealingCode", DealingCode) :
                new ObjectParameter("DealingCode", typeof(string));
    
            var fINAModelParameter = FINAModel != null ?
                new ObjectParameter("FINAModel", FINAModel) :
                new ObjectParameter("FINAModel", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Banka>("USP_Banka_UPDATE", mergeOption, iD_BankaParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, vBDIParameter, swiftParameter, dealingCodeParameter, fINAModelParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_Datoteka_DELETE(long? ID_Datoteka)
        {
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Datoteka_DELETE", iD_DatotekaParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_INSERT(long? ID_Zapis, long? ID_ZapisIzvor, string Naziv, string Sadrzaj, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_ZapisIzvorParameter = ID_ZapisIzvor.HasValue ?
                new ObjectParameter("ID_ZapisIzvor", ID_ZapisIzvor) :
                new ObjectParameter("ID_ZapisIzvor", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sadrzajParameter = Sadrzaj != null ?
                new ObjectParameter("Sadrzaj", Sadrzaj) :
                new ObjectParameter("Sadrzaj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_INSERT", iD_ZapisParameter, iD_ZapisIzvorParameter, nazivParameter, sadrzajParameter, datumParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_INSERT(long? ID_Zapis, long? ID_ZapisIzvor, string Naziv, string Sadrzaj, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_ZapisIzvorParameter = ID_ZapisIzvor.HasValue ?
                new ObjectParameter("ID_ZapisIzvor", ID_ZapisIzvor) :
                new ObjectParameter("ID_ZapisIzvor", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sadrzajParameter = Sadrzaj != null ?
                new ObjectParameter("Sadrzaj", Sadrzaj) :
                new ObjectParameter("Sadrzaj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_INSERT", mergeOption, iD_ZapisParameter, iD_ZapisIzvorParameter, nazivParameter, sadrzajParameter, datumParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_SELECT(long? ID_Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_SELECT", iD_DatotekaParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_SELECT(long? ID_Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_SELECT", mergeOption, iD_DatotekaParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_UPDATE(long? ID_Datoteka, long? ID_Zapis, long? ID_ZapisIzvor, string Naziv, string Sadrzaj, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_ZapisIzvorParameter = ID_ZapisIzvor.HasValue ?
                new ObjectParameter("ID_ZapisIzvor", ID_ZapisIzvor) :
                new ObjectParameter("ID_ZapisIzvor", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sadrzajParameter = Sadrzaj != null ?
                new ObjectParameter("Sadrzaj", Sadrzaj) :
                new ObjectParameter("Sadrzaj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_UPDATE", iD_DatotekaParameter, iD_ZapisParameter, iD_ZapisIzvorParameter, nazivParameter, sadrzajParameter, datumParameter);
        }
    
        public virtual ObjectResult<Datoteka> USP_Datoteka_UPDATE(long? ID_Datoteka, long? ID_Zapis, long? ID_ZapisIzvor, string Naziv, string Sadrzaj, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Datoteka).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_ZapisIzvorParameter = ID_ZapisIzvor.HasValue ?
                new ObjectParameter("ID_ZapisIzvor", ID_ZapisIzvor) :
                new ObjectParameter("ID_ZapisIzvor", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sadrzajParameter = Sadrzaj != null ?
                new ObjectParameter("Sadrzaj", Sadrzaj) :
                new ObjectParameter("Sadrzaj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Datoteka>("USP_Datoteka_UPDATE", mergeOption, iD_DatotekaParameter, iD_ZapisParameter, iD_ZapisIzvorParameter, nazivParameter, sadrzajParameter, datumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvod_DELETE(long? ID_DatotekaIzvod)
        {
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvod_DELETE", iD_DatotekaIzvodParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_INSERT(long? ID_Zapis, long? ID_IzvodPosiljatelj, DateTime? Datum, int? RedniBroj, int? IDDatotekaIzvodVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_INSERT", iD_ZapisParameter, iD_IzvodPosiljateljParameter, datumParameter, redniBrojParameter, iDDatotekaIzvodVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_INSERT(long? ID_Zapis, long? ID_IzvodPosiljatelj, DateTime? Datum, int? RedniBroj, int? IDDatotekaIzvodVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_INSERT", mergeOption, iD_ZapisParameter, iD_IzvodPosiljateljParameter, datumParameter, redniBrojParameter, iDDatotekaIzvodVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_SELECT(long? ID_DatotekaIzvod)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_SELECT", iD_DatotekaIzvodParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_SELECT(long? ID_DatotekaIzvod, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_SELECT", mergeOption, iD_DatotekaIzvodParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_UPDATE(long? ID_DatotekaIzvod, long? ID_Zapis, long? ID_IzvodPosiljatelj, DateTime? Datum, int? RedniBroj, int? IDDatotekaIzvodVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_UPDATE", iD_DatotekaIzvodParameter, iD_ZapisParameter, iD_IzvodPosiljateljParameter, datumParameter, redniBrojParameter, iDDatotekaIzvodVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod> USP_DatotekaIzvod_UPDATE(long? ID_DatotekaIzvod, long? ID_Zapis, long? ID_IzvodPosiljatelj, DateTime? Datum, int? RedniBroj, int? IDDatotekaIzvodVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod>("USP_DatotekaIzvod_UPDATE", mergeOption, iD_DatotekaIzvodParameter, iD_ZapisParameter, iD_IzvodPosiljateljParameter, datumParameter, redniBrojParameter, iDDatotekaIzvodVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvod2012A_DELETE(long? ID_DatotekaIzvod2012A)
        {
            var iD_DatotekaIzvod2012AParameter = ID_DatotekaIzvod2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod2012A", ID_DatotekaIzvod2012A) :
                new ObjectParameter("ID_DatotekaIzvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvod2012A_DELETE", iD_DatotekaIzvod2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_INSERT", iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_INSERT", mergeOption, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_SELECT(long? ID_DatotekaIzvod2012A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvod2012AParameter = ID_DatotekaIzvod2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod2012A", ID_DatotekaIzvod2012A) :
                new ObjectParameter("ID_DatotekaIzvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_SELECT", iD_DatotekaIzvod2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_SELECT(long? ID_DatotekaIzvod2012A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvod2012AParameter = ID_DatotekaIzvod2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod2012A", ID_DatotekaIzvod2012A) :
                new ObjectParameter("ID_DatotekaIzvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_SELECT", mergeOption, iD_DatotekaIzvod2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_UPDATE(long? ID_DatotekaIzvod2012A, long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvod2012AParameter = ID_DatotekaIzvod2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod2012A", ID_DatotekaIzvod2012A) :
                new ObjectParameter("ID_DatotekaIzvod2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_UPDATE", iD_DatotekaIzvod2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvod2012A> USP_DatotekaIzvod2012A_UPDATE(long? ID_DatotekaIzvod2012A, long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvod2012A).Assembly);
    
            var iD_DatotekaIzvod2012AParameter = ID_DatotekaIzvod2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod2012A", ID_DatotekaIzvod2012A) :
                new ObjectParameter("ID_DatotekaIzvod2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvod2012A>("USP_DatotekaIzvod2012A_UPDATE", mergeOption, iD_DatotekaIzvod2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvodGr2012A_DELETE(long? ID_DatotekaIzvodGr2012A)
        {
            var iD_DatotekaIzvodGr2012AParameter = ID_DatotekaIzvodGr2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodGr2012A", ID_DatotekaIzvodGr2012A) :
                new ObjectParameter("ID_DatotekaIzvodGr2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvodGr2012A_DELETE", iD_DatotekaIzvodGr2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string BIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MBR, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var bICParameter = BIC != null ?
                new ObjectParameter("BIC", BIC) :
                new ObjectParameter("BIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var mBRParameter = MBR != null ?
                new ObjectParameter("MBR", MBR) :
                new ObjectParameter("MBR", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_INSERT", iD_DatotekaIzvodParameter, vBDIParameter, bICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, mBRParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string BIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MBR, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var bICParameter = BIC != null ?
                new ObjectParameter("BIC", BIC) :
                new ObjectParameter("BIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var mBRParameter = MBR != null ?
                new ObjectParameter("MBR", MBR) :
                new ObjectParameter("MBR", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_INSERT", mergeOption, iD_DatotekaIzvodParameter, vBDIParameter, bICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, mBRParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_SELECT(long? ID_DatotekaIzvodGr2012A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodGr2012AParameter = ID_DatotekaIzvodGr2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodGr2012A", ID_DatotekaIzvodGr2012A) :
                new ObjectParameter("ID_DatotekaIzvodGr2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_SELECT", iD_DatotekaIzvodGr2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_SELECT(long? ID_DatotekaIzvodGr2012A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodGr2012AParameter = ID_DatotekaIzvodGr2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodGr2012A", ID_DatotekaIzvodGr2012A) :
                new ObjectParameter("ID_DatotekaIzvodGr2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_SELECT", mergeOption, iD_DatotekaIzvodGr2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_UPDATE(long? ID_DatotekaIzvodGr2012A, long? ID_DatotekaIzvod, string VBDI, string BIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MBR, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodGr2012AParameter = ID_DatotekaIzvodGr2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodGr2012A", ID_DatotekaIzvodGr2012A) :
                new ObjectParameter("ID_DatotekaIzvodGr2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var bICParameter = BIC != null ?
                new ObjectParameter("BIC", BIC) :
                new ObjectParameter("BIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var mBRParameter = MBR != null ?
                new ObjectParameter("MBR", MBR) :
                new ObjectParameter("MBR", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_UPDATE", iD_DatotekaIzvodGr2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, bICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, mBRParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodGr2012A> USP_DatotekaIzvodGr2012A_UPDATE(long? ID_DatotekaIzvodGr2012A, long? ID_DatotekaIzvod, string VBDI, string BIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MBR, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodGr2012A).Assembly);
    
            var iD_DatotekaIzvodGr2012AParameter = ID_DatotekaIzvodGr2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodGr2012A", ID_DatotekaIzvodGr2012A) :
                new ObjectParameter("ID_DatotekaIzvodGr2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var bICParameter = BIC != null ?
                new ObjectParameter("BIC", BIC) :
                new ObjectParameter("BIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var mBRParameter = MBR != null ?
                new ObjectParameter("MBR", MBR) :
                new ObjectParameter("MBR", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodGr2012A>("USP_DatotekaIzvodGr2012A_UPDATE", mergeOption, iD_DatotekaIzvodGr2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, bICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, mBRParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvodSt2012A_DELETE(long? ID_DatotekaIzvodSt2012A)
        {
            var iD_DatotekaIzvodSt2012AParameter = ID_DatotekaIzvodSt2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodSt2012A", ID_DatotekaIzvodSt2012A) :
                new ObjectParameter("ID_DatotekaIzvodSt2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvodSt2012A_DELETE", iD_DatotekaIzvodSt2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_INSERT", iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_INSERT(long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_INSERT", mergeOption, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_SELECT(long? ID_DatotekaIzvodSt2012A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodSt2012AParameter = ID_DatotekaIzvodSt2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodSt2012A", ID_DatotekaIzvodSt2012A) :
                new ObjectParameter("ID_DatotekaIzvodSt2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_SELECT", iD_DatotekaIzvodSt2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_SELECT(long? ID_DatotekaIzvodSt2012A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodSt2012AParameter = ID_DatotekaIzvodSt2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodSt2012A", ID_DatotekaIzvodSt2012A) :
                new ObjectParameter("ID_DatotekaIzvodSt2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_SELECT", mergeOption, iD_DatotekaIzvodSt2012AParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_UPDATE(long? ID_DatotekaIzvodSt2012A, long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodSt2012AParameter = ID_DatotekaIzvodSt2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodSt2012A", ID_DatotekaIzvodSt2012A) :
                new ObjectParameter("ID_DatotekaIzvodSt2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_UPDATE", iD_DatotekaIzvodSt2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodSt2012A> USP_DatotekaIzvodSt2012A_UPDATE(long? ID_DatotekaIzvodSt2012A, long? ID_DatotekaIzvod, string VBDI, string Naziv, string OIB, int? Vrsta, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodSt2012A).Assembly);
    
            var iD_DatotekaIzvodSt2012AParameter = ID_DatotekaIzvodSt2012A.HasValue ?
                new ObjectParameter("ID_DatotekaIzvodSt2012A", ID_DatotekaIzvodSt2012A) :
                new ObjectParameter("ID_DatotekaIzvodSt2012A", typeof(long));
    
            var iD_DatotekaIzvodParameter = ID_DatotekaIzvod.HasValue ?
                new ObjectParameter("ID_DatotekaIzvod", ID_DatotekaIzvod) :
                new ObjectParameter("ID_DatotekaIzvod", typeof(long));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var vrstaParameter = Vrsta.HasValue ?
                new ObjectParameter("Vrsta", Vrsta) :
                new ObjectParameter("Vrsta", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodSt2012A>("USP_DatotekaIzvodSt2012A_UPDATE", mergeOption, iD_DatotekaIzvodSt2012AParameter, iD_DatotekaIzvodParameter, vBDIParameter, nazivParameter, oIBParameter, vrstaParameter, datumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvodVerzija_DELETE(int? IDDatotekaIzvodVerzija)
        {
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvodVerzija_DELETE", iDDatotekaIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_INSERT(int? IDDatotekaIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_INSERT", iDDatotekaIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_INSERT(int? IDDatotekaIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_INSERT", mergeOption, iDDatotekaIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_SELECT(int? IDDatotekaIzvodVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_SELECT", iDDatotekaIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_SELECT(int? IDDatotekaIzvodVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_SELECT", mergeOption, iDDatotekaIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_UPDATE(int? IDDatotekaIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_UPDATE", iDDatotekaIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzija> USP_DatotekaIzvodVerzija_UPDATE(int? IDDatotekaIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzija).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzija>("USP_DatotekaIzvodVerzija_UPDATE", mergeOption, iDDatotekaIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaIzvodVerzijaTablica_DELETE(int? IDDatotekaIzvodVerzijaTablica)
        {
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaIzvodVerzijaTablica_DELETE", iDDatotekaIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_INSERT(int? IDDatotekaIzvodVerzija, int? IDDatotekaIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_INSERT", iDDatotekaIzvodVerzijaParameter, iDDatotekaIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_INSERT(int? IDDatotekaIzvodVerzija, int? IDDatotekaIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_INSERT", mergeOption, iDDatotekaIzvodVerzijaParameter, iDDatotekaIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_SELECT(int? IDDatotekaIzvodVerzijaTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_SELECT", iDDatotekaIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_SELECT(int? IDDatotekaIzvodVerzijaTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_SELECT", mergeOption, iDDatotekaIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_UPDATE(int? IDDatotekaIzvodVerzija, int? IDDatotekaIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_UPDATE", iDDatotekaIzvodVerzijaParameter, iDDatotekaIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DatotekaIzvodVerzijaTablica> USP_DatotekaIzvodVerzijaTablica_UPDATE(int? IDDatotekaIzvodVerzija, int? IDDatotekaIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaIzvodVerzijaTablica).Assembly);
    
            var iDDatotekaIzvodVerzijaParameter = IDDatotekaIzvodVerzija.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzija", IDDatotekaIzvodVerzija) :
                new ObjectParameter("IDDatotekaIzvodVerzija", typeof(int));
    
            var iDDatotekaIzvodVerzijaTablicaParameter = IDDatotekaIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", IDDatotekaIzvodVerzijaTablica) :
                new ObjectParameter("IDDatotekaIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaIzvodVerzijaTablica>("USP_DatotekaIzvodVerzijaTablica_UPDATE", mergeOption, iDDatotekaIzvodVerzijaParameter, iDDatotekaIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaPolje_DELETE(long? ID_DatotekaPolje)
        {
            var iD_DatotekaPoljeParameter = ID_DatotekaPolje.HasValue ?
                new ObjectParameter("ID_DatotekaPolje", ID_DatotekaPolje) :
                new ObjectParameter("ID_DatotekaPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaPolje_DELETE", iD_DatotekaPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_INSERT(long? ID_Datoteka, long? ID_DatotekaVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, string Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            var zapisParameter = Zapis != null ?
                new ObjectParameter("Zapis", Zapis) :
                new ObjectParameter("Zapis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_INSERT", iD_DatotekaParameter, iD_DatotekaVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter, zapisParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_INSERT(long? ID_Datoteka, long? ID_DatotekaVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, string Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            var zapisParameter = Zapis != null ?
                new ObjectParameter("Zapis", Zapis) :
                new ObjectParameter("Zapis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_INSERT", mergeOption, iD_DatotekaParameter, iD_DatotekaVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter, zapisParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_SELECT(long? ID_DatotekaPolje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaPoljeParameter = ID_DatotekaPolje.HasValue ?
                new ObjectParameter("ID_DatotekaPolje", ID_DatotekaPolje) :
                new ObjectParameter("ID_DatotekaPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_SELECT", iD_DatotekaPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_SELECT(long? ID_DatotekaPolje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaPoljeParameter = ID_DatotekaPolje.HasValue ?
                new ObjectParameter("ID_DatotekaPolje", ID_DatotekaPolje) :
                new ObjectParameter("ID_DatotekaPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_SELECT", mergeOption, iD_DatotekaPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_UPDATE(long? ID_DatotekaPolje, long? ID_Datoteka, long? ID_DatotekaVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, string Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaPoljeParameter = ID_DatotekaPolje.HasValue ?
                new ObjectParameter("ID_DatotekaPolje", ID_DatotekaPolje) :
                new ObjectParameter("ID_DatotekaPolje", typeof(long));
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            var zapisParameter = Zapis != null ?
                new ObjectParameter("Zapis", Zapis) :
                new ObjectParameter("Zapis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_UPDATE", iD_DatotekaPoljeParameter, iD_DatotekaParameter, iD_DatotekaVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter, zapisParameter);
        }
    
        public virtual ObjectResult<DatotekaPolje> USP_DatotekaPolje_UPDATE(long? ID_DatotekaPolje, long? ID_Datoteka, long? ID_DatotekaVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, string Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaPolje).Assembly);
    
            var iD_DatotekaPoljeParameter = ID_DatotekaPolje.HasValue ?
                new ObjectParameter("ID_DatotekaPolje", ID_DatotekaPolje) :
                new ObjectParameter("ID_DatotekaPolje", typeof(long));
    
            var iD_DatotekaParameter = ID_Datoteka.HasValue ?
                new ObjectParameter("ID_Datoteka", ID_Datoteka) :
                new ObjectParameter("ID_Datoteka", typeof(long));
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            var zapisParameter = Zapis != null ?
                new ObjectParameter("Zapis", Zapis) :
                new ObjectParameter("Zapis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaPolje>("USP_DatotekaPolje_UPDATE", mergeOption, iD_DatotekaPoljeParameter, iD_DatotekaParameter, iD_DatotekaVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter, zapisParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaVr_DELETE(long? ID_DatotekaVr)
        {
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaVr_DELETE", iD_DatotekaVrParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_SELECT(long? ID_DatotekaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_SELECT", iD_DatotekaVrParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_SELECT(long? ID_DatotekaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_SELECT", mergeOption, iD_DatotekaVrParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_UPDATE(long? ID_DatotekaVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_UPDATE", iD_DatotekaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DatotekaVr> USP_DatotekaVr_UPDATE(long? ID_DatotekaVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVr).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVr>("USP_DatotekaVr_UPDATE", mergeOption, iD_DatotekaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaVrPolje_DELETE(long? ID_DatotekaVrPolje)
        {
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaVrPolje_DELETE", iD_DatotekaVrPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_INSERT(long? ID_DatotekaVrVerzija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_DatotekaVrPoljeTip, int? Duljina, int? Pozicija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var duljinaParameter = Duljina.HasValue ?
                new ObjectParameter("Duljina", Duljina) :
                new ObjectParameter("Duljina", typeof(int));
    
            var pozicijaParameter = Pozicija.HasValue ?
                new ObjectParameter("Pozicija", Pozicija) :
                new ObjectParameter("Pozicija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_INSERT", iD_DatotekaVrVerzijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_DatotekaVrPoljeTipParameter, duljinaParameter, pozicijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_INSERT(long? ID_DatotekaVrVerzija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_DatotekaVrPoljeTip, int? Duljina, int? Pozicija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var duljinaParameter = Duljina.HasValue ?
                new ObjectParameter("Duljina", Duljina) :
                new ObjectParameter("Duljina", typeof(int));
    
            var pozicijaParameter = Pozicija.HasValue ?
                new ObjectParameter("Pozicija", Pozicija) :
                new ObjectParameter("Pozicija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_INSERT", mergeOption, iD_DatotekaVrVerzijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_DatotekaVrPoljeTipParameter, duljinaParameter, pozicijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_SELECT(long? ID_DatotekaVrPolje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_SELECT", iD_DatotekaVrPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_SELECT(long? ID_DatotekaVrPolje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_SELECT", mergeOption, iD_DatotekaVrPoljeParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_UPDATE(long? ID_DatotekaVrPolje, long? ID_DatotekaVrVerzija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_DatotekaVrPoljeTip, int? Duljina, int? Pozicija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var duljinaParameter = Duljina.HasValue ?
                new ObjectParameter("Duljina", Duljina) :
                new ObjectParameter("Duljina", typeof(int));
    
            var pozicijaParameter = Pozicija.HasValue ?
                new ObjectParameter("Pozicija", Pozicija) :
                new ObjectParameter("Pozicija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_UPDATE", iD_DatotekaVrPoljeParameter, iD_DatotekaVrVerzijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_DatotekaVrPoljeTipParameter, duljinaParameter, pozicijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPolje> USP_DatotekaVrPolje_UPDATE(long? ID_DatotekaVrPolje, long? ID_DatotekaVrVerzija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_DatotekaVrPoljeTip, int? Duljina, int? Pozicija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPolje).Assembly);
    
            var iD_DatotekaVrPoljeParameter = ID_DatotekaVrPolje.HasValue ?
                new ObjectParameter("ID_DatotekaVrPolje", ID_DatotekaVrPolje) :
                new ObjectParameter("ID_DatotekaVrPolje", typeof(long));
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var duljinaParameter = Duljina.HasValue ?
                new ObjectParameter("Duljina", Duljina) :
                new ObjectParameter("Duljina", typeof(int));
    
            var pozicijaParameter = Pozicija.HasValue ?
                new ObjectParameter("Pozicija", Pozicija) :
                new ObjectParameter("Pozicija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPolje>("USP_DatotekaVrPolje_UPDATE", mergeOption, iD_DatotekaVrPoljeParameter, iD_DatotekaVrVerzijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_DatotekaVrPoljeTipParameter, duljinaParameter, pozicijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaVrPoljeTip_DELETE(long? ID_DatotekaVrPoljeTip)
        {
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaVrPoljeTip_DELETE", iD_DatotekaVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_SELECT(long? ID_DatotekaVrPoljeTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_SELECT", iD_DatotekaVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_SELECT(long? ID_DatotekaVrPoljeTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_SELECT", mergeOption, iD_DatotekaVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_UPDATE(long? ID_DatotekaVrPoljeTip, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_UPDATE", iD_DatotekaVrPoljeTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<DatotekaVrPoljeTip> USP_DatotekaVrPoljeTip_UPDATE(long? ID_DatotekaVrPoljeTip, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrPoljeTip).Assembly);
    
            var iD_DatotekaVrPoljeTipParameter = ID_DatotekaVrPoljeTip.HasValue ?
                new ObjectParameter("ID_DatotekaVrPoljeTip", ID_DatotekaVrPoljeTip) :
                new ObjectParameter("ID_DatotekaVrPoljeTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrPoljeTip>("USP_DatotekaVrPoljeTip_UPDATE", mergeOption, iD_DatotekaVrPoljeTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<int?> USP_DatotekaVrVerzija_DELETE(long? ID_DatotekaVrVerzija)
        {
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DatotekaVrVerzija_DELETE", iD_DatotekaVrVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_INSERT(long? ID_DatotekaVr, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_INSERT", iD_DatotekaVrParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_INSERT(long? ID_DatotekaVr, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_INSERT", mergeOption, iD_DatotekaVrParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_SELECT(long? ID_DatotekaVrVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_SELECT", iD_DatotekaVrVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_SELECT(long? ID_DatotekaVrVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_SELECT", mergeOption, iD_DatotekaVrVerzijaParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_UPDATE(long? ID_DatotekaVrVerzija, long? ID_DatotekaVr, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_UPDATE", iD_DatotekaVrVerzijaParameter, iD_DatotekaVrParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DatotekaVrVerzija> USP_DatotekaVrVerzija_UPDATE(long? ID_DatotekaVrVerzija, long? ID_DatotekaVr, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DatotekaVrVerzija).Assembly);
    
            var iD_DatotekaVrVerzijaParameter = ID_DatotekaVrVerzija.HasValue ?
                new ObjectParameter("ID_DatotekaVrVerzija", ID_DatotekaVrVerzija) :
                new ObjectParameter("ID_DatotekaVrVerzija", typeof(long));
    
            var iD_DatotekaVrParameter = ID_DatotekaVr.HasValue ?
                new ObjectParameter("ID_DatotekaVr", ID_DatotekaVr) :
                new ObjectParameter("ID_DatotekaVr", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatotekaVrVerzija>("USP_DatotekaVrVerzija_UPDATE", mergeOption, iD_DatotekaVrVerzijaParameter, iD_DatotekaVrParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_Davanje_DELETE(long? ID_Davanje)
        {
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Davanje_DELETE", iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_INSERT(int? IDDavanjeTablica, long? IDDavanje, string Naziv, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, decimal? IznosOd, decimal? IznosDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var iDDavanjeParameter = IDDavanje.HasValue ?
                new ObjectParameter("IDDavanje", IDDavanje) :
                new ObjectParameter("IDDavanje", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iznosOdParameter = IznosOd.HasValue ?
                new ObjectParameter("IznosOd", IznosOd) :
                new ObjectParameter("IznosOd", typeof(decimal));
    
            var iznosDoParameter = IznosDo.HasValue ?
                new ObjectParameter("IznosDo", IznosDo) :
                new ObjectParameter("IznosDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_INSERT", iDDavanjeTablicaParameter, iDDavanjeParameter, nazivParameter, stopaParameter, datumOdParameter, datumDoParameter, iznosOdParameter, iznosDoParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_INSERT(int? IDDavanjeTablica, long? IDDavanje, string Naziv, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, decimal? IznosOd, decimal? IznosDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var iDDavanjeParameter = IDDavanje.HasValue ?
                new ObjectParameter("IDDavanje", IDDavanje) :
                new ObjectParameter("IDDavanje", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iznosOdParameter = IznosOd.HasValue ?
                new ObjectParameter("IznosOd", IznosOd) :
                new ObjectParameter("IznosOd", typeof(decimal));
    
            var iznosDoParameter = IznosDo.HasValue ?
                new ObjectParameter("IznosDo", IznosDo) :
                new ObjectParameter("IznosDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_INSERT", mergeOption, iDDavanjeTablicaParameter, iDDavanjeParameter, nazivParameter, stopaParameter, datumOdParameter, datumDoParameter, iznosOdParameter, iznosDoParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_SELECT(long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_SELECT", iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_SELECT(long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_SELECT", mergeOption, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_UPDATE(long? ID_Davanje, int? IDDavanjeTablica, long? IDDavanje, string Naziv, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, decimal? IznosOd, decimal? IznosDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var iDDavanjeParameter = IDDavanje.HasValue ?
                new ObjectParameter("IDDavanje", IDDavanje) :
                new ObjectParameter("IDDavanje", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iznosOdParameter = IznosOd.HasValue ?
                new ObjectParameter("IznosOd", IznosOd) :
                new ObjectParameter("IznosOd", typeof(decimal));
    
            var iznosDoParameter = IznosDo.HasValue ?
                new ObjectParameter("IznosDo", IznosDo) :
                new ObjectParameter("IznosDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_UPDATE", iD_DavanjeParameter, iDDavanjeTablicaParameter, iDDavanjeParameter, nazivParameter, stopaParameter, datumOdParameter, datumDoParameter, iznosOdParameter, iznosDoParameter);
        }
    
        public virtual ObjectResult<Davanje> USP_Davanje_UPDATE(long? ID_Davanje, int? IDDavanjeTablica, long? IDDavanje, string Naziv, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, decimal? IznosOd, decimal? IznosDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Davanje).Assembly);
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var iDDavanjeParameter = IDDavanje.HasValue ?
                new ObjectParameter("IDDavanje", IDDavanje) :
                new ObjectParameter("IDDavanje", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iznosOdParameter = IznosOd.HasValue ?
                new ObjectParameter("IznosOd", IznosOd) :
                new ObjectParameter("IznosOd", typeof(decimal));
    
            var iznosDoParameter = IznosDo.HasValue ?
                new ObjectParameter("IznosDo", IznosDo) :
                new ObjectParameter("IznosDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Davanje>("USP_Davanje_UPDATE", mergeOption, iD_DavanjeParameter, iDDavanjeTablicaParameter, iDDavanjeParameter, nazivParameter, stopaParameter, datumOdParameter, datumDoParameter, iznosOdParameter, iznosDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjeDoprinosDohodak_DELETE(int? IDDavanjeDoprinosDohodak)
        {
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjeDoprinosDohodak_DELETE", iDDavanjeDoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_INSERT(int? IDDavanjeDoprinosDohodak, int? IDDavanjeDoprinosDohodakVr, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_INSERT", iDDavanjeDoprinosDohodakParameter, iDDavanjeDoprinosDohodakVrParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_INSERT(int? IDDavanjeDoprinosDohodak, int? IDDavanjeDoprinosDohodakVr, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_INSERT", mergeOption, iDDavanjeDoprinosDohodakParameter, iDDavanjeDoprinosDohodakVrParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_SELECT(int? IDDavanjeDoprinosDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_SELECT", iDDavanjeDoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_SELECT(int? IDDavanjeDoprinosDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_SELECT", mergeOption, iDDavanjeDoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_UPDATE(int? IDDavanjeDoprinosDohodak, int? IDDavanjeDoprinosDohodakVr, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_UPDATE", iDDavanjeDoprinosDohodakParameter, iDDavanjeDoprinosDohodakVrParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodak> USP_DavanjeDoprinosDohodak_UPDATE(int? IDDavanjeDoprinosDohodak, int? IDDavanjeDoprinosDohodakVr, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodak).Assembly);
    
            var iDDavanjeDoprinosDohodakParameter = IDDavanjeDoprinosDohodak.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodak", IDDavanjeDoprinosDohodak) :
                new ObjectParameter("IDDavanjeDoprinosDohodak", typeof(int));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodak>("USP_DavanjeDoprinosDohodak_UPDATE", mergeOption, iDDavanjeDoprinosDohodakParameter, iDDavanjeDoprinosDohodakVrParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjeDoprinosDohodakVr_DELETE(int? IDDavanjeDoprinosDohodakVr)
        {
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjeDoprinosDohodakVr_DELETE", iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_INSERT(int? IDDavanjeDoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_INSERT", iDDavanjeDoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_INSERT(int? IDDavanjeDoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_INSERT", mergeOption, iDDavanjeDoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_SELECT(int? IDDavanjeDoprinosDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_SELECT", iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_SELECT(int? IDDavanjeDoprinosDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_SELECT", mergeOption, iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_UPDATE(int? IDDavanjeDoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_UPDATE", iDDavanjeDoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeDoprinosDohodakVr> USP_DavanjeDoprinosDohodakVr_UPDATE(int? IDDavanjeDoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeDoprinosDohodakVr).Assembly);
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeDoprinosDohodakVr>("USP_DavanjeDoprinosDohodakVr_UPDATE", mergeOption, iDDavanjeDoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjePDVVr_DELETE(int? IDDavanjePDVVr)
        {
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjePDVVr_DELETE", iDDavanjePDVVrParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_INSERT(int? IDDavanjePDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_INSERT", iDDavanjePDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_INSERT(int? IDDavanjePDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_INSERT", mergeOption, iDDavanjePDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_SELECT(int? IDDavanjePDVVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_SELECT", iDDavanjePDVVrParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_SELECT(int? IDDavanjePDVVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_SELECT", mergeOption, iDDavanjePDVVrParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_UPDATE(int? IDDavanjePDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_UPDATE", iDDavanjePDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjePDVVr> USP_DavanjePDVVr_UPDATE(int? IDDavanjePDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePDVVr).Assembly);
    
            var iDDavanjePDVVrParameter = IDDavanjePDVVr.HasValue ?
                new ObjectParameter("IDDavanjePDVVr", IDDavanjePDVVr) :
                new ObjectParameter("IDDavanjePDVVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePDVVr>("USP_DavanjePDVVr_UPDATE", mergeOption, iDDavanjePDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjePorezDohodakVr_DELETE(int? IDDavanjePorezDohodakVr)
        {
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjePorezDohodakVr_DELETE", iDDavanjePorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_INSERT(int? IDDavanjePorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_INSERT", iDDavanjePorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_INSERT(int? IDDavanjePorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_INSERT", mergeOption, iDDavanjePorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_SELECT(int? IDDavanjePorezDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_SELECT", iDDavanjePorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_SELECT(int? IDDavanjePorezDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_SELECT", mergeOption, iDDavanjePorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_UPDATE(int? IDDavanjePorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_UPDATE", iDDavanjePorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePorezDohodakVr> USP_DavanjePorezDohodakVr_UPDATE(int? IDDavanjePorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePorezDohodakVr).Assembly);
    
            var iDDavanjePorezDohodakVrParameter = IDDavanjePorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePorezDohodakVr", IDDavanjePorezDohodakVr) :
                new ObjectParameter("IDDavanjePorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePorezDohodakVr>("USP_DavanjePorezDohodakVr_UPDATE", mergeOption, iDDavanjePorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjePosebanPorezDohodakVr_DELETE(int? IDDavanjePosebanPorezDohodakVr)
        {
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjePosebanPorezDohodakVr_DELETE", iDDavanjePosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_INSERT(int? IDDavanjePosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_INSERT", iDDavanjePosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_INSERT(int? IDDavanjePosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_INSERT", mergeOption, iDDavanjePosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_SELECT(int? IDDavanjePosebanPorezDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_SELECT", iDDavanjePosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_SELECT(int? IDDavanjePosebanPorezDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_SELECT", mergeOption, iDDavanjePosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_UPDATE(int? IDDavanjePosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_UPDATE", iDDavanjePosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<DavanjePosebanPorezDohodakVr> USP_DavanjePosebanPorezDohodakVr_UPDATE(int? IDDavanjePosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjePosebanPorezDohodakVr).Assembly);
    
            var iDDavanjePosebanPorezDohodakVrParameter = IDDavanjePosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", IDDavanjePosebanPorezDohodakVr) :
                new ObjectParameter("IDDavanjePosebanPorezDohodakVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjePosebanPorezDohodakVr>("USP_DavanjePosebanPorezDohodakVr_UPDATE", mergeOption, iDDavanjePosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjeTablica_DELETE(int? IDDavanjeTablica)
        {
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjeTablica_DELETE", iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_INSERT(int? IDDavanjeTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_INSERT", iDDavanjeTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_INSERT(int? IDDavanjeTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_INSERT", mergeOption, iDDavanjeTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_SELECT(int? IDDavanjeTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_SELECT", iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_SELECT(int? IDDavanjeTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_SELECT", mergeOption, iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_UPDATE(int? IDDavanjeTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_UPDATE", iDDavanjeTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<DavanjeTablica> USP_DavanjeTablica_UPDATE(int? IDDavanjeTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeTablica).Assembly);
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeTablica>("USP_DavanjeTablica_UPDATE", mergeOption, iDDavanjeTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjeVr_DELETE(int? IDDavanjeVr)
        {
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjeVr_DELETE", iDDavanjeVrParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_INSERT(int? IDDavanjeVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_INSERT", iDDavanjeVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_INSERT(int? IDDavanjeVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_INSERT", mergeOption, iDDavanjeVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_SELECT(int? IDDavanjeVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_SELECT", iDDavanjeVrParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_SELECT(int? IDDavanjeVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_SELECT", mergeOption, iDDavanjeVrParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_UPDATE(int? IDDavanjeVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_UPDATE", iDDavanjeVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<DavanjeVr> USP_DavanjeVr_UPDATE(int? IDDavanjeVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVr).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVr>("USP_DavanjeVr_UPDATE", mergeOption, iDDavanjeVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DavanjeVrTablica_DELETE(int? IDDavanjeVr, int? IDDavanjeTablica)
        {
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DavanjeVrTablica_DELETE", iDDavanjeVrParameter, iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_INSERT(int? IDDavanjeVr, int? IDDavanjeTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_INSERT", iDDavanjeVrParameter, iDDavanjeTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_INSERT(int? IDDavanjeVr, int? IDDavanjeTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_INSERT", mergeOption, iDDavanjeVrParameter, iDDavanjeTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_SELECT(int? IDDavanjeVr, int? IDDavanjeTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_SELECT", iDDavanjeVrParameter, iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_SELECT(int? IDDavanjeVr, int? IDDavanjeTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_SELECT", mergeOption, iDDavanjeVrParameter, iDDavanjeTablicaParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_UPDATE(int? IDDavanjeVr, int? IDDavanjeTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_UPDATE", iDDavanjeVrParameter, iDDavanjeTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<DavanjeVrTablica> USP_DavanjeVrTablica_UPDATE(int? IDDavanjeVr, int? IDDavanjeTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DavanjeVrTablica).Assembly);
    
            var iDDavanjeVrParameter = IDDavanjeVr.HasValue ?
                new ObjectParameter("IDDavanjeVr", IDDavanjeVr) :
                new ObjectParameter("IDDavanjeVr", typeof(int));
    
            var iDDavanjeTablicaParameter = IDDavanjeTablica.HasValue ?
                new ObjectParameter("IDDavanjeTablica", IDDavanjeTablica) :
                new ObjectParameter("IDDavanjeTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DavanjeVrTablica>("USP_DavanjeVrTablica_UPDATE", mergeOption, iDDavanjeVrParameter, iDDavanjeTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<int?> USP_Dohodak_DELETE(long? ID_Dohodak)
        {
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Dohodak_DELETE", iD_DohodakParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_INSERT(long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Godina, int? Mjesec, DateTime? DatumOd, DateTime? DatumDo, DateTime? DatumIsplata, DateTime? DatumPodnosenje, DateTime? DatumUplataDoprinos, DateTime? DatumUplataPorez, long? ID_PrimateljKoeficijentGr, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmObveznikVr2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var datumIsplataParameter = DatumIsplata.HasValue ?
                new ObjectParameter("DatumIsplata", DatumIsplata) :
                new ObjectParameter("DatumIsplata", typeof(System.DateTime));
    
            var datumPodnosenjeParameter = DatumPodnosenje.HasValue ?
                new ObjectParameter("DatumPodnosenje", DatumPodnosenje) :
                new ObjectParameter("DatumPodnosenje", typeof(System.DateTime));
    
            var datumUplataDoprinosParameter = DatumUplataDoprinos.HasValue ?
                new ObjectParameter("DatumUplataDoprinos", DatumUplataDoprinos) :
                new ObjectParameter("DatumUplataDoprinos", typeof(System.DateTime));
    
            var datumUplataPorezParameter = DatumUplataPorez.HasValue ?
                new ObjectParameter("DatumUplataPorez", DatumUplataPorez) :
                new ObjectParameter("DatumUplataPorez", typeof(System.DateTime));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_INSERT", iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, godinaParameter, mjesecParameter, datumOdParameter, datumDoParameter, datumIsplataParameter, datumPodnosenjeParameter, datumUplataDoprinosParameter, datumUplataPorezParameter, iD_PrimateljKoeficijentGrParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_INSERT(long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Godina, int? Mjesec, DateTime? DatumOd, DateTime? DatumDo, DateTime? DatumIsplata, DateTime? DatumPodnosenje, DateTime? DatumUplataDoprinos, DateTime? DatumUplataPorez, long? ID_PrimateljKoeficijentGr, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmObveznikVr2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var datumIsplataParameter = DatumIsplata.HasValue ?
                new ObjectParameter("DatumIsplata", DatumIsplata) :
                new ObjectParameter("DatumIsplata", typeof(System.DateTime));
    
            var datumPodnosenjeParameter = DatumPodnosenje.HasValue ?
                new ObjectParameter("DatumPodnosenje", DatumPodnosenje) :
                new ObjectParameter("DatumPodnosenje", typeof(System.DateTime));
    
            var datumUplataDoprinosParameter = DatumUplataDoprinos.HasValue ?
                new ObjectParameter("DatumUplataDoprinos", DatumUplataDoprinos) :
                new ObjectParameter("DatumUplataDoprinos", typeof(System.DateTime));
    
            var datumUplataPorezParameter = DatumUplataPorez.HasValue ?
                new ObjectParameter("DatumUplataPorez", DatumUplataPorez) :
                new ObjectParameter("DatumUplataPorez", typeof(System.DateTime));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_INSERT", mergeOption, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, godinaParameter, mjesecParameter, datumOdParameter, datumDoParameter, datumIsplataParameter, datumPodnosenjeParameter, datumUplataDoprinosParameter, datumUplataPorezParameter, iD_PrimateljKoeficijentGrParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_SELECT(long? ID_Dohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_SELECT", iD_DohodakParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_SELECT(long? ID_Dohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_SELECT", mergeOption, iD_DohodakParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_UPDATE(long? ID_Dohodak, long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Godina, int? Mjesec, DateTime? DatumOd, DateTime? DatumDo, DateTime? DatumIsplata, DateTime? DatumPodnosenje, DateTime? DatumUplataDoprinos, DateTime? DatumUplataPorez, long? ID_PrimateljKoeficijentGr, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmObveznikVr2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var datumIsplataParameter = DatumIsplata.HasValue ?
                new ObjectParameter("DatumIsplata", DatumIsplata) :
                new ObjectParameter("DatumIsplata", typeof(System.DateTime));
    
            var datumPodnosenjeParameter = DatumPodnosenje.HasValue ?
                new ObjectParameter("DatumPodnosenje", DatumPodnosenje) :
                new ObjectParameter("DatumPodnosenje", typeof(System.DateTime));
    
            var datumUplataDoprinosParameter = DatumUplataDoprinos.HasValue ?
                new ObjectParameter("DatumUplataDoprinos", DatumUplataDoprinos) :
                new ObjectParameter("DatumUplataDoprinos", typeof(System.DateTime));
    
            var datumUplataPorezParameter = DatumUplataPorez.HasValue ?
                new ObjectParameter("DatumUplataPorez", DatumUplataPorez) :
                new ObjectParameter("DatumUplataPorez", typeof(System.DateTime));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_UPDATE", iD_DohodakParameter, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, godinaParameter, mjesecParameter, datumOdParameter, datumDoParameter, datumIsplataParameter, datumPodnosenjeParameter, datumUplataDoprinosParameter, datumUplataPorezParameter, iD_PrimateljKoeficijentGrParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<Dohodak> USP_Dohodak_UPDATE(long? ID_Dohodak, long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Godina, int? Mjesec, DateTime? DatumOd, DateTime? DatumDo, DateTime? DatumIsplata, DateTime? DatumPodnosenje, DateTime? DatumUplataDoprinos, DateTime? DatumUplataPorez, long? ID_PrimateljKoeficijentGr, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmObveznikVr2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Dohodak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var datumIsplataParameter = DatumIsplata.HasValue ?
                new ObjectParameter("DatumIsplata", DatumIsplata) :
                new ObjectParameter("DatumIsplata", typeof(System.DateTime));
    
            var datumPodnosenjeParameter = DatumPodnosenje.HasValue ?
                new ObjectParameter("DatumPodnosenje", DatumPodnosenje) :
                new ObjectParameter("DatumPodnosenje", typeof(System.DateTime));
    
            var datumUplataDoprinosParameter = DatumUplataDoprinos.HasValue ?
                new ObjectParameter("DatumUplataDoprinos", DatumUplataDoprinos) :
                new ObjectParameter("DatumUplataDoprinos", typeof(System.DateTime));
    
            var datumUplataPorezParameter = DatumUplataPorez.HasValue ?
                new ObjectParameter("DatumUplataPorez", DatumUplataPorez) :
                new ObjectParameter("DatumUplataPorez", typeof(System.DateTime));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohodak>("USP_Dohodak_UPDATE", mergeOption, iD_DohodakParameter, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, godinaParameter, mjesecParameter, datumOdParameter, datumDoParameter, datumIsplataParameter, datumPodnosenjeParameter, datumUplataDoprinosParameter, datumUplataPorezParameter, iD_PrimateljKoeficijentGrParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakDavanje_DELETE(long? ID_DohodakDavanje)
        {
            var iD_DohodakDavanjeParameter = ID_DohodakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakDavanje", ID_DohodakDavanje) :
                new ObjectParameter("ID_DohodakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakDavanje_DELETE", iD_DohodakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_INSERT(long? ID_Dohodak, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_INSERT", iD_DohodakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_INSERT(long? ID_Dohodak, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_INSERT", mergeOption, iD_DohodakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_SELECT(long? ID_DohodakDavanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakDavanjeParameter = ID_DohodakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakDavanje", ID_DohodakDavanje) :
                new ObjectParameter("ID_DohodakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_SELECT", iD_DohodakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_SELECT(long? ID_DohodakDavanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakDavanjeParameter = ID_DohodakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakDavanje", ID_DohodakDavanje) :
                new ObjectParameter("ID_DohodakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_SELECT", mergeOption, iD_DohodakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_UPDATE(long? ID_DohodakDavanje, long? ID_Dohodak, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakDavanjeParameter = ID_DohodakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakDavanje", ID_DohodakDavanje) :
                new ObjectParameter("ID_DohodakDavanje", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_UPDATE", iD_DohodakDavanjeParameter, iD_DohodakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakDavanje> USP_DohodakDavanje_UPDATE(long? ID_DohodakDavanje, long? ID_Dohodak, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakDavanje).Assembly);
    
            var iD_DohodakDavanjeParameter = ID_DohodakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakDavanje", ID_DohodakDavanje) :
                new ObjectParameter("ID_DohodakDavanje", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakDavanje>("USP_DohodakDavanje_UPDATE", mergeOption, iD_DohodakDavanjeParameter, iD_DohodakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakIsplatitelj_DELETE(long? ID_DohodakIsplatitelj)
        {
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakIsplatitelj_DELETE", iD_DohodakIsplatiteljParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_INSERT(long? ID_PoslovniSubjekt, long? ID_SubjektRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_INSERT", iD_PoslovniSubjektParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_INSERT(long? ID_PoslovniSubjekt, long? ID_SubjektRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_INSERT", mergeOption, iD_PoslovniSubjektParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_SELECT(long? ID_DohodakIsplatitelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_SELECT", iD_DohodakIsplatiteljParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_SELECT(long? ID_DohodakIsplatitelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_SELECT", mergeOption, iD_DohodakIsplatiteljParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_UPDATE(long? ID_DohodakIsplatitelj, long? ID_PoslovniSubjekt, long? ID_SubjektRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_UPDATE", iD_DohodakIsplatiteljParameter, iD_PoslovniSubjektParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<DohodakIsplatitelj> USP_DohodakIsplatitelj_UPDATE(long? ID_DohodakIsplatitelj, long? ID_PoslovniSubjekt, long? ID_SubjektRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakIsplatitelj).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakIsplatitelj>("USP_DohodakIsplatitelj_UPDATE", mergeOption, iD_DohodakIsplatiteljParameter, iD_PoslovniSubjektParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakOdbitak_DELETE(long? ID_DohodakOdbitak)
        {
            var iD_DohodakOdbitakParameter = ID_DohodakOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakOdbitak", ID_DohodakOdbitak) :
                new ObjectParameter("ID_DohodakOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakOdbitak_DELETE", iD_DohodakOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_INSERT(long? ID_Dohodak, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_INSERT", iD_DohodakParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_INSERT(long? ID_Dohodak, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_INSERT", mergeOption, iD_DohodakParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_SELECT(long? ID_DohodakOdbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakOdbitakParameter = ID_DohodakOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakOdbitak", ID_DohodakOdbitak) :
                new ObjectParameter("ID_DohodakOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_SELECT", iD_DohodakOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_SELECT(long? ID_DohodakOdbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakOdbitakParameter = ID_DohodakOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakOdbitak", ID_DohodakOdbitak) :
                new ObjectParameter("ID_DohodakOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_SELECT", mergeOption, iD_DohodakOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_UPDATE(long? ID_DohodakOdbitak, long? ID_Dohodak, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakOdbitakParameter = ID_DohodakOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakOdbitak", ID_DohodakOdbitak) :
                new ObjectParameter("ID_DohodakOdbitak", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_UPDATE", iD_DohodakOdbitakParameter, iD_DohodakParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakOdbitak> USP_DohodakOdbitak_UPDATE(long? ID_DohodakOdbitak, long? ID_Dohodak, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakOdbitak).Assembly);
    
            var iD_DohodakOdbitakParameter = ID_DohodakOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakOdbitak", ID_DohodakOdbitak) :
                new ObjectParameter("ID_DohodakOdbitak", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakOdbitak>("USP_DohodakOdbitak_UPDATE", mergeOption, iD_DohodakOdbitakParameter, iD_DohodakParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimatelj_DELETE(long? ID_DohodakPrimatelj)
        {
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimatelj_DELETE", iD_DohodakPrimateljParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_INSERT(long? ID_Dohodak, long? ID_Osoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_INSERT", iD_DohodakParameter, iD_OsobaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_INSERT(long? ID_Dohodak, long? ID_Osoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_INSERT", mergeOption, iD_DohodakParameter, iD_OsobaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_SELECT(long? ID_DohodakPrimatelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_SELECT", iD_DohodakPrimateljParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_SELECT(long? ID_DohodakPrimatelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_SELECT", mergeOption, iD_DohodakPrimateljParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_UPDATE(long? ID_DohodakPrimatelj, long? ID_Dohodak, long? ID_Osoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_UPDATE", iD_DohodakPrimateljParameter, iD_DohodakParameter, iD_OsobaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimatelj> USP_DohodakPrimatelj_UPDATE(long? ID_DohodakPrimatelj, long? ID_Dohodak, long? ID_Osoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimatelj).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimatelj>("USP_DohodakPrimatelj_UPDATE", mergeOption, iD_DohodakPrimateljParameter, iD_DohodakParameter, iD_OsobaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljDavanje_DELETE(long? ID_DohodakPrimateljDavanje)
        {
            var iD_DohodakPrimateljDavanjeParameter = ID_DohodakPrimateljDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljDavanje", ID_DohodakPrimateljDavanje) :
                new ObjectParameter("ID_DohodakPrimateljDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljDavanje_DELETE", iD_DohodakPrimateljDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_INSERT(long? ID_DohodakPrimatelj, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_INSERT", iD_DohodakPrimateljParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_INSERT(long? ID_DohodakPrimatelj, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_INSERT", mergeOption, iD_DohodakPrimateljParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_SELECT(long? ID_DohodakPrimateljDavanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljDavanjeParameter = ID_DohodakPrimateljDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljDavanje", ID_DohodakPrimateljDavanje) :
                new ObjectParameter("ID_DohodakPrimateljDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_SELECT", iD_DohodakPrimateljDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_SELECT(long? ID_DohodakPrimateljDavanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljDavanjeParameter = ID_DohodakPrimateljDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljDavanje", ID_DohodakPrimateljDavanje) :
                new ObjectParameter("ID_DohodakPrimateljDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_SELECT", mergeOption, iD_DohodakPrimateljDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_UPDATE(long? ID_DohodakPrimateljDavanje, long? ID_DohodakPrimatelj, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljDavanjeParameter = ID_DohodakPrimateljDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljDavanje", ID_DohodakPrimateljDavanje) :
                new ObjectParameter("ID_DohodakPrimateljDavanje", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_UPDATE", iD_DohodakPrimateljDavanjeParameter, iD_DohodakPrimateljParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljDavanje> USP_DohodakPrimateljDavanje_UPDATE(long? ID_DohodakPrimateljDavanje, long? ID_DohodakPrimatelj, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljDavanje).Assembly);
    
            var iD_DohodakPrimateljDavanjeParameter = ID_DohodakPrimateljDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljDavanje", ID_DohodakPrimateljDavanje) :
                new ObjectParameter("ID_DohodakPrimateljDavanje", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljDavanje>("USP_DohodakPrimateljDavanje_UPDATE", mergeOption, iD_DohodakPrimateljDavanjeParameter, iD_DohodakPrimateljParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljIsplataGotovina_DELETE(long? ID_DohodakPrimateljIsplataGotovina)
        {
            var iD_DohodakPrimateljIsplataGotovinaParameter = ID_DohodakPrimateljIsplataGotovina.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", ID_DohodakPrimateljIsplataGotovina) :
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljIsplataGotovina_DELETE", iD_DohodakPrimateljIsplataGotovinaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_INSERT(long? ID_DohodakPrimatelj, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_INSERT", iD_DohodakPrimateljParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_INSERT(long? ID_DohodakPrimatelj, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_INSERT", mergeOption, iD_DohodakPrimateljParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_SELECT(long? ID_DohodakPrimateljIsplataGotovina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljIsplataGotovinaParameter = ID_DohodakPrimateljIsplataGotovina.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", ID_DohodakPrimateljIsplataGotovina) :
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_SELECT", iD_DohodakPrimateljIsplataGotovinaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_SELECT(long? ID_DohodakPrimateljIsplataGotovina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljIsplataGotovinaParameter = ID_DohodakPrimateljIsplataGotovina.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", ID_DohodakPrimateljIsplataGotovina) :
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_SELECT", mergeOption, iD_DohodakPrimateljIsplataGotovinaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_UPDATE(long? ID_DohodakPrimateljIsplataGotovina, long? ID_DohodakPrimatelj, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljIsplataGotovinaParameter = ID_DohodakPrimateljIsplataGotovina.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", ID_DohodakPrimateljIsplataGotovina) :
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_UPDATE", iD_DohodakPrimateljIsplataGotovinaParameter, iD_DohodakPrimateljParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataGotovina> USP_DohodakPrimateljIsplataGotovina_UPDATE(long? ID_DohodakPrimateljIsplataGotovina, long? ID_DohodakPrimatelj, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataGotovina).Assembly);
    
            var iD_DohodakPrimateljIsplataGotovinaParameter = ID_DohodakPrimateljIsplataGotovina.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", ID_DohodakPrimateljIsplataGotovina) :
                new ObjectParameter("ID_DohodakPrimateljIsplataGotovina", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataGotovina>("USP_DohodakPrimateljIsplataGotovina_UPDATE", mergeOption, iD_DohodakPrimateljIsplataGotovinaParameter, iD_DohodakPrimateljParameter, iznosParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljIsplataRacun_DELETE(long? ID_DohodakPrimateljIsplataRacun)
        {
            var iD_DohodakPrimateljIsplataRacunParameter = ID_DohodakPrimateljIsplataRacun.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", ID_DohodakPrimateljIsplataRacun) :
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljIsplataRacun_DELETE", iD_DohodakPrimateljIsplataRacunParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_INSERT(long? ID_DohodakPrimatelj, long? ID_SubjektRacun, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_INSERT", iD_DohodakPrimateljParameter, iD_SubjektRacunParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_INSERT(long? ID_DohodakPrimatelj, long? ID_SubjektRacun, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_INSERT", mergeOption, iD_DohodakPrimateljParameter, iD_SubjektRacunParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_SELECT(long? ID_DohodakPrimateljIsplataRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljIsplataRacunParameter = ID_DohodakPrimateljIsplataRacun.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", ID_DohodakPrimateljIsplataRacun) :
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_SELECT", iD_DohodakPrimateljIsplataRacunParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_SELECT(long? ID_DohodakPrimateljIsplataRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljIsplataRacunParameter = ID_DohodakPrimateljIsplataRacun.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", ID_DohodakPrimateljIsplataRacun) :
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_SELECT", mergeOption, iD_DohodakPrimateljIsplataRacunParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_UPDATE(long? ID_DohodakPrimateljIsplataRacun, long? ID_DohodakPrimatelj, long? ID_SubjektRacun, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljIsplataRacunParameter = ID_DohodakPrimateljIsplataRacun.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", ID_DohodakPrimateljIsplataRacun) :
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_UPDATE", iD_DohodakPrimateljIsplataRacunParameter, iD_DohodakPrimateljParameter, iD_SubjektRacunParameter, iznosParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljIsplataRacun> USP_DohodakPrimateljIsplataRacun_UPDATE(long? ID_DohodakPrimateljIsplataRacun, long? ID_DohodakPrimatelj, long? ID_SubjektRacun, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljIsplataRacun).Assembly);
    
            var iD_DohodakPrimateljIsplataRacunParameter = ID_DohodakPrimateljIsplataRacun.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", ID_DohodakPrimateljIsplataRacun) :
                new ObjectParameter("ID_DohodakPrimateljIsplataRacun", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljIsplataRacun>("USP_DohodakPrimateljIsplataRacun_UPDATE", mergeOption, iD_DohodakPrimateljIsplataRacunParameter, iD_DohodakPrimateljParameter, iD_SubjektRacunParameter, iznosParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljKoeficijent_DELETE(long? ID_DohodakPrimateljKoeficijent)
        {
            var iD_DohodakPrimateljKoeficijentParameter = ID_DohodakPrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", ID_DohodakPrimateljKoeficijent) :
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljKoeficijent_DELETE", iD_DohodakPrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_INSERT(long? ID_DohodakPrimatelj, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_INSERT", iD_DohodakPrimateljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_INSERT(long? ID_DohodakPrimatelj, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_INSERT", mergeOption, iD_DohodakPrimateljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_SELECT(long? ID_DohodakPrimateljKoeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljKoeficijentParameter = ID_DohodakPrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", ID_DohodakPrimateljKoeficijent) :
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_SELECT", iD_DohodakPrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_SELECT(long? ID_DohodakPrimateljKoeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljKoeficijentParameter = ID_DohodakPrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", ID_DohodakPrimateljKoeficijent) :
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_SELECT", mergeOption, iD_DohodakPrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_UPDATE(long? ID_DohodakPrimateljKoeficijent, long? ID_DohodakPrimatelj, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljKoeficijentParameter = ID_DohodakPrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", ID_DohodakPrimateljKoeficijent) :
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_UPDATE", iD_DohodakPrimateljKoeficijentParameter, iD_DohodakPrimateljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljKoeficijent> USP_DohodakPrimateljKoeficijent_UPDATE(long? ID_DohodakPrimateljKoeficijent, long? ID_DohodakPrimatelj, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljKoeficijent).Assembly);
    
            var iD_DohodakPrimateljKoeficijentParameter = ID_DohodakPrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", ID_DohodakPrimateljKoeficijent) :
                new ObjectParameter("ID_DohodakPrimateljKoeficijent", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljKoeficijent>("USP_DohodakPrimateljKoeficijent_UPDATE", mergeOption, iD_DohodakPrimateljKoeficijentParameter, iD_DohodakPrimateljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljOdbitak_DELETE(long? ID_DohodakPrimateljOdbitak)
        {
            var iD_DohodakPrimateljOdbitakParameter = ID_DohodakPrimateljOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljOdbitak", ID_DohodakPrimateljOdbitak) :
                new ObjectParameter("ID_DohodakPrimateljOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljOdbitak_DELETE", iD_DohodakPrimateljOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_INSERT(long? ID_DohodakPrimatelj, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_INSERT", iD_DohodakPrimateljParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_INSERT(long? ID_DohodakPrimatelj, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_INSERT", mergeOption, iD_DohodakPrimateljParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_SELECT(long? ID_DohodakPrimateljOdbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljOdbitakParameter = ID_DohodakPrimateljOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljOdbitak", ID_DohodakPrimateljOdbitak) :
                new ObjectParameter("ID_DohodakPrimateljOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_SELECT", iD_DohodakPrimateljOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_SELECT(long? ID_DohodakPrimateljOdbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljOdbitakParameter = ID_DohodakPrimateljOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljOdbitak", ID_DohodakPrimateljOdbitak) :
                new ObjectParameter("ID_DohodakPrimateljOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_SELECT", mergeOption, iD_DohodakPrimateljOdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_UPDATE(long? ID_DohodakPrimateljOdbitak, long? ID_DohodakPrimatelj, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljOdbitakParameter = ID_DohodakPrimateljOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljOdbitak", ID_DohodakPrimateljOdbitak) :
                new ObjectParameter("ID_DohodakPrimateljOdbitak", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_UPDATE", iD_DohodakPrimateljOdbitakParameter, iD_DohodakPrimateljParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljOdbitak> USP_DohodakPrimateljOdbitak_UPDATE(long? ID_DohodakPrimateljOdbitak, long? ID_DohodakPrimatelj, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljOdbitak).Assembly);
    
            var iD_DohodakPrimateljOdbitakParameter = ID_DohodakPrimateljOdbitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljOdbitak", ID_DohodakPrimateljOdbitak) :
                new ObjectParameter("ID_DohodakPrimateljOdbitak", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljOdbitak>("USP_DohodakPrimateljOdbitak_UPDATE", mergeOption, iD_DohodakPrimateljOdbitakParameter, iD_DohodakPrimateljParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljPrimitak_DELETE(long? ID_DohodakPrimateljPrimitak)
        {
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljPrimitak_DELETE", iD_DohodakPrimateljPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_INSERT(long? ID_DohodakPrimatelj, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDohodak, decimal? IznosNeto, decimal? IznosTrosak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosTrosakParameter = IznosTrosak.HasValue ?
                new ObjectParameter("IznosTrosak", IznosTrosak) :
                new ObjectParameter("IznosTrosak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_INSERT", iD_DohodakPrimateljParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDohodakParameter, iznosNetoParameter, iznosTrosakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_INSERT(long? ID_DohodakPrimatelj, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDohodak, decimal? IznosNeto, decimal? IznosTrosak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosTrosakParameter = IznosTrosak.HasValue ?
                new ObjectParameter("IznosTrosak", IznosTrosak) :
                new ObjectParameter("IznosTrosak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_INSERT", mergeOption, iD_DohodakPrimateljParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDohodakParameter, iznosNetoParameter, iznosTrosakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_SELECT(long? ID_DohodakPrimateljPrimitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_SELECT", iD_DohodakPrimateljPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_SELECT(long? ID_DohodakPrimateljPrimitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_SELECT", mergeOption, iD_DohodakPrimateljPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_UPDATE(long? ID_DohodakPrimateljPrimitak, long? ID_DohodakPrimatelj, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDohodak, decimal? IznosNeto, decimal? IznosTrosak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosTrosakParameter = IznosTrosak.HasValue ?
                new ObjectParameter("IznosTrosak", IznosTrosak) :
                new ObjectParameter("IznosTrosak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_UPDATE", iD_DohodakPrimateljPrimitakParameter, iD_DohodakPrimateljParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDohodakParameter, iznosNetoParameter, iznosTrosakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitak> USP_DohodakPrimateljPrimitak_UPDATE(long? ID_DohodakPrimateljPrimitak, long? ID_DohodakPrimatelj, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDohodak, decimal? IznosNeto, decimal? IznosTrosak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitak).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DohodakPrimateljParameter = ID_DohodakPrimatelj.HasValue ?
                new ObjectParameter("ID_DohodakPrimatelj", ID_DohodakPrimatelj) :
                new ObjectParameter("ID_DohodakPrimatelj", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosTrosakParameter = IznosTrosak.HasValue ?
                new ObjectParameter("IznosTrosak", IznosTrosak) :
                new ObjectParameter("IznosTrosak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitak>("USP_DohodakPrimateljPrimitak_UPDATE", mergeOption, iD_DohodakPrimateljPrimitakParameter, iD_DohodakPrimateljParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDohodakParameter, iznosNetoParameter, iznosTrosakParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimateljPrimitakDavanje_DELETE(long? ID_DohodakPrimateljPrimitakDavanje)
        {
            var iD_DohodakPrimateljPrimitakDavanjeParameter = ID_DohodakPrimateljPrimitakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", ID_DohodakPrimateljPrimitakDavanje) :
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimateljPrimitakDavanje_DELETE", iD_DohodakPrimateljPrimitakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_INSERT(long? ID_DohodakPrimateljPrimitak, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_INSERT", iD_DohodakPrimateljPrimitakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_INSERT(long? ID_DohodakPrimateljPrimitak, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_INSERT", mergeOption, iD_DohodakPrimateljPrimitakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_SELECT(long? ID_DohodakPrimateljPrimitakDavanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakDavanjeParameter = ID_DohodakPrimateljPrimitakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", ID_DohodakPrimateljPrimitakDavanje) :
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_SELECT", iD_DohodakPrimateljPrimitakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_SELECT(long? ID_DohodakPrimateljPrimitakDavanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakDavanjeParameter = ID_DohodakPrimateljPrimitakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", ID_DohodakPrimateljPrimitakDavanje) :
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_SELECT", mergeOption, iD_DohodakPrimateljPrimitakDavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_UPDATE(long? ID_DohodakPrimateljPrimitakDavanje, long? ID_DohodakPrimateljPrimitak, long? ID_Davanje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakDavanjeParameter = ID_DohodakPrimateljPrimitakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", ID_DohodakPrimateljPrimitakDavanje) :
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", typeof(long));
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_UPDATE", iD_DohodakPrimateljPrimitakDavanjeParameter, iD_DohodakPrimateljPrimitakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<DohodakPrimateljPrimitakDavanje> USP_DohodakPrimateljPrimitakDavanje_UPDATE(long? ID_DohodakPrimateljPrimitakDavanje, long? ID_DohodakPrimateljPrimitak, long? ID_Davanje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimateljPrimitakDavanje).Assembly);
    
            var iD_DohodakPrimateljPrimitakDavanjeParameter = ID_DohodakPrimateljPrimitakDavanje.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", ID_DohodakPrimateljPrimitakDavanje) :
                new ObjectParameter("ID_DohodakPrimateljPrimitakDavanje", typeof(long));
    
            var iD_DohodakPrimateljPrimitakParameter = ID_DohodakPrimateljPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimateljPrimitak", ID_DohodakPrimateljPrimitak) :
                new ObjectParameter("ID_DohodakPrimateljPrimitak", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimateljPrimitakDavanje>("USP_DohodakPrimateljPrimitakDavanje_UPDATE", mergeOption, iD_DohodakPrimateljPrimitakDavanjeParameter, iD_DohodakPrimateljPrimitakParameter, iD_DavanjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_DohodakPrimitak_DELETE(long? ID_DohodakPrimitak)
        {
            var iD_DohodakPrimitakParameter = ID_DohodakPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimitak", ID_DohodakPrimitak) :
                new ObjectParameter("ID_DohodakPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DohodakPrimitak_DELETE", iD_DohodakPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_INSERT(long? ID_Dohodak, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDoprinosIz, decimal? IznosDohodak, decimal? IznosPorezOsnova, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosNeto, decimal? IznosNaknada)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDoprinosIzParameter = IznosDoprinosIz.HasValue ?
                new ObjectParameter("IznosDoprinosIz", IznosDoprinosIz) :
                new ObjectParameter("IznosDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosNaknadaParameter = IznosNaknada.HasValue ?
                new ObjectParameter("IznosNaknada", IznosNaknada) :
                new ObjectParameter("IznosNaknada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_INSERT", iD_DohodakParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDoprinosIzParameter, iznosDohodakParameter, iznosPorezOsnovaParameter, iznosPorezParameter, iznosPrirezParameter, iznosNetoParameter, iznosNaknadaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_INSERT(long? ID_Dohodak, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDoprinosIz, decimal? IznosDohodak, decimal? IznosPorezOsnova, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosNeto, decimal? IznosNaknada, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDoprinosIzParameter = IznosDoprinosIz.HasValue ?
                new ObjectParameter("IznosDoprinosIz", IznosDoprinosIz) :
                new ObjectParameter("IznosDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosNaknadaParameter = IznosNaknada.HasValue ?
                new ObjectParameter("IznosNaknada", IznosNaknada) :
                new ObjectParameter("IznosNaknada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_INSERT", mergeOption, iD_DohodakParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDoprinosIzParameter, iznosDohodakParameter, iznosPorezOsnovaParameter, iznosPorezParameter, iznosPrirezParameter, iznosNetoParameter, iznosNaknadaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_SELECT(long? ID_DohodakPrimitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakPrimitakParameter = ID_DohodakPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimitak", ID_DohodakPrimitak) :
                new ObjectParameter("ID_DohodakPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_SELECT", iD_DohodakPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_SELECT(long? ID_DohodakPrimitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakPrimitakParameter = ID_DohodakPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimitak", ID_DohodakPrimitak) :
                new ObjectParameter("ID_DohodakPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_SELECT", mergeOption, iD_DohodakPrimitakParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_UPDATE(long? ID_DohodakPrimitak, long? ID_Dohodak, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDoprinosIz, decimal? IznosDohodak, decimal? IznosPorezOsnova, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosNeto, decimal? IznosNaknada)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakPrimitakParameter = ID_DohodakPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimitak", ID_DohodakPrimitak) :
                new ObjectParameter("ID_DohodakPrimitak", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDoprinosIzParameter = IznosDoprinosIz.HasValue ?
                new ObjectParameter("IznosDoprinosIz", IznosDoprinosIz) :
                new ObjectParameter("IznosDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosNaknadaParameter = IznosNaknada.HasValue ?
                new ObjectParameter("IznosNaknada", IznosNaknada) :
                new ObjectParameter("IznosNaknada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_UPDATE", iD_DohodakPrimitakParameter, iD_DohodakParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDoprinosIzParameter, iznosDohodakParameter, iznosPorezOsnovaParameter, iznosPorezParameter, iznosPrirezParameter, iznosNetoParameter, iznosNaknadaParameter);
        }
    
        public virtual ObjectResult<DohodakPrimitak> USP_DohodakPrimitak_UPDATE(long? ID_DohodakPrimitak, long? ID_Dohodak, long? ID_Primitak, decimal? IznosBruto, decimal? IznosDoprinosIz, decimal? IznosDohodak, decimal? IznosPorezOsnova, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosNeto, decimal? IznosNaknada, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DohodakPrimitak).Assembly);
    
            var iD_DohodakPrimitakParameter = ID_DohodakPrimitak.HasValue ?
                new ObjectParameter("ID_DohodakPrimitak", ID_DohodakPrimitak) :
                new ObjectParameter("ID_DohodakPrimitak", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var iznosBrutoParameter = IznosBruto.HasValue ?
                new ObjectParameter("IznosBruto", IznosBruto) :
                new ObjectParameter("IznosBruto", typeof(decimal));
    
            var iznosDoprinosIzParameter = IznosDoprinosIz.HasValue ?
                new ObjectParameter("IznosDoprinosIz", IznosDoprinosIz) :
                new ObjectParameter("IznosDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosNetoParameter = IznosNeto.HasValue ?
                new ObjectParameter("IznosNeto", IznosNeto) :
                new ObjectParameter("IznosNeto", typeof(decimal));
    
            var iznosNaknadaParameter = IznosNaknada.HasValue ?
                new ObjectParameter("IznosNaknada", IznosNaknada) :
                new ObjectParameter("IznosNaknada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DohodakPrimitak>("USP_DohodakPrimitak_UPDATE", mergeOption, iD_DohodakPrimitakParameter, iD_DohodakParameter, iD_PrimitakParameter, iznosBrutoParameter, iznosDoprinosIzParameter, iznosDohodakParameter, iznosPorezOsnovaParameter, iznosPorezParameter, iznosPrirezParameter, iznosNetoParameter, iznosNaknadaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DoprinosDohodak_DELETE(long? ID_DoprinosDohodak)
        {
            var iD_DoprinosDohodakParameter = ID_DoprinosDohodak.HasValue ?
                new ObjectParameter("ID_DoprinosDohodak", ID_DoprinosDohodak) :
                new ObjectParameter("ID_DoprinosDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DoprinosDohodak_DELETE", iD_DoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_INSERT(long? ID_DoprinosDohodakVr, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_INSERT", iD_DoprinosDohodakVrParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_INSERT(long? ID_DoprinosDohodakVr, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_INSERT", mergeOption, iD_DoprinosDohodakVrParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_SELECT(long? ID_DoprinosDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakParameter = ID_DoprinosDohodak.HasValue ?
                new ObjectParameter("ID_DoprinosDohodak", ID_DoprinosDohodak) :
                new ObjectParameter("ID_DoprinosDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_SELECT", iD_DoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_SELECT(long? ID_DoprinosDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakParameter = ID_DoprinosDohodak.HasValue ?
                new ObjectParameter("ID_DoprinosDohodak", ID_DoprinosDohodak) :
                new ObjectParameter("ID_DoprinosDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_SELECT", mergeOption, iD_DoprinosDohodakParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_UPDATE(long? ID_DoprinosDohodak, long? ID_DoprinosDohodakVr, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakParameter = ID_DoprinosDohodak.HasValue ?
                new ObjectParameter("ID_DoprinosDohodak", ID_DoprinosDohodak) :
                new ObjectParameter("ID_DoprinosDohodak", typeof(long));
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_UPDATE", iD_DoprinosDohodakParameter, iD_DoprinosDohodakVrParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodak> USP_DoprinosDohodak_UPDATE(long? ID_DoprinosDohodak, long? ID_DoprinosDohodakVr, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, bool? IzBruto, int? IDMirovinskiStup, int? IDPoticanjeZaposljavanja, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodak).Assembly);
    
            var iD_DoprinosDohodakParameter = ID_DoprinosDohodak.HasValue ?
                new ObjectParameter("ID_DoprinosDohodak", ID_DoprinosDohodak) :
                new ObjectParameter("ID_DoprinosDohodak", typeof(long));
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var izBrutoParameter = IzBruto.HasValue ?
                new ObjectParameter("IzBruto", IzBruto) :
                new ObjectParameter("IzBruto", typeof(bool));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodak>("USP_DoprinosDohodak_UPDATE", mergeOption, iD_DoprinosDohodakParameter, iD_DoprinosDohodakVrParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, izBrutoParameter, iDMirovinskiStupParameter, iDPoticanjeZaposljavanjaParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_DoprinosDohodakVr_DELETE(long? ID_DoprinosDohodakVr)
        {
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DoprinosDohodakVr_DELETE", iD_DoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? IDDavanjeDoprinosDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? IDDavanjeDoprinosDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_SELECT(long? ID_DoprinosDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_SELECT", iD_DoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_SELECT(long? ID_DoprinosDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_SELECT", mergeOption, iD_DoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_UPDATE(long? ID_DoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, int? IDDavanjeDoprinosDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_UPDATE", iD_DoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<DoprinosDohodakVr> USP_DoprinosDohodakVr_UPDATE(long? ID_DoprinosDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, int? IDDavanjeDoprinosDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DoprinosDohodakVr).Assembly);
    
            var iD_DoprinosDohodakVrParameter = ID_DoprinosDohodakVr.HasValue ?
                new ObjectParameter("ID_DoprinosDohodakVr", ID_DoprinosDohodakVr) :
                new ObjectParameter("ID_DoprinosDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDavanjeDoprinosDohodakVrParameter = IDDavanjeDoprinosDohodakVr.HasValue ?
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", IDDavanjeDoprinosDohodakVr) :
                new ObjectParameter("IDDavanjeDoprinosDohodakVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoprinosDohodakVr>("USP_DoprinosDohodakVr_UPDATE", mergeOption, iD_DoprinosDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDavanjeDoprinosDohodakVrParameter);
        }
    
        public virtual ObjectResult<int?> USP_Drzava_DELETE(string IDDrzava)
        {
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Drzava_DELETE", iDDrzavaParameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_INSERT(string IDDrzava, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, string IDDrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string BBAN, int? IBAN, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iDDrzavaNadParameter = IDDrzavaNad != null ?
                new ObjectParameter("IDDrzavaNad", IDDrzavaNad) :
                new ObjectParameter("IDDrzavaNad", typeof(string));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var bBANParameter = BBAN != null ?
                new ObjectParameter("BBAN", BBAN) :
                new ObjectParameter("BBAN", typeof(string));
    
            var iBANParameter = IBAN.HasValue ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(int));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_INSERT", iDDrzavaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iDDrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, bBANParameter, iBANParameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_INSERT(string IDDrzava, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, string IDDrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string BBAN, int? IBAN, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iDDrzavaNadParameter = IDDrzavaNad != null ?
                new ObjectParameter("IDDrzavaNad", IDDrzavaNad) :
                new ObjectParameter("IDDrzavaNad", typeof(string));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var bBANParameter = BBAN != null ?
                new ObjectParameter("BBAN", BBAN) :
                new ObjectParameter("BBAN", typeof(string));
    
            var iBANParameter = IBAN.HasValue ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(int));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_INSERT", mergeOption, iDDrzavaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iDDrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, bBANParameter, iBANParameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_SELECT(string IDDrzava)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_SELECT", iDDrzavaParameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_SELECT(string IDDrzava, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_SELECT", mergeOption, iDDrzavaParameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_UPDATE(string IDDrzava, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, string IDDrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string BBAN, int? IBAN, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iDDrzavaNadParameter = IDDrzavaNad != null ?
                new ObjectParameter("IDDrzavaNad", IDDrzavaNad) :
                new ObjectParameter("IDDrzavaNad", typeof(string));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var bBANParameter = BBAN != null ?
                new ObjectParameter("BBAN", BBAN) :
                new ObjectParameter("BBAN", typeof(string));
    
            var iBANParameter = IBAN.HasValue ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(int));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_UPDATE", iDDrzavaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iDDrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, bBANParameter, iBANParameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<Drzava> USP_Drzava_UPDATE(string IDDrzava, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, string IDDrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string BBAN, int? IBAN, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzava).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iDDrzavaNadParameter = IDDrzavaNad != null ?
                new ObjectParameter("IDDrzavaNad", IDDrzavaNad) :
                new ObjectParameter("IDDrzavaNad", typeof(string));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var bBANParameter = BBAN != null ?
                new ObjectParameter("BBAN", BBAN) :
                new ObjectParameter("BBAN", typeof(string));
    
            var iBANParameter = IBAN.HasValue ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(int));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("USP_Drzava_UPDATE", mergeOption, iDDrzavaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iDDrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, bBANParameter, iBANParameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<int?> USP_DrzavaRadna_DELETE(long? ID_Drzava)
        {
            var iD_DrzavaParameter = ID_Drzava.HasValue ?
                new ObjectParameter("ID_Drzava", ID_Drzava) :
                new ObjectParameter("ID_Drzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DrzavaRadna_DELETE", iD_DrzavaParameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, long? ID_DrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iD_DrzavaNadParameter = ID_DrzavaNad.HasValue ?
                new ObjectParameter("ID_DrzavaNad", ID_DrzavaNad) :
                new ObjectParameter("ID_DrzavaNad", typeof(long));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iD_DrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, long? ID_DrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iD_DrzavaNadParameter = ID_DrzavaNad.HasValue ?
                new ObjectParameter("ID_DrzavaNad", ID_DrzavaNad) :
                new ObjectParameter("ID_DrzavaNad", typeof(long));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iD_DrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_SELECT(long? ID_Drzava)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var iD_DrzavaParameter = ID_Drzava.HasValue ?
                new ObjectParameter("ID_Drzava", ID_Drzava) :
                new ObjectParameter("ID_Drzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_SELECT", iD_DrzavaParameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_SELECT(long? ID_Drzava, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var iD_DrzavaParameter = ID_Drzava.HasValue ?
                new ObjectParameter("ID_Drzava", ID_Drzava) :
                new ObjectParameter("ID_Drzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_SELECT", mergeOption, iD_DrzavaParameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_UPDATE(long? ID_Drzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, long? ID_DrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var iD_DrzavaParameter = ID_Drzava.HasValue ?
                new ObjectParameter("ID_Drzava", ID_Drzava) :
                new ObjectParameter("ID_Drzava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iD_DrzavaNadParameter = ID_DrzavaNad.HasValue ?
                new ObjectParameter("ID_DrzavaNad", ID_DrzavaNad) :
                new ObjectParameter("ID_DrzavaNad", typeof(long));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_UPDATE", iD_DrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iD_DrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<DrzavaRadna> USP_DrzavaRadna_UPDATE(long? ID_Drzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivEn, string NazivFr, int? Kod, bool? Teritorij, long? ID_DrzavaNad, string SifDrzava, string OznDrzava, string ISO3166, string FIPS104, string Internet, string OznHr, string OznEng, string NazivHr, string NazivHrDugi, string NazivEng, string NazivEngDugi, string NazivLokal, string NazivLokalDugi, string NazivStariHr, string NazivStariEng, string Kratica1, string Nacija, string Obuhvat, string Napomena, string Komentar, string StsDrzava, bool? IzborDrzava, string ZastavaV, string ZastavaM, string ZastavaMPath, string ZastavaVPath, string GrbV, string GrbM, string GrbVPath, string GrbMPath, string KartaV, string KartaM, string KartaMPath, string KartaVPath, string DrzavaHtml1, string DrzavaHtml2, string DrzavaHtml3, string DrzavaHtml4, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaRadna).Assembly);
    
            var iD_DrzavaParameter = ID_Drzava.HasValue ?
                new ObjectParameter("ID_Drzava", ID_Drzava) :
                new ObjectParameter("ID_Drzava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var nazivFrParameter = NazivFr != null ?
                new ObjectParameter("NazivFr", NazivFr) :
                new ObjectParameter("NazivFr", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var teritorijParameter = Teritorij.HasValue ?
                new ObjectParameter("Teritorij", Teritorij) :
                new ObjectParameter("Teritorij", typeof(bool));
    
            var iD_DrzavaNadParameter = ID_DrzavaNad.HasValue ?
                new ObjectParameter("ID_DrzavaNad", ID_DrzavaNad) :
                new ObjectParameter("ID_DrzavaNad", typeof(long));
    
            var sifDrzavaParameter = SifDrzava != null ?
                new ObjectParameter("SifDrzava", SifDrzava) :
                new ObjectParameter("SifDrzava", typeof(string));
    
            var oznDrzavaParameter = OznDrzava != null ?
                new ObjectParameter("OznDrzava", OznDrzava) :
                new ObjectParameter("OznDrzava", typeof(string));
    
            var iSO3166Parameter = ISO3166 != null ?
                new ObjectParameter("ISO3166", ISO3166) :
                new ObjectParameter("ISO3166", typeof(string));
    
            var fIPS104Parameter = FIPS104 != null ?
                new ObjectParameter("FIPS104", FIPS104) :
                new ObjectParameter("FIPS104", typeof(string));
    
            var internetParameter = Internet != null ?
                new ObjectParameter("Internet", Internet) :
                new ObjectParameter("Internet", typeof(string));
    
            var oznHrParameter = OznHr != null ?
                new ObjectParameter("OznHr", OznHr) :
                new ObjectParameter("OznHr", typeof(string));
    
            var oznEngParameter = OznEng != null ?
                new ObjectParameter("OznEng", OznEng) :
                new ObjectParameter("OznEng", typeof(string));
    
            var nazivHrParameter = NazivHr != null ?
                new ObjectParameter("NazivHr", NazivHr) :
                new ObjectParameter("NazivHr", typeof(string));
    
            var nazivHrDugiParameter = NazivHrDugi != null ?
                new ObjectParameter("NazivHrDugi", NazivHrDugi) :
                new ObjectParameter("NazivHrDugi", typeof(string));
    
            var nazivEngParameter = NazivEng != null ?
                new ObjectParameter("NazivEng", NazivEng) :
                new ObjectParameter("NazivEng", typeof(string));
    
            var nazivEngDugiParameter = NazivEngDugi != null ?
                new ObjectParameter("NazivEngDugi", NazivEngDugi) :
                new ObjectParameter("NazivEngDugi", typeof(string));
    
            var nazivLokalParameter = NazivLokal != null ?
                new ObjectParameter("NazivLokal", NazivLokal) :
                new ObjectParameter("NazivLokal", typeof(string));
    
            var nazivLokalDugiParameter = NazivLokalDugi != null ?
                new ObjectParameter("NazivLokalDugi", NazivLokalDugi) :
                new ObjectParameter("NazivLokalDugi", typeof(string));
    
            var nazivStariHrParameter = NazivStariHr != null ?
                new ObjectParameter("NazivStariHr", NazivStariHr) :
                new ObjectParameter("NazivStariHr", typeof(string));
    
            var nazivStariEngParameter = NazivStariEng != null ?
                new ObjectParameter("NazivStariEng", NazivStariEng) :
                new ObjectParameter("NazivStariEng", typeof(string));
    
            var kratica1Parameter = Kratica1 != null ?
                new ObjectParameter("Kratica1", Kratica1) :
                new ObjectParameter("Kratica1", typeof(string));
    
            var nacijaParameter = Nacija != null ?
                new ObjectParameter("Nacija", Nacija) :
                new ObjectParameter("Nacija", typeof(string));
    
            var obuhvatParameter = Obuhvat != null ?
                new ObjectParameter("Obuhvat", Obuhvat) :
                new ObjectParameter("Obuhvat", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var komentarParameter = Komentar != null ?
                new ObjectParameter("Komentar", Komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            var stsDrzavaParameter = StsDrzava != null ?
                new ObjectParameter("StsDrzava", StsDrzava) :
                new ObjectParameter("StsDrzava", typeof(string));
    
            var izborDrzavaParameter = IzborDrzava.HasValue ?
                new ObjectParameter("IzborDrzava", IzborDrzava) :
                new ObjectParameter("IzborDrzava", typeof(bool));
    
            var zastavaVParameter = ZastavaV != null ?
                new ObjectParameter("ZastavaV", ZastavaV) :
                new ObjectParameter("ZastavaV", typeof(string));
    
            var zastavaMParameter = ZastavaM != null ?
                new ObjectParameter("ZastavaM", ZastavaM) :
                new ObjectParameter("ZastavaM", typeof(string));
    
            var zastavaMPathParameter = ZastavaMPath != null ?
                new ObjectParameter("ZastavaMPath", ZastavaMPath) :
                new ObjectParameter("ZastavaMPath", typeof(string));
    
            var zastavaVPathParameter = ZastavaVPath != null ?
                new ObjectParameter("ZastavaVPath", ZastavaVPath) :
                new ObjectParameter("ZastavaVPath", typeof(string));
    
            var grbVParameter = GrbV != null ?
                new ObjectParameter("GrbV", GrbV) :
                new ObjectParameter("GrbV", typeof(string));
    
            var grbMParameter = GrbM != null ?
                new ObjectParameter("GrbM", GrbM) :
                new ObjectParameter("GrbM", typeof(string));
    
            var grbVPathParameter = GrbVPath != null ?
                new ObjectParameter("GrbVPath", GrbVPath) :
                new ObjectParameter("GrbVPath", typeof(string));
    
            var grbMPathParameter = GrbMPath != null ?
                new ObjectParameter("GrbMPath", GrbMPath) :
                new ObjectParameter("GrbMPath", typeof(string));
    
            var kartaVParameter = KartaV != null ?
                new ObjectParameter("KartaV", KartaV) :
                new ObjectParameter("KartaV", typeof(string));
    
            var kartaMParameter = KartaM != null ?
                new ObjectParameter("KartaM", KartaM) :
                new ObjectParameter("KartaM", typeof(string));
    
            var kartaMPathParameter = KartaMPath != null ?
                new ObjectParameter("KartaMPath", KartaMPath) :
                new ObjectParameter("KartaMPath", typeof(string));
    
            var kartaVPathParameter = KartaVPath != null ?
                new ObjectParameter("KartaVPath", KartaVPath) :
                new ObjectParameter("KartaVPath", typeof(string));
    
            var drzavaHtml1Parameter = DrzavaHtml1 != null ?
                new ObjectParameter("DrzavaHtml1", DrzavaHtml1) :
                new ObjectParameter("DrzavaHtml1", typeof(string));
    
            var drzavaHtml2Parameter = DrzavaHtml2 != null ?
                new ObjectParameter("DrzavaHtml2", DrzavaHtml2) :
                new ObjectParameter("DrzavaHtml2", typeof(string));
    
            var drzavaHtml3Parameter = DrzavaHtml3 != null ?
                new ObjectParameter("DrzavaHtml3", DrzavaHtml3) :
                new ObjectParameter("DrzavaHtml3", typeof(string));
    
            var drzavaHtml4Parameter = DrzavaHtml4 != null ?
                new ObjectParameter("DrzavaHtml4", DrzavaHtml4) :
                new ObjectParameter("DrzavaHtml4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaRadna>("USP_DrzavaRadna_UPDATE", mergeOption, iD_DrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivEnParameter, nazivFrParameter, kodParameter, teritorijParameter, iD_DrzavaNadParameter, sifDrzavaParameter, oznDrzavaParameter, iSO3166Parameter, fIPS104Parameter, internetParameter, oznHrParameter, oznEngParameter, nazivHrParameter, nazivHrDugiParameter, nazivEngParameter, nazivEngDugiParameter, nazivLokalParameter, nazivLokalDugiParameter, nazivStariHrParameter, nazivStariEngParameter, kratica1Parameter, nacijaParameter, obuhvatParameter, napomenaParameter, komentarParameter, stsDrzavaParameter, izborDrzavaParameter, zastavaVParameter, zastavaMParameter, zastavaMPathParameter, zastavaVPathParameter, grbVParameter, grbMParameter, grbVPathParameter, grbMPathParameter, kartaVParameter, kartaMParameter, kartaMPathParameter, kartaVPathParameter, drzavaHtml1Parameter, drzavaHtml2Parameter, drzavaHtml3Parameter, drzavaHtml4Parameter);
        }
    
        public virtual ObjectResult<int?> USP_DrzavaValuta_DELETE(string IDDrzava, string IDValuta)
        {
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DrzavaValuta_DELETE", iDDrzavaParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_INSERT(string IDDrzava, string IDValuta, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_INSERT", iDDrzavaParameter, iDValutaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_INSERT(string IDDrzava, string IDValuta, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_INSERT", mergeOption, iDDrzavaParameter, iDValutaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_SELECT(string IDDrzava, string IDValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_SELECT", iDDrzavaParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_SELECT(string IDDrzava, string IDValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_SELECT", mergeOption, iDDrzavaParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_UPDATE(string IDDrzava, string IDValuta, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_UPDATE", iDDrzavaParameter, iDValutaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<DrzavaValuta> USP_DrzavaValuta_UPDATE(string IDDrzava, string IDValuta, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DrzavaValuta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrzavaValuta>("USP_DrzavaValuta_UPDATE", mergeOption, iDDrzavaParameter, iDValutaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_Drzavljanstvo_DELETE(long? ID_Drzavljanstvo)
        {
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Drzavljanstvo_DELETE", iD_DrzavljanstvoParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_SELECT(long? ID_Drzavljanstvo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_SELECT", iD_DrzavljanstvoParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_SELECT(long? ID_Drzavljanstvo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_SELECT", mergeOption, iD_DrzavljanstvoParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_UPDATE(long? ID_Drzavljanstvo, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_UPDATE", iD_DrzavljanstvoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Drzavljanstvo> USP_Drzavljanstvo_UPDATE(long? ID_Drzavljanstvo, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Drzavljanstvo).Assembly);
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzavljanstvo>("USP_Drzavljanstvo_UPDATE", mergeOption, iD_DrzavljanstvoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_GlavnaKnjiga_DELETE(long? ID_GlavnaKnjiga)
        {
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_GlavnaKnjiga_DELETE", iD_GlavnaKnjigaParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_INSERT(long? ID_KontniPlan, long? ID_Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_INSERT", iD_KontniPlanParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_INSERT(long? ID_KontniPlan, long? ID_Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_INSERT", mergeOption, iD_KontniPlanParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_SELECT(long? ID_GlavnaKnjiga)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_SELECT", iD_GlavnaKnjigaParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_SELECT(long? ID_GlavnaKnjiga, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_SELECT", mergeOption, iD_GlavnaKnjigaParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_UPDATE(long? ID_GlavnaKnjiga, long? ID_KontniPlan, long? ID_Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_UPDATE", iD_GlavnaKnjigaParameter, iD_KontniPlanParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<GlavnaKnjiga> USP_GlavnaKnjiga_UPDATE(long? ID_GlavnaKnjiga, long? ID_KontniPlan, long? ID_Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GlavnaKnjiga).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlavnaKnjiga>("USP_GlavnaKnjiga_UPDATE", mergeOption, iD_GlavnaKnjigaParameter, iD_KontniPlanParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUB_DELETE(long? ID_HUB)
        {
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUB_DELETE", iD_HUBParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_INSERT(long? ID_Zapis, int? IDHUBVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_INSERT", iD_ZapisParameter, iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_INSERT(long? ID_Zapis, int? IDHUBVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_INSERT", mergeOption, iD_ZapisParameter, iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_SELECT(long? ID_HUB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_SELECT", iD_HUBParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_SELECT(long? ID_HUB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_SELECT", mergeOption, iD_HUBParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_UPDATE(long? ID_HUB, long? ID_Zapis, int? IDHUBVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_UPDATE", iD_HUBParameter, iD_ZapisParameter, iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUB> USP_HUB_UPDATE(long? ID_HUB, long? ID_Zapis, int? IDHUBVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB>("USP_HUB_UPDATE", mergeOption, iD_HUBParameter, iD_ZapisParameter, iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUB2013A_DELETE(long? ID_HUB2013A)
        {
            var iD_HUB2013AParameter = ID_HUB2013A.HasValue ?
                new ObjectParameter("ID_HUB2013A", ID_HUB2013A) :
                new ObjectParameter("ID_HUB2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUB2013A_DELETE", iD_HUB2013AParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_INSERT(long? ID_HUB, int? IDHUBNalogVrsta2013A, long? ID_SubjektPlatitelj, int? IDHUBModel2013APlatitelj, int? IDHUBModel2013APrimatelj, string IDValutaPlacanje, string IDValutaPokrice, int? IDHUBNamjena2013A, int? IDHUBPrimateljVrsta2013A, int? IDHUBTroskoviOpcija2013A, long? ID_StornoHUB2013A, string IDDrzavaPrimatelj, string IDDrzavaBanka, string PlatiteljNaziv, string PlatiteljAdresa, string PlatiteljSjediste, string PlatiteljRacun, string PlatiteljPozivNaBroj, string PrimateljNaziv, string PrimateljAdresa, string PrimateljSjediste, string PrimateljRacun, string PrimateljPozivNaBroj, decimal? Iznos, string OpisPlacanje, bool? Hitno, string SWIFT, string BankaNaziv, string BankaAdresa, string BankaSjediste, DateTime? DatumIzvrsenje, DateTime? DatumDospijece, bool? Storno, long? ID_SubjektPrimatelj, string OpisPlacanjePlatitelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iD_SubjektPlatiteljParameter = ID_SubjektPlatitelj.HasValue ?
                new ObjectParameter("ID_SubjektPlatitelj", ID_SubjektPlatitelj) :
                new ObjectParameter("ID_SubjektPlatitelj", typeof(long));
    
            var iDHUBModel2013APlatiteljParameter = IDHUBModel2013APlatitelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APlatitelj", IDHUBModel2013APlatitelj) :
                new ObjectParameter("IDHUBModel2013APlatitelj", typeof(int));
    
            var iDHUBModel2013APrimateljParameter = IDHUBModel2013APrimatelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APrimatelj", IDHUBModel2013APrimatelj) :
                new ObjectParameter("IDHUBModel2013APrimatelj", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaPokriceParameter = IDValutaPokrice != null ?
                new ObjectParameter("IDValutaPokrice", IDValutaPokrice) :
                new ObjectParameter("IDValutaPokrice", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var iD_StornoHUB2013AParameter = ID_StornoHUB2013A.HasValue ?
                new ObjectParameter("ID_StornoHUB2013A", ID_StornoHUB2013A) :
                new ObjectParameter("ID_StornoHUB2013A", typeof(long));
    
            var iDDrzavaPrimateljParameter = IDDrzavaPrimatelj != null ?
                new ObjectParameter("IDDrzavaPrimatelj", IDDrzavaPrimatelj) :
                new ObjectParameter("IDDrzavaPrimatelj", typeof(string));
    
            var iDDrzavaBankaParameter = IDDrzavaBanka != null ?
                new ObjectParameter("IDDrzavaBanka", IDDrzavaBanka) :
                new ObjectParameter("IDDrzavaBanka", typeof(string));
    
            var platiteljNazivParameter = PlatiteljNaziv != null ?
                new ObjectParameter("PlatiteljNaziv", PlatiteljNaziv) :
                new ObjectParameter("PlatiteljNaziv", typeof(string));
    
            var platiteljAdresaParameter = PlatiteljAdresa != null ?
                new ObjectParameter("PlatiteljAdresa", PlatiteljAdresa) :
                new ObjectParameter("PlatiteljAdresa", typeof(string));
    
            var platiteljSjedisteParameter = PlatiteljSjediste != null ?
                new ObjectParameter("PlatiteljSjediste", PlatiteljSjediste) :
                new ObjectParameter("PlatiteljSjediste", typeof(string));
    
            var platiteljRacunParameter = PlatiteljRacun != null ?
                new ObjectParameter("PlatiteljRacun", PlatiteljRacun) :
                new ObjectParameter("PlatiteljRacun", typeof(string));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljNazivParameter = PrimateljNaziv != null ?
                new ObjectParameter("PrimateljNaziv", PrimateljNaziv) :
                new ObjectParameter("PrimateljNaziv", typeof(string));
    
            var primateljAdresaParameter = PrimateljAdresa != null ?
                new ObjectParameter("PrimateljAdresa", PrimateljAdresa) :
                new ObjectParameter("PrimateljAdresa", typeof(string));
    
            var primateljSjedisteParameter = PrimateljSjediste != null ?
                new ObjectParameter("PrimateljSjediste", PrimateljSjediste) :
                new ObjectParameter("PrimateljSjediste", typeof(string));
    
            var primateljRacunParameter = PrimateljRacun != null ?
                new ObjectParameter("PrimateljRacun", PrimateljRacun) :
                new ObjectParameter("PrimateljRacun", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var hitnoParameter = Hitno.HasValue ?
                new ObjectParameter("Hitno", Hitno) :
                new ObjectParameter("Hitno", typeof(bool));
    
            var sWIFTParameter = SWIFT != null ?
                new ObjectParameter("SWIFT", SWIFT) :
                new ObjectParameter("SWIFT", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaAdresaParameter = BankaAdresa != null ?
                new ObjectParameter("BankaAdresa", BankaAdresa) :
                new ObjectParameter("BankaAdresa", typeof(string));
    
            var bankaSjedisteParameter = BankaSjediste != null ?
                new ObjectParameter("BankaSjediste", BankaSjediste) :
                new ObjectParameter("BankaSjediste", typeof(string));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var iD_SubjektPrimateljParameter = ID_SubjektPrimatelj.HasValue ?
                new ObjectParameter("ID_SubjektPrimatelj", ID_SubjektPrimatelj) :
                new ObjectParameter("ID_SubjektPrimatelj", typeof(long));
    
            var opisPlacanjePlatiteljParameter = OpisPlacanjePlatitelj != null ?
                new ObjectParameter("OpisPlacanjePlatitelj", OpisPlacanjePlatitelj) :
                new ObjectParameter("OpisPlacanjePlatitelj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_INSERT", iD_HUBParameter, iDHUBNalogVrsta2013AParameter, iD_SubjektPlatiteljParameter, iDHUBModel2013APlatiteljParameter, iDHUBModel2013APrimateljParameter, iDValutaPlacanjeParameter, iDValutaPokriceParameter, iDHUBNamjena2013AParameter, iDHUBPrimateljVrsta2013AParameter, iDHUBTroskoviOpcija2013AParameter, iD_StornoHUB2013AParameter, iDDrzavaPrimateljParameter, iDDrzavaBankaParameter, platiteljNazivParameter, platiteljAdresaParameter, platiteljSjedisteParameter, platiteljRacunParameter, platiteljPozivNaBrojParameter, primateljNazivParameter, primateljAdresaParameter, primateljSjedisteParameter, primateljRacunParameter, primateljPozivNaBrojParameter, iznosParameter, opisPlacanjeParameter, hitnoParameter, sWIFTParameter, bankaNazivParameter, bankaAdresaParameter, bankaSjedisteParameter, datumIzvrsenjeParameter, datumDospijeceParameter, stornoParameter, iD_SubjektPrimateljParameter, opisPlacanjePlatiteljParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_INSERT(long? ID_HUB, int? IDHUBNalogVrsta2013A, long? ID_SubjektPlatitelj, int? IDHUBModel2013APlatitelj, int? IDHUBModel2013APrimatelj, string IDValutaPlacanje, string IDValutaPokrice, int? IDHUBNamjena2013A, int? IDHUBPrimateljVrsta2013A, int? IDHUBTroskoviOpcija2013A, long? ID_StornoHUB2013A, string IDDrzavaPrimatelj, string IDDrzavaBanka, string PlatiteljNaziv, string PlatiteljAdresa, string PlatiteljSjediste, string PlatiteljRacun, string PlatiteljPozivNaBroj, string PrimateljNaziv, string PrimateljAdresa, string PrimateljSjediste, string PrimateljRacun, string PrimateljPozivNaBroj, decimal? Iznos, string OpisPlacanje, bool? Hitno, string SWIFT, string BankaNaziv, string BankaAdresa, string BankaSjediste, DateTime? DatumIzvrsenje, DateTime? DatumDospijece, bool? Storno, long? ID_SubjektPrimatelj, string OpisPlacanjePlatitelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iD_SubjektPlatiteljParameter = ID_SubjektPlatitelj.HasValue ?
                new ObjectParameter("ID_SubjektPlatitelj", ID_SubjektPlatitelj) :
                new ObjectParameter("ID_SubjektPlatitelj", typeof(long));
    
            var iDHUBModel2013APlatiteljParameter = IDHUBModel2013APlatitelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APlatitelj", IDHUBModel2013APlatitelj) :
                new ObjectParameter("IDHUBModel2013APlatitelj", typeof(int));
    
            var iDHUBModel2013APrimateljParameter = IDHUBModel2013APrimatelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APrimatelj", IDHUBModel2013APrimatelj) :
                new ObjectParameter("IDHUBModel2013APrimatelj", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaPokriceParameter = IDValutaPokrice != null ?
                new ObjectParameter("IDValutaPokrice", IDValutaPokrice) :
                new ObjectParameter("IDValutaPokrice", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var iD_StornoHUB2013AParameter = ID_StornoHUB2013A.HasValue ?
                new ObjectParameter("ID_StornoHUB2013A", ID_StornoHUB2013A) :
                new ObjectParameter("ID_StornoHUB2013A", typeof(long));
    
            var iDDrzavaPrimateljParameter = IDDrzavaPrimatelj != null ?
                new ObjectParameter("IDDrzavaPrimatelj", IDDrzavaPrimatelj) :
                new ObjectParameter("IDDrzavaPrimatelj", typeof(string));
    
            var iDDrzavaBankaParameter = IDDrzavaBanka != null ?
                new ObjectParameter("IDDrzavaBanka", IDDrzavaBanka) :
                new ObjectParameter("IDDrzavaBanka", typeof(string));
    
            var platiteljNazivParameter = PlatiteljNaziv != null ?
                new ObjectParameter("PlatiteljNaziv", PlatiteljNaziv) :
                new ObjectParameter("PlatiteljNaziv", typeof(string));
    
            var platiteljAdresaParameter = PlatiteljAdresa != null ?
                new ObjectParameter("PlatiteljAdresa", PlatiteljAdresa) :
                new ObjectParameter("PlatiteljAdresa", typeof(string));
    
            var platiteljSjedisteParameter = PlatiteljSjediste != null ?
                new ObjectParameter("PlatiteljSjediste", PlatiteljSjediste) :
                new ObjectParameter("PlatiteljSjediste", typeof(string));
    
            var platiteljRacunParameter = PlatiteljRacun != null ?
                new ObjectParameter("PlatiteljRacun", PlatiteljRacun) :
                new ObjectParameter("PlatiteljRacun", typeof(string));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljNazivParameter = PrimateljNaziv != null ?
                new ObjectParameter("PrimateljNaziv", PrimateljNaziv) :
                new ObjectParameter("PrimateljNaziv", typeof(string));
    
            var primateljAdresaParameter = PrimateljAdresa != null ?
                new ObjectParameter("PrimateljAdresa", PrimateljAdresa) :
                new ObjectParameter("PrimateljAdresa", typeof(string));
    
            var primateljSjedisteParameter = PrimateljSjediste != null ?
                new ObjectParameter("PrimateljSjediste", PrimateljSjediste) :
                new ObjectParameter("PrimateljSjediste", typeof(string));
    
            var primateljRacunParameter = PrimateljRacun != null ?
                new ObjectParameter("PrimateljRacun", PrimateljRacun) :
                new ObjectParameter("PrimateljRacun", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var hitnoParameter = Hitno.HasValue ?
                new ObjectParameter("Hitno", Hitno) :
                new ObjectParameter("Hitno", typeof(bool));
    
            var sWIFTParameter = SWIFT != null ?
                new ObjectParameter("SWIFT", SWIFT) :
                new ObjectParameter("SWIFT", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaAdresaParameter = BankaAdresa != null ?
                new ObjectParameter("BankaAdresa", BankaAdresa) :
                new ObjectParameter("BankaAdresa", typeof(string));
    
            var bankaSjedisteParameter = BankaSjediste != null ?
                new ObjectParameter("BankaSjediste", BankaSjediste) :
                new ObjectParameter("BankaSjediste", typeof(string));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var iD_SubjektPrimateljParameter = ID_SubjektPrimatelj.HasValue ?
                new ObjectParameter("ID_SubjektPrimatelj", ID_SubjektPrimatelj) :
                new ObjectParameter("ID_SubjektPrimatelj", typeof(long));
    
            var opisPlacanjePlatiteljParameter = OpisPlacanjePlatitelj != null ?
                new ObjectParameter("OpisPlacanjePlatitelj", OpisPlacanjePlatitelj) :
                new ObjectParameter("OpisPlacanjePlatitelj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_INSERT", mergeOption, iD_HUBParameter, iDHUBNalogVrsta2013AParameter, iD_SubjektPlatiteljParameter, iDHUBModel2013APlatiteljParameter, iDHUBModel2013APrimateljParameter, iDValutaPlacanjeParameter, iDValutaPokriceParameter, iDHUBNamjena2013AParameter, iDHUBPrimateljVrsta2013AParameter, iDHUBTroskoviOpcija2013AParameter, iD_StornoHUB2013AParameter, iDDrzavaPrimateljParameter, iDDrzavaBankaParameter, platiteljNazivParameter, platiteljAdresaParameter, platiteljSjedisteParameter, platiteljRacunParameter, platiteljPozivNaBrojParameter, primateljNazivParameter, primateljAdresaParameter, primateljSjedisteParameter, primateljRacunParameter, primateljPozivNaBrojParameter, iznosParameter, opisPlacanjeParameter, hitnoParameter, sWIFTParameter, bankaNazivParameter, bankaAdresaParameter, bankaSjedisteParameter, datumIzvrsenjeParameter, datumDospijeceParameter, stornoParameter, iD_SubjektPrimateljParameter, opisPlacanjePlatiteljParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_SELECT(long? ID_HUB2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUB2013AParameter = ID_HUB2013A.HasValue ?
                new ObjectParameter("ID_HUB2013A", ID_HUB2013A) :
                new ObjectParameter("ID_HUB2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_SELECT", iD_HUB2013AParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_SELECT(long? ID_HUB2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUB2013AParameter = ID_HUB2013A.HasValue ?
                new ObjectParameter("ID_HUB2013A", ID_HUB2013A) :
                new ObjectParameter("ID_HUB2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_SELECT", mergeOption, iD_HUB2013AParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_UPDATE(long? ID_HUB2013A, long? ID_HUB, int? IDHUBNalogVrsta2013A, long? ID_SubjektPlatitelj, int? IDHUBModel2013APlatitelj, int? IDHUBModel2013APrimatelj, string IDValutaPlacanje, string IDValutaPokrice, int? IDHUBNamjena2013A, int? IDHUBPrimateljVrsta2013A, int? IDHUBTroskoviOpcija2013A, long? ID_StornoHUB2013A, string IDDrzavaPrimatelj, string IDDrzavaBanka, string PlatiteljNaziv, string PlatiteljAdresa, string PlatiteljSjediste, string PlatiteljRacun, string PlatiteljPozivNaBroj, string PrimateljNaziv, string PrimateljAdresa, string PrimateljSjediste, string PrimateljRacun, string PrimateljPozivNaBroj, decimal? Iznos, string OpisPlacanje, bool? Hitno, string SWIFT, string BankaNaziv, string BankaAdresa, string BankaSjediste, DateTime? DatumIzvrsenje, DateTime? DatumDospijece, bool? Storno, long? ID_SubjektPrimatelj, string OpisPlacanjePlatitelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUB2013AParameter = ID_HUB2013A.HasValue ?
                new ObjectParameter("ID_HUB2013A", ID_HUB2013A) :
                new ObjectParameter("ID_HUB2013A", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iD_SubjektPlatiteljParameter = ID_SubjektPlatitelj.HasValue ?
                new ObjectParameter("ID_SubjektPlatitelj", ID_SubjektPlatitelj) :
                new ObjectParameter("ID_SubjektPlatitelj", typeof(long));
    
            var iDHUBModel2013APlatiteljParameter = IDHUBModel2013APlatitelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APlatitelj", IDHUBModel2013APlatitelj) :
                new ObjectParameter("IDHUBModel2013APlatitelj", typeof(int));
    
            var iDHUBModel2013APrimateljParameter = IDHUBModel2013APrimatelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APrimatelj", IDHUBModel2013APrimatelj) :
                new ObjectParameter("IDHUBModel2013APrimatelj", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaPokriceParameter = IDValutaPokrice != null ?
                new ObjectParameter("IDValutaPokrice", IDValutaPokrice) :
                new ObjectParameter("IDValutaPokrice", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var iD_StornoHUB2013AParameter = ID_StornoHUB2013A.HasValue ?
                new ObjectParameter("ID_StornoHUB2013A", ID_StornoHUB2013A) :
                new ObjectParameter("ID_StornoHUB2013A", typeof(long));
    
            var iDDrzavaPrimateljParameter = IDDrzavaPrimatelj != null ?
                new ObjectParameter("IDDrzavaPrimatelj", IDDrzavaPrimatelj) :
                new ObjectParameter("IDDrzavaPrimatelj", typeof(string));
    
            var iDDrzavaBankaParameter = IDDrzavaBanka != null ?
                new ObjectParameter("IDDrzavaBanka", IDDrzavaBanka) :
                new ObjectParameter("IDDrzavaBanka", typeof(string));
    
            var platiteljNazivParameter = PlatiteljNaziv != null ?
                new ObjectParameter("PlatiteljNaziv", PlatiteljNaziv) :
                new ObjectParameter("PlatiteljNaziv", typeof(string));
    
            var platiteljAdresaParameter = PlatiteljAdresa != null ?
                new ObjectParameter("PlatiteljAdresa", PlatiteljAdresa) :
                new ObjectParameter("PlatiteljAdresa", typeof(string));
    
            var platiteljSjedisteParameter = PlatiteljSjediste != null ?
                new ObjectParameter("PlatiteljSjediste", PlatiteljSjediste) :
                new ObjectParameter("PlatiteljSjediste", typeof(string));
    
            var platiteljRacunParameter = PlatiteljRacun != null ?
                new ObjectParameter("PlatiteljRacun", PlatiteljRacun) :
                new ObjectParameter("PlatiteljRacun", typeof(string));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljNazivParameter = PrimateljNaziv != null ?
                new ObjectParameter("PrimateljNaziv", PrimateljNaziv) :
                new ObjectParameter("PrimateljNaziv", typeof(string));
    
            var primateljAdresaParameter = PrimateljAdresa != null ?
                new ObjectParameter("PrimateljAdresa", PrimateljAdresa) :
                new ObjectParameter("PrimateljAdresa", typeof(string));
    
            var primateljSjedisteParameter = PrimateljSjediste != null ?
                new ObjectParameter("PrimateljSjediste", PrimateljSjediste) :
                new ObjectParameter("PrimateljSjediste", typeof(string));
    
            var primateljRacunParameter = PrimateljRacun != null ?
                new ObjectParameter("PrimateljRacun", PrimateljRacun) :
                new ObjectParameter("PrimateljRacun", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var hitnoParameter = Hitno.HasValue ?
                new ObjectParameter("Hitno", Hitno) :
                new ObjectParameter("Hitno", typeof(bool));
    
            var sWIFTParameter = SWIFT != null ?
                new ObjectParameter("SWIFT", SWIFT) :
                new ObjectParameter("SWIFT", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaAdresaParameter = BankaAdresa != null ?
                new ObjectParameter("BankaAdresa", BankaAdresa) :
                new ObjectParameter("BankaAdresa", typeof(string));
    
            var bankaSjedisteParameter = BankaSjediste != null ?
                new ObjectParameter("BankaSjediste", BankaSjediste) :
                new ObjectParameter("BankaSjediste", typeof(string));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var iD_SubjektPrimateljParameter = ID_SubjektPrimatelj.HasValue ?
                new ObjectParameter("ID_SubjektPrimatelj", ID_SubjektPrimatelj) :
                new ObjectParameter("ID_SubjektPrimatelj", typeof(long));
    
            var opisPlacanjePlatiteljParameter = OpisPlacanjePlatitelj != null ?
                new ObjectParameter("OpisPlacanjePlatitelj", OpisPlacanjePlatitelj) :
                new ObjectParameter("OpisPlacanjePlatitelj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_UPDATE", iD_HUB2013AParameter, iD_HUBParameter, iDHUBNalogVrsta2013AParameter, iD_SubjektPlatiteljParameter, iDHUBModel2013APlatiteljParameter, iDHUBModel2013APrimateljParameter, iDValutaPlacanjeParameter, iDValutaPokriceParameter, iDHUBNamjena2013AParameter, iDHUBPrimateljVrsta2013AParameter, iDHUBTroskoviOpcija2013AParameter, iD_StornoHUB2013AParameter, iDDrzavaPrimateljParameter, iDDrzavaBankaParameter, platiteljNazivParameter, platiteljAdresaParameter, platiteljSjedisteParameter, platiteljRacunParameter, platiteljPozivNaBrojParameter, primateljNazivParameter, primateljAdresaParameter, primateljSjedisteParameter, primateljRacunParameter, primateljPozivNaBrojParameter, iznosParameter, opisPlacanjeParameter, hitnoParameter, sWIFTParameter, bankaNazivParameter, bankaAdresaParameter, bankaSjedisteParameter, datumIzvrsenjeParameter, datumDospijeceParameter, stornoParameter, iD_SubjektPrimateljParameter, opisPlacanjePlatiteljParameter);
        }
    
        public virtual ObjectResult<HUB2013A> USP_HUB2013A_UPDATE(long? ID_HUB2013A, long? ID_HUB, int? IDHUBNalogVrsta2013A, long? ID_SubjektPlatitelj, int? IDHUBModel2013APlatitelj, int? IDHUBModel2013APrimatelj, string IDValutaPlacanje, string IDValutaPokrice, int? IDHUBNamjena2013A, int? IDHUBPrimateljVrsta2013A, int? IDHUBTroskoviOpcija2013A, long? ID_StornoHUB2013A, string IDDrzavaPrimatelj, string IDDrzavaBanka, string PlatiteljNaziv, string PlatiteljAdresa, string PlatiteljSjediste, string PlatiteljRacun, string PlatiteljPozivNaBroj, string PrimateljNaziv, string PrimateljAdresa, string PrimateljSjediste, string PrimateljRacun, string PrimateljPozivNaBroj, decimal? Iznos, string OpisPlacanje, bool? Hitno, string SWIFT, string BankaNaziv, string BankaAdresa, string BankaSjediste, DateTime? DatumIzvrsenje, DateTime? DatumDospijece, bool? Storno, long? ID_SubjektPrimatelj, string OpisPlacanjePlatitelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUB2013A).Assembly);
    
            var iD_HUB2013AParameter = ID_HUB2013A.HasValue ?
                new ObjectParameter("ID_HUB2013A", ID_HUB2013A) :
                new ObjectParameter("ID_HUB2013A", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iD_SubjektPlatiteljParameter = ID_SubjektPlatitelj.HasValue ?
                new ObjectParameter("ID_SubjektPlatitelj", ID_SubjektPlatitelj) :
                new ObjectParameter("ID_SubjektPlatitelj", typeof(long));
    
            var iDHUBModel2013APlatiteljParameter = IDHUBModel2013APlatitelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APlatitelj", IDHUBModel2013APlatitelj) :
                new ObjectParameter("IDHUBModel2013APlatitelj", typeof(int));
    
            var iDHUBModel2013APrimateljParameter = IDHUBModel2013APrimatelj.HasValue ?
                new ObjectParameter("IDHUBModel2013APrimatelj", IDHUBModel2013APrimatelj) :
                new ObjectParameter("IDHUBModel2013APrimatelj", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaPokriceParameter = IDValutaPokrice != null ?
                new ObjectParameter("IDValutaPokrice", IDValutaPokrice) :
                new ObjectParameter("IDValutaPokrice", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var iD_StornoHUB2013AParameter = ID_StornoHUB2013A.HasValue ?
                new ObjectParameter("ID_StornoHUB2013A", ID_StornoHUB2013A) :
                new ObjectParameter("ID_StornoHUB2013A", typeof(long));
    
            var iDDrzavaPrimateljParameter = IDDrzavaPrimatelj != null ?
                new ObjectParameter("IDDrzavaPrimatelj", IDDrzavaPrimatelj) :
                new ObjectParameter("IDDrzavaPrimatelj", typeof(string));
    
            var iDDrzavaBankaParameter = IDDrzavaBanka != null ?
                new ObjectParameter("IDDrzavaBanka", IDDrzavaBanka) :
                new ObjectParameter("IDDrzavaBanka", typeof(string));
    
            var platiteljNazivParameter = PlatiteljNaziv != null ?
                new ObjectParameter("PlatiteljNaziv", PlatiteljNaziv) :
                new ObjectParameter("PlatiteljNaziv", typeof(string));
    
            var platiteljAdresaParameter = PlatiteljAdresa != null ?
                new ObjectParameter("PlatiteljAdresa", PlatiteljAdresa) :
                new ObjectParameter("PlatiteljAdresa", typeof(string));
    
            var platiteljSjedisteParameter = PlatiteljSjediste != null ?
                new ObjectParameter("PlatiteljSjediste", PlatiteljSjediste) :
                new ObjectParameter("PlatiteljSjediste", typeof(string));
    
            var platiteljRacunParameter = PlatiteljRacun != null ?
                new ObjectParameter("PlatiteljRacun", PlatiteljRacun) :
                new ObjectParameter("PlatiteljRacun", typeof(string));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljNazivParameter = PrimateljNaziv != null ?
                new ObjectParameter("PrimateljNaziv", PrimateljNaziv) :
                new ObjectParameter("PrimateljNaziv", typeof(string));
    
            var primateljAdresaParameter = PrimateljAdresa != null ?
                new ObjectParameter("PrimateljAdresa", PrimateljAdresa) :
                new ObjectParameter("PrimateljAdresa", typeof(string));
    
            var primateljSjedisteParameter = PrimateljSjediste != null ?
                new ObjectParameter("PrimateljSjediste", PrimateljSjediste) :
                new ObjectParameter("PrimateljSjediste", typeof(string));
    
            var primateljRacunParameter = PrimateljRacun != null ?
                new ObjectParameter("PrimateljRacun", PrimateljRacun) :
                new ObjectParameter("PrimateljRacun", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var hitnoParameter = Hitno.HasValue ?
                new ObjectParameter("Hitno", Hitno) :
                new ObjectParameter("Hitno", typeof(bool));
    
            var sWIFTParameter = SWIFT != null ?
                new ObjectParameter("SWIFT", SWIFT) :
                new ObjectParameter("SWIFT", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaAdresaParameter = BankaAdresa != null ?
                new ObjectParameter("BankaAdresa", BankaAdresa) :
                new ObjectParameter("BankaAdresa", typeof(string));
    
            var bankaSjedisteParameter = BankaSjediste != null ?
                new ObjectParameter("BankaSjediste", BankaSjediste) :
                new ObjectParameter("BankaSjediste", typeof(string));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var iD_SubjektPrimateljParameter = ID_SubjektPrimatelj.HasValue ?
                new ObjectParameter("ID_SubjektPrimatelj", ID_SubjektPrimatelj) :
                new ObjectParameter("ID_SubjektPrimatelj", typeof(long));
    
            var opisPlacanjePlatiteljParameter = OpisPlacanjePlatitelj != null ?
                new ObjectParameter("OpisPlacanjePlatitelj", OpisPlacanjePlatitelj) :
                new ObjectParameter("OpisPlacanjePlatitelj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUB2013A>("USP_HUB2013A_UPDATE", mergeOption, iD_HUB2013AParameter, iD_HUBParameter, iDHUBNalogVrsta2013AParameter, iD_SubjektPlatiteljParameter, iDHUBModel2013APlatiteljParameter, iDHUBModel2013APrimateljParameter, iDValutaPlacanjeParameter, iDValutaPokriceParameter, iDHUBNamjena2013AParameter, iDHUBPrimateljVrsta2013AParameter, iDHUBTroskoviOpcija2013AParameter, iD_StornoHUB2013AParameter, iDDrzavaPrimateljParameter, iDDrzavaBankaParameter, platiteljNazivParameter, platiteljAdresaParameter, platiteljSjedisteParameter, platiteljRacunParameter, platiteljPozivNaBrojParameter, primateljNazivParameter, primateljAdresaParameter, primateljSjedisteParameter, primateljRacunParameter, primateljPozivNaBrojParameter, iznosParameter, opisPlacanjeParameter, hitnoParameter, sWIFTParameter, bankaNazivParameter, bankaAdresaParameter, bankaSjedisteParameter, datumIzvrsenjeParameter, datumDospijeceParameter, stornoParameter, iD_SubjektPrimateljParameter, opisPlacanjePlatiteljParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBDokumentIzvor2013A_DELETE(int? IDHUBDokumentIzvor2013A)
        {
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBDokumentIzvor2013A_DELETE", iDHUBDokumentIzvor2013AParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_INSERT(int? IDHUBDokumentIzvor2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_INSERT", iDHUBDokumentIzvor2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_INSERT(int? IDHUBDokumentIzvor2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_INSERT", mergeOption, iDHUBDokumentIzvor2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_SELECT(int? IDHUBDokumentIzvor2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_SELECT", iDHUBDokumentIzvor2013AParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_SELECT(int? IDHUBDokumentIzvor2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_SELECT", mergeOption, iDHUBDokumentIzvor2013AParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_UPDATE(int? IDHUBDokumentIzvor2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_UPDATE", iDHUBDokumentIzvor2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBDokumentIzvor2013A> USP_HUBDokumentIzvor2013A_UPDATE(int? IDHUBDokumentIzvor2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBDokumentIzvor2013A).Assembly);
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBDokumentIzvor2013A>("USP_HUBDokumentIzvor2013A_UPDATE", mergeOption, iDHUBDokumentIzvor2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBImport_DELETE(long? ID_HUBImport)
        {
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBImport_DELETE", iD_HUBImportParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_INSERT(int? Godina, int? Mjesec, string ImportStatus, int? RBImport, bool? DokumentUpload, int? RBDokumentUpload, bool? Pdf, int? RBPdf, int? ErrorNumber, int? ErrorSeverity, int? ErrorState, string ErrorProcedure, int? ErrorLine, string ErrorMessage)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var importStatusParameter = ImportStatus != null ?
                new ObjectParameter("ImportStatus", ImportStatus) :
                new ObjectParameter("ImportStatus", typeof(string));
    
            var rBImportParameter = RBImport.HasValue ?
                new ObjectParameter("RBImport", RBImport) :
                new ObjectParameter("RBImport", typeof(int));
    
            var dokumentUploadParameter = DokumentUpload.HasValue ?
                new ObjectParameter("DokumentUpload", DokumentUpload) :
                new ObjectParameter("DokumentUpload", typeof(bool));
    
            var rBDokumentUploadParameter = RBDokumentUpload.HasValue ?
                new ObjectParameter("RBDokumentUpload", RBDokumentUpload) :
                new ObjectParameter("RBDokumentUpload", typeof(int));
    
            var pdfParameter = Pdf.HasValue ?
                new ObjectParameter("Pdf", Pdf) :
                new ObjectParameter("Pdf", typeof(bool));
    
            var rBPdfParameter = RBPdf.HasValue ?
                new ObjectParameter("RBPdf", RBPdf) :
                new ObjectParameter("RBPdf", typeof(int));
    
            var errorNumberParameter = ErrorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", ErrorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorSeverityParameter = ErrorSeverity.HasValue ?
                new ObjectParameter("ErrorSeverity", ErrorSeverity) :
                new ObjectParameter("ErrorSeverity", typeof(int));
    
            var errorStateParameter = ErrorState.HasValue ?
                new ObjectParameter("ErrorState", ErrorState) :
                new ObjectParameter("ErrorState", typeof(int));
    
            var errorProcedureParameter = ErrorProcedure != null ?
                new ObjectParameter("ErrorProcedure", ErrorProcedure) :
                new ObjectParameter("ErrorProcedure", typeof(string));
    
            var errorLineParameter = ErrorLine.HasValue ?
                new ObjectParameter("ErrorLine", ErrorLine) :
                new ObjectParameter("ErrorLine", typeof(int));
    
            var errorMessageParameter = ErrorMessage != null ?
                new ObjectParameter("ErrorMessage", ErrorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_INSERT", godinaParameter, mjesecParameter, importStatusParameter, rBImportParameter, dokumentUploadParameter, rBDokumentUploadParameter, pdfParameter, rBPdfParameter, errorNumberParameter, errorSeverityParameter, errorStateParameter, errorProcedureParameter, errorLineParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_INSERT(int? Godina, int? Mjesec, string ImportStatus, int? RBImport, bool? DokumentUpload, int? RBDokumentUpload, bool? Pdf, int? RBPdf, int? ErrorNumber, int? ErrorSeverity, int? ErrorState, string ErrorProcedure, int? ErrorLine, string ErrorMessage, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var importStatusParameter = ImportStatus != null ?
                new ObjectParameter("ImportStatus", ImportStatus) :
                new ObjectParameter("ImportStatus", typeof(string));
    
            var rBImportParameter = RBImport.HasValue ?
                new ObjectParameter("RBImport", RBImport) :
                new ObjectParameter("RBImport", typeof(int));
    
            var dokumentUploadParameter = DokumentUpload.HasValue ?
                new ObjectParameter("DokumentUpload", DokumentUpload) :
                new ObjectParameter("DokumentUpload", typeof(bool));
    
            var rBDokumentUploadParameter = RBDokumentUpload.HasValue ?
                new ObjectParameter("RBDokumentUpload", RBDokumentUpload) :
                new ObjectParameter("RBDokumentUpload", typeof(int));
    
            var pdfParameter = Pdf.HasValue ?
                new ObjectParameter("Pdf", Pdf) :
                new ObjectParameter("Pdf", typeof(bool));
    
            var rBPdfParameter = RBPdf.HasValue ?
                new ObjectParameter("RBPdf", RBPdf) :
                new ObjectParameter("RBPdf", typeof(int));
    
            var errorNumberParameter = ErrorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", ErrorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorSeverityParameter = ErrorSeverity.HasValue ?
                new ObjectParameter("ErrorSeverity", ErrorSeverity) :
                new ObjectParameter("ErrorSeverity", typeof(int));
    
            var errorStateParameter = ErrorState.HasValue ?
                new ObjectParameter("ErrorState", ErrorState) :
                new ObjectParameter("ErrorState", typeof(int));
    
            var errorProcedureParameter = ErrorProcedure != null ?
                new ObjectParameter("ErrorProcedure", ErrorProcedure) :
                new ObjectParameter("ErrorProcedure", typeof(string));
    
            var errorLineParameter = ErrorLine.HasValue ?
                new ObjectParameter("ErrorLine", ErrorLine) :
                new ObjectParameter("ErrorLine", typeof(int));
    
            var errorMessageParameter = ErrorMessage != null ?
                new ObjectParameter("ErrorMessage", ErrorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_INSERT", mergeOption, godinaParameter, mjesecParameter, importStatusParameter, rBImportParameter, dokumentUploadParameter, rBDokumentUploadParameter, pdfParameter, rBPdfParameter, errorNumberParameter, errorSeverityParameter, errorStateParameter, errorProcedureParameter, errorLineParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_SELECT(long? ID_HUBImport)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_SELECT", iD_HUBImportParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_SELECT(long? ID_HUBImport, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_SELECT", mergeOption, iD_HUBImportParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_UPDATE(long? ID_HUBImport, int? Godina, int? Mjesec, string ImportStatus, int? RBImport, bool? DokumentUpload, int? RBDokumentUpload, bool? Pdf, int? RBPdf, int? ErrorNumber, int? ErrorSeverity, int? ErrorState, string ErrorProcedure, int? ErrorLine, string ErrorMessage)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var importStatusParameter = ImportStatus != null ?
                new ObjectParameter("ImportStatus", ImportStatus) :
                new ObjectParameter("ImportStatus", typeof(string));
    
            var rBImportParameter = RBImport.HasValue ?
                new ObjectParameter("RBImport", RBImport) :
                new ObjectParameter("RBImport", typeof(int));
    
            var dokumentUploadParameter = DokumentUpload.HasValue ?
                new ObjectParameter("DokumentUpload", DokumentUpload) :
                new ObjectParameter("DokumentUpload", typeof(bool));
    
            var rBDokumentUploadParameter = RBDokumentUpload.HasValue ?
                new ObjectParameter("RBDokumentUpload", RBDokumentUpload) :
                new ObjectParameter("RBDokumentUpload", typeof(int));
    
            var pdfParameter = Pdf.HasValue ?
                new ObjectParameter("Pdf", Pdf) :
                new ObjectParameter("Pdf", typeof(bool));
    
            var rBPdfParameter = RBPdf.HasValue ?
                new ObjectParameter("RBPdf", RBPdf) :
                new ObjectParameter("RBPdf", typeof(int));
    
            var errorNumberParameter = ErrorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", ErrorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorSeverityParameter = ErrorSeverity.HasValue ?
                new ObjectParameter("ErrorSeverity", ErrorSeverity) :
                new ObjectParameter("ErrorSeverity", typeof(int));
    
            var errorStateParameter = ErrorState.HasValue ?
                new ObjectParameter("ErrorState", ErrorState) :
                new ObjectParameter("ErrorState", typeof(int));
    
            var errorProcedureParameter = ErrorProcedure != null ?
                new ObjectParameter("ErrorProcedure", ErrorProcedure) :
                new ObjectParameter("ErrorProcedure", typeof(string));
    
            var errorLineParameter = ErrorLine.HasValue ?
                new ObjectParameter("ErrorLine", ErrorLine) :
                new ObjectParameter("ErrorLine", typeof(int));
    
            var errorMessageParameter = ErrorMessage != null ?
                new ObjectParameter("ErrorMessage", ErrorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_UPDATE", iD_HUBImportParameter, godinaParameter, mjesecParameter, importStatusParameter, rBImportParameter, dokumentUploadParameter, rBDokumentUploadParameter, pdfParameter, rBPdfParameter, errorNumberParameter, errorSeverityParameter, errorStateParameter, errorProcedureParameter, errorLineParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<HUBImport> USP_HUBImport_UPDATE(long? ID_HUBImport, int? Godina, int? Mjesec, string ImportStatus, int? RBImport, bool? DokumentUpload, int? RBDokumentUpload, bool? Pdf, int? RBPdf, int? ErrorNumber, int? ErrorSeverity, int? ErrorState, string ErrorProcedure, int? ErrorLine, string ErrorMessage, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImport).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var importStatusParameter = ImportStatus != null ?
                new ObjectParameter("ImportStatus", ImportStatus) :
                new ObjectParameter("ImportStatus", typeof(string));
    
            var rBImportParameter = RBImport.HasValue ?
                new ObjectParameter("RBImport", RBImport) :
                new ObjectParameter("RBImport", typeof(int));
    
            var dokumentUploadParameter = DokumentUpload.HasValue ?
                new ObjectParameter("DokumentUpload", DokumentUpload) :
                new ObjectParameter("DokumentUpload", typeof(bool));
    
            var rBDokumentUploadParameter = RBDokumentUpload.HasValue ?
                new ObjectParameter("RBDokumentUpload", RBDokumentUpload) :
                new ObjectParameter("RBDokumentUpload", typeof(int));
    
            var pdfParameter = Pdf.HasValue ?
                new ObjectParameter("Pdf", Pdf) :
                new ObjectParameter("Pdf", typeof(bool));
    
            var rBPdfParameter = RBPdf.HasValue ?
                new ObjectParameter("RBPdf", RBPdf) :
                new ObjectParameter("RBPdf", typeof(int));
    
            var errorNumberParameter = ErrorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", ErrorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorSeverityParameter = ErrorSeverity.HasValue ?
                new ObjectParameter("ErrorSeverity", ErrorSeverity) :
                new ObjectParameter("ErrorSeverity", typeof(int));
    
            var errorStateParameter = ErrorState.HasValue ?
                new ObjectParameter("ErrorState", ErrorState) :
                new ObjectParameter("ErrorState", typeof(int));
    
            var errorProcedureParameter = ErrorProcedure != null ?
                new ObjectParameter("ErrorProcedure", ErrorProcedure) :
                new ObjectParameter("ErrorProcedure", typeof(string));
    
            var errorLineParameter = ErrorLine.HasValue ?
                new ObjectParameter("ErrorLine", ErrorLine) :
                new ObjectParameter("ErrorLine", typeof(int));
    
            var errorMessageParameter = ErrorMessage != null ?
                new ObjectParameter("ErrorMessage", ErrorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImport>("USP_HUBImport_UPDATE", mergeOption, iD_HUBImportParameter, godinaParameter, mjesecParameter, importStatusParameter, rBImportParameter, dokumentUploadParameter, rBDokumentUploadParameter, pdfParameter, rBPdfParameter, errorNumberParameter, errorSeverityParameter, errorStateParameter, errorProcedureParameter, errorLineParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBImportHUB_DELETE(long? ID_HUBImportHUB)
        {
            var iD_HUBImportHUBParameter = ID_HUBImportHUB.HasValue ?
                new ObjectParameter("ID_HUBImportHUB", ID_HUBImportHUB) :
                new ObjectParameter("ID_HUBImportHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBImportHUB_DELETE", iD_HUBImportHUBParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_INSERT(long? ID_HUBImport, long? ID_HUB, int? BrojUgovor, int? BrojObrok, int? BrojAneks, long? ID_UgovorStanOtkupObrok, DateTime? DatumDospijece, int? BrojObrokZadnji, long? ID_Kupac, string NazivKupac, string AdresaKupac, string MjestoKupac, long? ID_Stan, long? ID_Zgrada, decimal? IznosObrok, decimal? IznosUplata, decimal? Iznos, decimal? IznosObrokPrije, decimal? IznosUplataPrije, decimal? IznosDug, decimal? IznosObracun, decimal? IznosRevalorizacija, decimal? IznosZateznaKamata, int? AneksBrojObrokOd, int? AneksBrojObrok, int? UgovorBrojObrok)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var brojObrokZadnjiParameter = BrojObrokZadnji.HasValue ?
                new ObjectParameter("BrojObrokZadnji", BrojObrokZadnji) :
                new ObjectParameter("BrojObrokZadnji", typeof(int));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nazivKupacParameter = NazivKupac != null ?
                new ObjectParameter("NazivKupac", NazivKupac) :
                new ObjectParameter("NazivKupac", typeof(string));
    
            var adresaKupacParameter = AdresaKupac != null ?
                new ObjectParameter("AdresaKupac", AdresaKupac) :
                new ObjectParameter("AdresaKupac", typeof(string));
    
            var mjestoKupacParameter = MjestoKupac != null ?
                new ObjectParameter("MjestoKupac", MjestoKupac) :
                new ObjectParameter("MjestoKupac", typeof(string));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iznosObrokParameter = IznosObrok.HasValue ?
                new ObjectParameter("IznosObrok", IznosObrok) :
                new ObjectParameter("IznosObrok", typeof(decimal));
    
            var iznosUplataParameter = IznosUplata.HasValue ?
                new ObjectParameter("IznosUplata", IznosUplata) :
                new ObjectParameter("IznosUplata", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosObrokPrijeParameter = IznosObrokPrije.HasValue ?
                new ObjectParameter("IznosObrokPrije", IznosObrokPrije) :
                new ObjectParameter("IznosObrokPrije", typeof(decimal));
    
            var iznosUplataPrijeParameter = IznosUplataPrije.HasValue ?
                new ObjectParameter("IznosUplataPrije", IznosUplataPrije) :
                new ObjectParameter("IznosUplataPrije", typeof(decimal));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosObracunParameter = IznosObracun.HasValue ?
                new ObjectParameter("IznosObracun", IznosObracun) :
                new ObjectParameter("IznosObracun", typeof(decimal));
    
            var iznosRevalorizacijaParameter = IznosRevalorizacija.HasValue ?
                new ObjectParameter("IznosRevalorizacija", IznosRevalorizacija) :
                new ObjectParameter("IznosRevalorizacija", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var aneksBrojObrokOdParameter = AneksBrojObrokOd.HasValue ?
                new ObjectParameter("AneksBrojObrokOd", AneksBrojObrokOd) :
                new ObjectParameter("AneksBrojObrokOd", typeof(int));
    
            var aneksBrojObrokParameter = AneksBrojObrok.HasValue ?
                new ObjectParameter("AneksBrojObrok", AneksBrojObrok) :
                new ObjectParameter("AneksBrojObrok", typeof(int));
    
            var ugovorBrojObrokParameter = UgovorBrojObrok.HasValue ?
                new ObjectParameter("UgovorBrojObrok", UgovorBrojObrok) :
                new ObjectParameter("UgovorBrojObrok", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_INSERT", iD_HUBImportParameter, iD_HUBParameter, brojUgovorParameter, brojObrokParameter, brojAneksParameter, iD_UgovorStanOtkupObrokParameter, datumDospijeceParameter, brojObrokZadnjiParameter, iD_KupacParameter, nazivKupacParameter, adresaKupacParameter, mjestoKupacParameter, iD_StanParameter, iD_ZgradaParameter, iznosObrokParameter, iznosUplataParameter, iznosParameter, iznosObrokPrijeParameter, iznosUplataPrijeParameter, iznosDugParameter, iznosObracunParameter, iznosRevalorizacijaParameter, iznosZateznaKamataParameter, aneksBrojObrokOdParameter, aneksBrojObrokParameter, ugovorBrojObrokParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_INSERT(long? ID_HUBImport, long? ID_HUB, int? BrojUgovor, int? BrojObrok, int? BrojAneks, long? ID_UgovorStanOtkupObrok, DateTime? DatumDospijece, int? BrojObrokZadnji, long? ID_Kupac, string NazivKupac, string AdresaKupac, string MjestoKupac, long? ID_Stan, long? ID_Zgrada, decimal? IznosObrok, decimal? IznosUplata, decimal? Iznos, decimal? IznosObrokPrije, decimal? IznosUplataPrije, decimal? IznosDug, decimal? IznosObracun, decimal? IznosRevalorizacija, decimal? IznosZateznaKamata, int? AneksBrojObrokOd, int? AneksBrojObrok, int? UgovorBrojObrok, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var brojObrokZadnjiParameter = BrojObrokZadnji.HasValue ?
                new ObjectParameter("BrojObrokZadnji", BrojObrokZadnji) :
                new ObjectParameter("BrojObrokZadnji", typeof(int));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nazivKupacParameter = NazivKupac != null ?
                new ObjectParameter("NazivKupac", NazivKupac) :
                new ObjectParameter("NazivKupac", typeof(string));
    
            var adresaKupacParameter = AdresaKupac != null ?
                new ObjectParameter("AdresaKupac", AdresaKupac) :
                new ObjectParameter("AdresaKupac", typeof(string));
    
            var mjestoKupacParameter = MjestoKupac != null ?
                new ObjectParameter("MjestoKupac", MjestoKupac) :
                new ObjectParameter("MjestoKupac", typeof(string));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iznosObrokParameter = IznosObrok.HasValue ?
                new ObjectParameter("IznosObrok", IznosObrok) :
                new ObjectParameter("IznosObrok", typeof(decimal));
    
            var iznosUplataParameter = IznosUplata.HasValue ?
                new ObjectParameter("IznosUplata", IznosUplata) :
                new ObjectParameter("IznosUplata", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosObrokPrijeParameter = IznosObrokPrije.HasValue ?
                new ObjectParameter("IznosObrokPrije", IznosObrokPrije) :
                new ObjectParameter("IznosObrokPrije", typeof(decimal));
    
            var iznosUplataPrijeParameter = IznosUplataPrije.HasValue ?
                new ObjectParameter("IznosUplataPrije", IznosUplataPrije) :
                new ObjectParameter("IznosUplataPrije", typeof(decimal));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosObracunParameter = IznosObracun.HasValue ?
                new ObjectParameter("IznosObracun", IznosObracun) :
                new ObjectParameter("IznosObracun", typeof(decimal));
    
            var iznosRevalorizacijaParameter = IznosRevalorizacija.HasValue ?
                new ObjectParameter("IznosRevalorizacija", IznosRevalorizacija) :
                new ObjectParameter("IznosRevalorizacija", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var aneksBrojObrokOdParameter = AneksBrojObrokOd.HasValue ?
                new ObjectParameter("AneksBrojObrokOd", AneksBrojObrokOd) :
                new ObjectParameter("AneksBrojObrokOd", typeof(int));
    
            var aneksBrojObrokParameter = AneksBrojObrok.HasValue ?
                new ObjectParameter("AneksBrojObrok", AneksBrojObrok) :
                new ObjectParameter("AneksBrojObrok", typeof(int));
    
            var ugovorBrojObrokParameter = UgovorBrojObrok.HasValue ?
                new ObjectParameter("UgovorBrojObrok", UgovorBrojObrok) :
                new ObjectParameter("UgovorBrojObrok", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_INSERT", mergeOption, iD_HUBImportParameter, iD_HUBParameter, brojUgovorParameter, brojObrokParameter, brojAneksParameter, iD_UgovorStanOtkupObrokParameter, datumDospijeceParameter, brojObrokZadnjiParameter, iD_KupacParameter, nazivKupacParameter, adresaKupacParameter, mjestoKupacParameter, iD_StanParameter, iD_ZgradaParameter, iznosObrokParameter, iznosUplataParameter, iznosParameter, iznosObrokPrijeParameter, iznosUplataPrijeParameter, iznosDugParameter, iznosObracunParameter, iznosRevalorizacijaParameter, iznosZateznaKamataParameter, aneksBrojObrokOdParameter, aneksBrojObrokParameter, ugovorBrojObrokParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_SELECT(long? ID_HUBImportHUB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportHUBParameter = ID_HUBImportHUB.HasValue ?
                new ObjectParameter("ID_HUBImportHUB", ID_HUBImportHUB) :
                new ObjectParameter("ID_HUBImportHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_SELECT", iD_HUBImportHUBParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_SELECT(long? ID_HUBImportHUB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportHUBParameter = ID_HUBImportHUB.HasValue ?
                new ObjectParameter("ID_HUBImportHUB", ID_HUBImportHUB) :
                new ObjectParameter("ID_HUBImportHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_SELECT", mergeOption, iD_HUBImportHUBParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_UPDATE(long? ID_HUBImportHUB, long? ID_HUBImport, long? ID_HUB, int? BrojUgovor, int? BrojObrok, int? BrojAneks, long? ID_UgovorStanOtkupObrok, DateTime? DatumDospijece, int? BrojObrokZadnji, long? ID_Kupac, string NazivKupac, string AdresaKupac, string MjestoKupac, long? ID_Stan, long? ID_Zgrada, decimal? IznosObrok, decimal? IznosUplata, decimal? Iznos, decimal? IznosObrokPrije, decimal? IznosUplataPrije, decimal? IznosDug, decimal? IznosObracun, decimal? IznosRevalorizacija, decimal? IznosZateznaKamata, int? AneksBrojObrokOd, int? AneksBrojObrok, int? UgovorBrojObrok)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportHUBParameter = ID_HUBImportHUB.HasValue ?
                new ObjectParameter("ID_HUBImportHUB", ID_HUBImportHUB) :
                new ObjectParameter("ID_HUBImportHUB", typeof(long));
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var brojObrokZadnjiParameter = BrojObrokZadnji.HasValue ?
                new ObjectParameter("BrojObrokZadnji", BrojObrokZadnji) :
                new ObjectParameter("BrojObrokZadnji", typeof(int));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nazivKupacParameter = NazivKupac != null ?
                new ObjectParameter("NazivKupac", NazivKupac) :
                new ObjectParameter("NazivKupac", typeof(string));
    
            var adresaKupacParameter = AdresaKupac != null ?
                new ObjectParameter("AdresaKupac", AdresaKupac) :
                new ObjectParameter("AdresaKupac", typeof(string));
    
            var mjestoKupacParameter = MjestoKupac != null ?
                new ObjectParameter("MjestoKupac", MjestoKupac) :
                new ObjectParameter("MjestoKupac", typeof(string));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iznosObrokParameter = IznosObrok.HasValue ?
                new ObjectParameter("IznosObrok", IznosObrok) :
                new ObjectParameter("IznosObrok", typeof(decimal));
    
            var iznosUplataParameter = IznosUplata.HasValue ?
                new ObjectParameter("IznosUplata", IznosUplata) :
                new ObjectParameter("IznosUplata", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosObrokPrijeParameter = IznosObrokPrije.HasValue ?
                new ObjectParameter("IznosObrokPrije", IznosObrokPrije) :
                new ObjectParameter("IznosObrokPrije", typeof(decimal));
    
            var iznosUplataPrijeParameter = IznosUplataPrije.HasValue ?
                new ObjectParameter("IznosUplataPrije", IznosUplataPrije) :
                new ObjectParameter("IznosUplataPrije", typeof(decimal));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosObracunParameter = IznosObracun.HasValue ?
                new ObjectParameter("IznosObracun", IznosObracun) :
                new ObjectParameter("IznosObracun", typeof(decimal));
    
            var iznosRevalorizacijaParameter = IznosRevalorizacija.HasValue ?
                new ObjectParameter("IznosRevalorizacija", IznosRevalorizacija) :
                new ObjectParameter("IznosRevalorizacija", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var aneksBrojObrokOdParameter = AneksBrojObrokOd.HasValue ?
                new ObjectParameter("AneksBrojObrokOd", AneksBrojObrokOd) :
                new ObjectParameter("AneksBrojObrokOd", typeof(int));
    
            var aneksBrojObrokParameter = AneksBrojObrok.HasValue ?
                new ObjectParameter("AneksBrojObrok", AneksBrojObrok) :
                new ObjectParameter("AneksBrojObrok", typeof(int));
    
            var ugovorBrojObrokParameter = UgovorBrojObrok.HasValue ?
                new ObjectParameter("UgovorBrojObrok", UgovorBrojObrok) :
                new ObjectParameter("UgovorBrojObrok", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_UPDATE", iD_HUBImportHUBParameter, iD_HUBImportParameter, iD_HUBParameter, brojUgovorParameter, brojObrokParameter, brojAneksParameter, iD_UgovorStanOtkupObrokParameter, datumDospijeceParameter, brojObrokZadnjiParameter, iD_KupacParameter, nazivKupacParameter, adresaKupacParameter, mjestoKupacParameter, iD_StanParameter, iD_ZgradaParameter, iznosObrokParameter, iznosUplataParameter, iznosParameter, iznosObrokPrijeParameter, iznosUplataPrijeParameter, iznosDugParameter, iznosObracunParameter, iznosRevalorizacijaParameter, iznosZateznaKamataParameter, aneksBrojObrokOdParameter, aneksBrojObrokParameter, ugovorBrojObrokParameter);
        }
    
        public virtual ObjectResult<HUBImportHUB> USP_HUBImportHUB_UPDATE(long? ID_HUBImportHUB, long? ID_HUBImport, long? ID_HUB, int? BrojUgovor, int? BrojObrok, int? BrojAneks, long? ID_UgovorStanOtkupObrok, DateTime? DatumDospijece, int? BrojObrokZadnji, long? ID_Kupac, string NazivKupac, string AdresaKupac, string MjestoKupac, long? ID_Stan, long? ID_Zgrada, decimal? IznosObrok, decimal? IznosUplata, decimal? Iznos, decimal? IznosObrokPrije, decimal? IznosUplataPrije, decimal? IznosDug, decimal? IznosObracun, decimal? IznosRevalorizacija, decimal? IznosZateznaKamata, int? AneksBrojObrokOd, int? AneksBrojObrok, int? UgovorBrojObrok, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBImportHUB).Assembly);
    
            var iD_HUBImportHUBParameter = ID_HUBImportHUB.HasValue ?
                new ObjectParameter("ID_HUBImportHUB", ID_HUBImportHUB) :
                new ObjectParameter("ID_HUBImportHUB", typeof(long));
    
            var iD_HUBImportParameter = ID_HUBImport.HasValue ?
                new ObjectParameter("ID_HUBImport", ID_HUBImport) :
                new ObjectParameter("ID_HUBImport", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var brojObrokZadnjiParameter = BrojObrokZadnji.HasValue ?
                new ObjectParameter("BrojObrokZadnji", BrojObrokZadnji) :
                new ObjectParameter("BrojObrokZadnji", typeof(int));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nazivKupacParameter = NazivKupac != null ?
                new ObjectParameter("NazivKupac", NazivKupac) :
                new ObjectParameter("NazivKupac", typeof(string));
    
            var adresaKupacParameter = AdresaKupac != null ?
                new ObjectParameter("AdresaKupac", AdresaKupac) :
                new ObjectParameter("AdresaKupac", typeof(string));
    
            var mjestoKupacParameter = MjestoKupac != null ?
                new ObjectParameter("MjestoKupac", MjestoKupac) :
                new ObjectParameter("MjestoKupac", typeof(string));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iznosObrokParameter = IznosObrok.HasValue ?
                new ObjectParameter("IznosObrok", IznosObrok) :
                new ObjectParameter("IznosObrok", typeof(decimal));
    
            var iznosUplataParameter = IznosUplata.HasValue ?
                new ObjectParameter("IznosUplata", IznosUplata) :
                new ObjectParameter("IznosUplata", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosObrokPrijeParameter = IznosObrokPrije.HasValue ?
                new ObjectParameter("IznosObrokPrije", IznosObrokPrije) :
                new ObjectParameter("IznosObrokPrije", typeof(decimal));
    
            var iznosUplataPrijeParameter = IznosUplataPrije.HasValue ?
                new ObjectParameter("IznosUplataPrije", IznosUplataPrije) :
                new ObjectParameter("IznosUplataPrije", typeof(decimal));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosObracunParameter = IznosObracun.HasValue ?
                new ObjectParameter("IznosObracun", IznosObracun) :
                new ObjectParameter("IznosObracun", typeof(decimal));
    
            var iznosRevalorizacijaParameter = IznosRevalorizacija.HasValue ?
                new ObjectParameter("IznosRevalorizacija", IznosRevalorizacija) :
                new ObjectParameter("IznosRevalorizacija", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var aneksBrojObrokOdParameter = AneksBrojObrokOd.HasValue ?
                new ObjectParameter("AneksBrojObrokOd", AneksBrojObrokOd) :
                new ObjectParameter("AneksBrojObrokOd", typeof(int));
    
            var aneksBrojObrokParameter = AneksBrojObrok.HasValue ?
                new ObjectParameter("AneksBrojObrok", AneksBrojObrok) :
                new ObjectParameter("AneksBrojObrok", typeof(int));
    
            var ugovorBrojObrokParameter = UgovorBrojObrok.HasValue ?
                new ObjectParameter("UgovorBrojObrok", UgovorBrojObrok) :
                new ObjectParameter("UgovorBrojObrok", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBImportHUB>("USP_HUBImportHUB_UPDATE", mergeOption, iD_HUBImportHUBParameter, iD_HUBImportParameter, iD_HUBParameter, brojUgovorParameter, brojObrokParameter, brojAneksParameter, iD_UgovorStanOtkupObrokParameter, datumDospijeceParameter, brojObrokZadnjiParameter, iD_KupacParameter, nazivKupacParameter, adresaKupacParameter, mjestoKupacParameter, iD_StanParameter, iD_ZgradaParameter, iznosObrokParameter, iznosUplataParameter, iznosParameter, iznosObrokPrijeParameter, iznosUplataPrijeParameter, iznosDugParameter, iznosObracunParameter, iznosRevalorizacijaParameter, iznosZateznaKamataParameter, aneksBrojObrokOdParameter, aneksBrojObrokParameter, ugovorBrojObrokParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBKontrola_DELETE(int? IDHUBKontrola)
        {
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBKontrola_DELETE", iDHUBKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_INSERT(int? IDHUBKontrola, string Oznaka, string Naziv, string NazivKr, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_INSERT", iDHUBKontrolaParameter, oznakaParameter, nazivParameter, nazivKrParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_INSERT(int? IDHUBKontrola, string Oznaka, string Naziv, string NazivKr, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_INSERT", mergeOption, iDHUBKontrolaParameter, oznakaParameter, nazivParameter, nazivKrParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_SELECT(int? IDHUBKontrola)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_SELECT", iDHUBKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_SELECT(int? IDHUBKontrola, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_SELECT", mergeOption, iDHUBKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_UPDATE(int? IDHUBKontrola, string Oznaka, string Naziv, string NazivKr, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_UPDATE", iDHUBKontrolaParameter, oznakaParameter, nazivParameter, nazivKrParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBKontrola> USP_HUBKontrola_UPDATE(int? IDHUBKontrola, string Oznaka, string Naziv, string NazivKr, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrola).Assembly);
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrola>("USP_HUBKontrola_UPDATE", mergeOption, iDHUBKontrolaParameter, oznakaParameter, nazivParameter, nazivKrParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBKontrolaModelPodatak2013A_DELETE(int? IDHUBKontrolaModelPodatak2013A)
        {
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBKontrolaModelPodatak2013A_DELETE", iDHUBKontrolaModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_INSERT(int? IDHUBKontrolaModelPodatak2013A, int? IDHUBKontrola, int? IDHUBModelPodatak2013A, int? ZnakGranica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var znakGranicaParameter = ZnakGranica.HasValue ?
                new ObjectParameter("ZnakGranica", ZnakGranica) :
                new ObjectParameter("ZnakGranica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_INSERT", iDHUBKontrolaModelPodatak2013AParameter, iDHUBKontrolaParameter, iDHUBModelPodatak2013AParameter, znakGranicaParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_INSERT(int? IDHUBKontrolaModelPodatak2013A, int? IDHUBKontrola, int? IDHUBModelPodatak2013A, int? ZnakGranica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var znakGranicaParameter = ZnakGranica.HasValue ?
                new ObjectParameter("ZnakGranica", ZnakGranica) :
                new ObjectParameter("ZnakGranica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_INSERT", mergeOption, iDHUBKontrolaModelPodatak2013AParameter, iDHUBKontrolaParameter, iDHUBModelPodatak2013AParameter, znakGranicaParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_SELECT(int? IDHUBKontrolaModelPodatak2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_SELECT", iDHUBKontrolaModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_SELECT(int? IDHUBKontrolaModelPodatak2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_SELECT", mergeOption, iDHUBKontrolaModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_UPDATE(int? IDHUBKontrolaModelPodatak2013A, int? IDHUBKontrola, int? IDHUBModelPodatak2013A, int? ZnakGranica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var znakGranicaParameter = ZnakGranica.HasValue ?
                new ObjectParameter("ZnakGranica", ZnakGranica) :
                new ObjectParameter("ZnakGranica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_UPDATE", iDHUBKontrolaModelPodatak2013AParameter, iDHUBKontrolaParameter, iDHUBModelPodatak2013AParameter, znakGranicaParameter);
        }
    
        public virtual ObjectResult<HUBKontrolaModelPodatak2013A> USP_HUBKontrolaModelPodatak2013A_UPDATE(int? IDHUBKontrolaModelPodatak2013A, int? IDHUBKontrola, int? IDHUBModelPodatak2013A, int? ZnakGranica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBKontrolaModelPodatak2013A).Assembly);
    
            var iDHUBKontrolaModelPodatak2013AParameter = IDHUBKontrolaModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", IDHUBKontrolaModelPodatak2013A) :
                new ObjectParameter("IDHUBKontrolaModelPodatak2013A", typeof(int));
    
            var iDHUBKontrolaParameter = IDHUBKontrola.HasValue ?
                new ObjectParameter("IDHUBKontrola", IDHUBKontrola) :
                new ObjectParameter("IDHUBKontrola", typeof(int));
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var znakGranicaParameter = ZnakGranica.HasValue ?
                new ObjectParameter("ZnakGranica", ZnakGranica) :
                new ObjectParameter("ZnakGranica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBKontrolaModelPodatak2013A>("USP_HUBKontrolaModelPodatak2013A_UPDATE", mergeOption, iDHUBKontrolaModelPodatak2013AParameter, iDHUBKontrolaParameter, iDHUBModelPodatak2013AParameter, znakGranicaParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBModel2013A_DELETE(int? IDHUBModel2013A)
        {
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBModel2013A_DELETE", iDHUBModel2013AParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_INSERT(int? IDHUBModel2013A, string Oznaka, string PredOznaka, bool? Koristi, int? BrojPodatakMin, int? BrojPodatakMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var predOznakaParameter = PredOznaka != null ?
                new ObjectParameter("PredOznaka", PredOznaka) :
                new ObjectParameter("PredOznaka", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var brojPodatakMinParameter = BrojPodatakMin.HasValue ?
                new ObjectParameter("BrojPodatakMin", BrojPodatakMin) :
                new ObjectParameter("BrojPodatakMin", typeof(int));
    
            var brojPodatakMaxParameter = BrojPodatakMax.HasValue ?
                new ObjectParameter("BrojPodatakMax", BrojPodatakMax) :
                new ObjectParameter("BrojPodatakMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_INSERT", iDHUBModel2013AParameter, oznakaParameter, predOznakaParameter, koristiParameter, brojPodatakMinParameter, brojPodatakMaxParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_INSERT(int? IDHUBModel2013A, string Oznaka, string PredOznaka, bool? Koristi, int? BrojPodatakMin, int? BrojPodatakMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var predOznakaParameter = PredOznaka != null ?
                new ObjectParameter("PredOznaka", PredOznaka) :
                new ObjectParameter("PredOznaka", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var brojPodatakMinParameter = BrojPodatakMin.HasValue ?
                new ObjectParameter("BrojPodatakMin", BrojPodatakMin) :
                new ObjectParameter("BrojPodatakMin", typeof(int));
    
            var brojPodatakMaxParameter = BrojPodatakMax.HasValue ?
                new ObjectParameter("BrojPodatakMax", BrojPodatakMax) :
                new ObjectParameter("BrojPodatakMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_INSERT", mergeOption, iDHUBModel2013AParameter, oznakaParameter, predOznakaParameter, koristiParameter, brojPodatakMinParameter, brojPodatakMaxParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_SELECT(int? IDHUBModel2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_SELECT", iDHUBModel2013AParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_SELECT(int? IDHUBModel2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_SELECT", mergeOption, iDHUBModel2013AParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_UPDATE(int? IDHUBModel2013A, string Oznaka, string PredOznaka, bool? Koristi, int? BrojPodatakMin, int? BrojPodatakMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var predOznakaParameter = PredOznaka != null ?
                new ObjectParameter("PredOznaka", PredOznaka) :
                new ObjectParameter("PredOznaka", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var brojPodatakMinParameter = BrojPodatakMin.HasValue ?
                new ObjectParameter("BrojPodatakMin", BrojPodatakMin) :
                new ObjectParameter("BrojPodatakMin", typeof(int));
    
            var brojPodatakMaxParameter = BrojPodatakMax.HasValue ?
                new ObjectParameter("BrojPodatakMax", BrojPodatakMax) :
                new ObjectParameter("BrojPodatakMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_UPDATE", iDHUBModel2013AParameter, oznakaParameter, predOznakaParameter, koristiParameter, brojPodatakMinParameter, brojPodatakMaxParameter);
        }
    
        public virtual ObjectResult<HUBModel2013A> USP_HUBModel2013A_UPDATE(int? IDHUBModel2013A, string Oznaka, string PredOznaka, bool? Koristi, int? BrojPodatakMin, int? BrojPodatakMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModel2013A).Assembly);
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var predOznakaParameter = PredOznaka != null ?
                new ObjectParameter("PredOznaka", PredOznaka) :
                new ObjectParameter("PredOznaka", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var brojPodatakMinParameter = BrojPodatakMin.HasValue ?
                new ObjectParameter("BrojPodatakMin", BrojPodatakMin) :
                new ObjectParameter("BrojPodatakMin", typeof(int));
    
            var brojPodatakMaxParameter = BrojPodatakMax.HasValue ?
                new ObjectParameter("BrojPodatakMax", BrojPodatakMax) :
                new ObjectParameter("BrojPodatakMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModel2013A>("USP_HUBModel2013A_UPDATE", mergeOption, iDHUBModel2013AParameter, oznakaParameter, predOznakaParameter, koristiParameter, brojPodatakMinParameter, brojPodatakMaxParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBModelPodatak2013A_DELETE(int? IDHUBModelPodatak2013A)
        {
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBModelPodatak2013A_DELETE", iDHUBModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_INSERT(int? IDHUBModelPodatak2013A, int? IDHUBModel2013A, string Oznaka, string Naziv, bool? Fiksni, int? ZnamenkaMin, int? ZnamenkaMax, bool? KontrolaZajedno, int? PozicijaMin, int? PozicijaMax, bool? Koristi, bool? ImaKontrola)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var fiksniParameter = Fiksni.HasValue ?
                new ObjectParameter("Fiksni", Fiksni) :
                new ObjectParameter("Fiksni", typeof(bool));
    
            var znamenkaMinParameter = ZnamenkaMin.HasValue ?
                new ObjectParameter("ZnamenkaMin", ZnamenkaMin) :
                new ObjectParameter("ZnamenkaMin", typeof(int));
    
            var znamenkaMaxParameter = ZnamenkaMax.HasValue ?
                new ObjectParameter("ZnamenkaMax", ZnamenkaMax) :
                new ObjectParameter("ZnamenkaMax", typeof(int));
    
            var kontrolaZajednoParameter = KontrolaZajedno.HasValue ?
                new ObjectParameter("KontrolaZajedno", KontrolaZajedno) :
                new ObjectParameter("KontrolaZajedno", typeof(bool));
    
            var pozicijaMinParameter = PozicijaMin.HasValue ?
                new ObjectParameter("PozicijaMin", PozicijaMin) :
                new ObjectParameter("PozicijaMin", typeof(int));
    
            var pozicijaMaxParameter = PozicijaMax.HasValue ?
                new ObjectParameter("PozicijaMax", PozicijaMax) :
                new ObjectParameter("PozicijaMax", typeof(int));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var imaKontrolaParameter = ImaKontrola.HasValue ?
                new ObjectParameter("ImaKontrola", ImaKontrola) :
                new ObjectParameter("ImaKontrola", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_INSERT", iDHUBModelPodatak2013AParameter, iDHUBModel2013AParameter, oznakaParameter, nazivParameter, fiksniParameter, znamenkaMinParameter, znamenkaMaxParameter, kontrolaZajednoParameter, pozicijaMinParameter, pozicijaMaxParameter, koristiParameter, imaKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_INSERT(int? IDHUBModelPodatak2013A, int? IDHUBModel2013A, string Oznaka, string Naziv, bool? Fiksni, int? ZnamenkaMin, int? ZnamenkaMax, bool? KontrolaZajedno, int? PozicijaMin, int? PozicijaMax, bool? Koristi, bool? ImaKontrola, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var fiksniParameter = Fiksni.HasValue ?
                new ObjectParameter("Fiksni", Fiksni) :
                new ObjectParameter("Fiksni", typeof(bool));
    
            var znamenkaMinParameter = ZnamenkaMin.HasValue ?
                new ObjectParameter("ZnamenkaMin", ZnamenkaMin) :
                new ObjectParameter("ZnamenkaMin", typeof(int));
    
            var znamenkaMaxParameter = ZnamenkaMax.HasValue ?
                new ObjectParameter("ZnamenkaMax", ZnamenkaMax) :
                new ObjectParameter("ZnamenkaMax", typeof(int));
    
            var kontrolaZajednoParameter = KontrolaZajedno.HasValue ?
                new ObjectParameter("KontrolaZajedno", KontrolaZajedno) :
                new ObjectParameter("KontrolaZajedno", typeof(bool));
    
            var pozicijaMinParameter = PozicijaMin.HasValue ?
                new ObjectParameter("PozicijaMin", PozicijaMin) :
                new ObjectParameter("PozicijaMin", typeof(int));
    
            var pozicijaMaxParameter = PozicijaMax.HasValue ?
                new ObjectParameter("PozicijaMax", PozicijaMax) :
                new ObjectParameter("PozicijaMax", typeof(int));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var imaKontrolaParameter = ImaKontrola.HasValue ?
                new ObjectParameter("ImaKontrola", ImaKontrola) :
                new ObjectParameter("ImaKontrola", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_INSERT", mergeOption, iDHUBModelPodatak2013AParameter, iDHUBModel2013AParameter, oznakaParameter, nazivParameter, fiksniParameter, znamenkaMinParameter, znamenkaMaxParameter, kontrolaZajednoParameter, pozicijaMinParameter, pozicijaMaxParameter, koristiParameter, imaKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_SELECT(int? IDHUBModelPodatak2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_SELECT", iDHUBModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_SELECT(int? IDHUBModelPodatak2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_SELECT", mergeOption, iDHUBModelPodatak2013AParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_UPDATE(int? IDHUBModelPodatak2013A, int? IDHUBModel2013A, string Oznaka, string Naziv, bool? Fiksni, int? ZnamenkaMin, int? ZnamenkaMax, bool? KontrolaZajedno, int? PozicijaMin, int? PozicijaMax, bool? Koristi, bool? ImaKontrola)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var fiksniParameter = Fiksni.HasValue ?
                new ObjectParameter("Fiksni", Fiksni) :
                new ObjectParameter("Fiksni", typeof(bool));
    
            var znamenkaMinParameter = ZnamenkaMin.HasValue ?
                new ObjectParameter("ZnamenkaMin", ZnamenkaMin) :
                new ObjectParameter("ZnamenkaMin", typeof(int));
    
            var znamenkaMaxParameter = ZnamenkaMax.HasValue ?
                new ObjectParameter("ZnamenkaMax", ZnamenkaMax) :
                new ObjectParameter("ZnamenkaMax", typeof(int));
    
            var kontrolaZajednoParameter = KontrolaZajedno.HasValue ?
                new ObjectParameter("KontrolaZajedno", KontrolaZajedno) :
                new ObjectParameter("KontrolaZajedno", typeof(bool));
    
            var pozicijaMinParameter = PozicijaMin.HasValue ?
                new ObjectParameter("PozicijaMin", PozicijaMin) :
                new ObjectParameter("PozicijaMin", typeof(int));
    
            var pozicijaMaxParameter = PozicijaMax.HasValue ?
                new ObjectParameter("PozicijaMax", PozicijaMax) :
                new ObjectParameter("PozicijaMax", typeof(int));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var imaKontrolaParameter = ImaKontrola.HasValue ?
                new ObjectParameter("ImaKontrola", ImaKontrola) :
                new ObjectParameter("ImaKontrola", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_UPDATE", iDHUBModelPodatak2013AParameter, iDHUBModel2013AParameter, oznakaParameter, nazivParameter, fiksniParameter, znamenkaMinParameter, znamenkaMaxParameter, kontrolaZajednoParameter, pozicijaMinParameter, pozicijaMaxParameter, koristiParameter, imaKontrolaParameter);
        }
    
        public virtual ObjectResult<HUBModelPodatak2013A> USP_HUBModelPodatak2013A_UPDATE(int? IDHUBModelPodatak2013A, int? IDHUBModel2013A, string Oznaka, string Naziv, bool? Fiksni, int? ZnamenkaMin, int? ZnamenkaMax, bool? KontrolaZajedno, int? PozicijaMin, int? PozicijaMax, bool? Koristi, bool? ImaKontrola, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBModelPodatak2013A).Assembly);
    
            var iDHUBModelPodatak2013AParameter = IDHUBModelPodatak2013A.HasValue ?
                new ObjectParameter("IDHUBModelPodatak2013A", IDHUBModelPodatak2013A) :
                new ObjectParameter("IDHUBModelPodatak2013A", typeof(int));
    
            var iDHUBModel2013AParameter = IDHUBModel2013A.HasValue ?
                new ObjectParameter("IDHUBModel2013A", IDHUBModel2013A) :
                new ObjectParameter("IDHUBModel2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var fiksniParameter = Fiksni.HasValue ?
                new ObjectParameter("Fiksni", Fiksni) :
                new ObjectParameter("Fiksni", typeof(bool));
    
            var znamenkaMinParameter = ZnamenkaMin.HasValue ?
                new ObjectParameter("ZnamenkaMin", ZnamenkaMin) :
                new ObjectParameter("ZnamenkaMin", typeof(int));
    
            var znamenkaMaxParameter = ZnamenkaMax.HasValue ?
                new ObjectParameter("ZnamenkaMax", ZnamenkaMax) :
                new ObjectParameter("ZnamenkaMax", typeof(int));
    
            var kontrolaZajednoParameter = KontrolaZajedno.HasValue ?
                new ObjectParameter("KontrolaZajedno", KontrolaZajedno) :
                new ObjectParameter("KontrolaZajedno", typeof(bool));
    
            var pozicijaMinParameter = PozicijaMin.HasValue ?
                new ObjectParameter("PozicijaMin", PozicijaMin) :
                new ObjectParameter("PozicijaMin", typeof(int));
    
            var pozicijaMaxParameter = PozicijaMax.HasValue ?
                new ObjectParameter("PozicijaMax", PozicijaMax) :
                new ObjectParameter("PozicijaMax", typeof(int));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            var imaKontrolaParameter = ImaKontrola.HasValue ?
                new ObjectParameter("ImaKontrola", ImaKontrola) :
                new ObjectParameter("ImaKontrola", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBModelPodatak2013A>("USP_HUBModelPodatak2013A_UPDATE", mergeOption, iDHUBModelPodatak2013AParameter, iDHUBModel2013AParameter, oznakaParameter, nazivParameter, fiksniParameter, znamenkaMinParameter, znamenkaMaxParameter, kontrolaZajednoParameter, pozicijaMinParameter, pozicijaMaxParameter, koristiParameter, imaKontrolaParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBNalogVrsta2013A_DELETE(int? IDHUBNalogVrsta2013A)
        {
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBNalogVrsta2013A_DELETE", iDHUBNalogVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_INSERT(int? IDHUBNalogVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_INSERT", iDHUBNalogVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_INSERT(int? IDHUBNalogVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_INSERT", mergeOption, iDHUBNalogVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_SELECT(int? IDHUBNalogVrsta2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_SELECT", iDHUBNalogVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_SELECT(int? IDHUBNalogVrsta2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_SELECT", mergeOption, iDHUBNalogVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_UPDATE(int? IDHUBNalogVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_UPDATE", iDHUBNalogVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNalogVrsta2013A> USP_HUBNalogVrsta2013A_UPDATE(int? IDHUBNalogVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNalogVrsta2013A).Assembly);
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNalogVrsta2013A>("USP_HUBNalogVrsta2013A_UPDATE", mergeOption, iDHUBNalogVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBNamjena2013A_DELETE(int? IDHUBNamjena2013A)
        {
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBNamjena2013A_DELETE", iDHUBNamjena2013AParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_INSERT(int? IDHUBNamjena2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Klasifikacija, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var klasifikacijaParameter = Klasifikacija != null ?
                new ObjectParameter("Klasifikacija", Klasifikacija) :
                new ObjectParameter("Klasifikacija", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_INSERT", iDHUBNamjena2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, klasifikacijaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_INSERT(int? IDHUBNamjena2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Klasifikacija, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var klasifikacijaParameter = Klasifikacija != null ?
                new ObjectParameter("Klasifikacija", Klasifikacija) :
                new ObjectParameter("Klasifikacija", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_INSERT", mergeOption, iDHUBNamjena2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, klasifikacijaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_SELECT(int? IDHUBNamjena2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_SELECT", iDHUBNamjena2013AParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_SELECT(int? IDHUBNamjena2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_SELECT", mergeOption, iDHUBNamjena2013AParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_UPDATE(int? IDHUBNamjena2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Klasifikacija, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var klasifikacijaParameter = Klasifikacija != null ?
                new ObjectParameter("Klasifikacija", Klasifikacija) :
                new ObjectParameter("Klasifikacija", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_UPDATE", iDHUBNamjena2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, klasifikacijaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBNamjena2013A> USP_HUBNamjena2013A_UPDATE(int? IDHUBNamjena2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Klasifikacija, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBNamjena2013A).Assembly);
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var klasifikacijaParameter = Klasifikacija != null ?
                new ObjectParameter("Klasifikacija", Klasifikacija) :
                new ObjectParameter("Klasifikacija", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBNamjena2013A>("USP_HUBNamjena2013A_UPDATE", mergeOption, iDHUBNamjena2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, klasifikacijaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBPrimateljVrsta2013A_DELETE(int? IDHUBPrimateljVrsta2013A)
        {
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBPrimateljVrsta2013A_DELETE", iDHUBPrimateljVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_INSERT(int? IDHUBPrimateljVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_INSERT", iDHUBPrimateljVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_INSERT(int? IDHUBPrimateljVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_INSERT", mergeOption, iDHUBPrimateljVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_SELECT(int? IDHUBPrimateljVrsta2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_SELECT", iDHUBPrimateljVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_SELECT(int? IDHUBPrimateljVrsta2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_SELECT", mergeOption, iDHUBPrimateljVrsta2013AParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_UPDATE(int? IDHUBPrimateljVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_UPDATE", iDHUBPrimateljVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBPrimateljVrsta2013A> USP_HUBPrimateljVrsta2013A_UPDATE(int? IDHUBPrimateljVrsta2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBPrimateljVrsta2013A).Assembly);
    
            var iDHUBPrimateljVrsta2013AParameter = IDHUBPrimateljVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBPrimateljVrsta2013A", IDHUBPrimateljVrsta2013A) :
                new ObjectParameter("IDHUBPrimateljVrsta2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBPrimateljVrsta2013A>("USP_HUBPrimateljVrsta2013A_UPDATE", mergeOption, iDHUBPrimateljVrsta2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBTroskoviOpcija2013A_DELETE(int? IDHUBTroskoviOpcija2013A)
        {
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBTroskoviOpcija2013A_DELETE", iDHUBTroskoviOpcija2013AParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_INSERT(int? IDHUBTroskoviOpcija2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_INSERT", iDHUBTroskoviOpcija2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_INSERT(int? IDHUBTroskoviOpcija2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_INSERT", mergeOption, iDHUBTroskoviOpcija2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_SELECT(int? IDHUBTroskoviOpcija2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_SELECT", iDHUBTroskoviOpcija2013AParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_SELECT(int? IDHUBTroskoviOpcija2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_SELECT", mergeOption, iDHUBTroskoviOpcija2013AParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_UPDATE(int? IDHUBTroskoviOpcija2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_UPDATE", iDHUBTroskoviOpcija2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<HUBTroskoviOpcija2013A> USP_HUBTroskoviOpcija2013A_UPDATE(int? IDHUBTroskoviOpcija2013A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, bool? Koristi, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBTroskoviOpcija2013A).Assembly);
    
            var iDHUBTroskoviOpcija2013AParameter = IDHUBTroskoviOpcija2013A.HasValue ?
                new ObjectParameter("IDHUBTroskoviOpcija2013A", IDHUBTroskoviOpcija2013A) :
                new ObjectParameter("IDHUBTroskoviOpcija2013A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var koristiParameter = Koristi.HasValue ?
                new ObjectParameter("Koristi", Koristi) :
                new ObjectParameter("Koristi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBTroskoviOpcija2013A>("USP_HUBTroskoviOpcija2013A_UPDATE", mergeOption, iDHUBTroskoviOpcija2013AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, koristiParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBVerzija_DELETE(int? IDHUBVerzija)
        {
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBVerzija_DELETE", iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_INSERT(int? IDHUBVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_INSERT", iDHUBVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_INSERT(int? IDHUBVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_INSERT", mergeOption, iDHUBVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_SELECT(int? IDHUBVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_SELECT", iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_SELECT(int? IDHUBVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_SELECT", mergeOption, iDHUBVerzijaParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_UPDATE(int? IDHUBVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_UPDATE", iDHUBVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<HUBVerzija> USP_HUBVerzija_UPDATE(int? IDHUBVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzija).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzija>("USP_HUBVerzija_UPDATE", mergeOption, iDHUBVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_HUBVerzijaTablica_DELETE(int? IDHUBVerzijaTablica)
        {
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_HUBVerzijaTablica_DELETE", iDHUBVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_INSERT(int? IDHUBVerzija, int? IDHUBVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_INSERT", iDHUBVerzijaParameter, iDHUBVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_INSERT(int? IDHUBVerzija, int? IDHUBVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_INSERT", mergeOption, iDHUBVerzijaParameter, iDHUBVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_SELECT(int? IDHUBVerzijaTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_SELECT", iDHUBVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_SELECT(int? IDHUBVerzijaTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_SELECT", mergeOption, iDHUBVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_UPDATE(int? IDHUBVerzija, int? IDHUBVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_UPDATE", iDHUBVerzijaParameter, iDHUBVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<HUBVerzijaTablica> USP_HUBVerzijaTablica_UPDATE(int? IDHUBVerzija, int? IDHUBVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(HUBVerzijaTablica).Assembly);
    
            var iDHUBVerzijaParameter = IDHUBVerzija.HasValue ?
                new ObjectParameter("IDHUBVerzija", IDHUBVerzija) :
                new ObjectParameter("IDHUBVerzija", typeof(int));
    
            var iDHUBVerzijaTablicaParameter = IDHUBVerzijaTablica.HasValue ?
                new ObjectParameter("IDHUBVerzijaTablica", IDHUBVerzijaTablica) :
                new ObjectParameter("IDHUBVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HUBVerzijaTablica>("USP_HUBVerzijaTablica_UPDATE", mergeOption, iDHUBVerzijaParameter, iDHUBVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_Izvod_DELETE(long? ID_Izvod)
        {
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Izvod_DELETE", iD_IzvodParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_SELECT(long? ID_Izvod)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_SELECT", iD_IzvodParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_SELECT(long? ID_Izvod, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_SELECT", mergeOption, iD_IzvodParameter);
        }
    
        public virtual ObjectResult<int?> USP_Izvod2012A_DELETE(long? ID_Izvod2012A)
        {
            var iD_Izvod2012AParameter = ID_Izvod2012A.HasValue ?
                new ObjectParameter("ID_Izvod2012A", ID_Izvod2012A) :
                new ObjectParameter("ID_Izvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Izvod2012A_DELETE", iD_Izvod2012AParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_INSERT(long? ID_Izvod, string BankaVBDI, string BankaNaziv, string BankaOIB, int? IzvadakVr, DateTime? DatumObrada, string BankaBIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MaticniBroj, string OIB, int? RedniBrojIzvadak, int? PodbrojIzvadak, DateTime? DatumIzvadak, int? RedniBrojGrupa, int? VrstaIzvadak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var bankaVBDIParameter = BankaVBDI != null ?
                new ObjectParameter("BankaVBDI", BankaVBDI) :
                new ObjectParameter("BankaVBDI", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaOIBParameter = BankaOIB != null ?
                new ObjectParameter("BankaOIB", BankaOIB) :
                new ObjectParameter("BankaOIB", typeof(string));
    
            var izvadakVrParameter = IzvadakVr.HasValue ?
                new ObjectParameter("IzvadakVr", IzvadakVr) :
                new ObjectParameter("IzvadakVr", typeof(int));
    
            var datumObradaParameter = DatumObrada.HasValue ?
                new ObjectParameter("DatumObrada", DatumObrada) :
                new ObjectParameter("DatumObrada", typeof(System.DateTime));
    
            var bankaBICParameter = BankaBIC != null ?
                new ObjectParameter("BankaBIC", BankaBIC) :
                new ObjectParameter("BankaBIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var maticniBrojParameter = MaticniBroj != null ?
                new ObjectParameter("MaticniBroj", MaticniBroj) :
                new ObjectParameter("MaticniBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var redniBrojIzvadakParameter = RedniBrojIzvadak.HasValue ?
                new ObjectParameter("RedniBrojIzvadak", RedniBrojIzvadak) :
                new ObjectParameter("RedniBrojIzvadak", typeof(int));
    
            var podbrojIzvadakParameter = PodbrojIzvadak.HasValue ?
                new ObjectParameter("PodbrojIzvadak", PodbrojIzvadak) :
                new ObjectParameter("PodbrojIzvadak", typeof(int));
    
            var datumIzvadakParameter = DatumIzvadak.HasValue ?
                new ObjectParameter("DatumIzvadak", DatumIzvadak) :
                new ObjectParameter("DatumIzvadak", typeof(System.DateTime));
    
            var redniBrojGrupaParameter = RedniBrojGrupa.HasValue ?
                new ObjectParameter("RedniBrojGrupa", RedniBrojGrupa) :
                new ObjectParameter("RedniBrojGrupa", typeof(int));
    
            var vrstaIzvadakParameter = VrstaIzvadak.HasValue ?
                new ObjectParameter("VrstaIzvadak", VrstaIzvadak) :
                new ObjectParameter("VrstaIzvadak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_INSERT", iD_IzvodParameter, bankaVBDIParameter, bankaNazivParameter, bankaOIBParameter, izvadakVrParameter, datumObradaParameter, bankaBICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, maticniBrojParameter, oIBParameter, redniBrojIzvadakParameter, podbrojIzvadakParameter, datumIzvadakParameter, redniBrojGrupaParameter, vrstaIzvadakParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_INSERT(long? ID_Izvod, string BankaVBDI, string BankaNaziv, string BankaOIB, int? IzvadakVr, DateTime? DatumObrada, string BankaBIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MaticniBroj, string OIB, int? RedniBrojIzvadak, int? PodbrojIzvadak, DateTime? DatumIzvadak, int? RedniBrojGrupa, int? VrstaIzvadak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var bankaVBDIParameter = BankaVBDI != null ?
                new ObjectParameter("BankaVBDI", BankaVBDI) :
                new ObjectParameter("BankaVBDI", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaOIBParameter = BankaOIB != null ?
                new ObjectParameter("BankaOIB", BankaOIB) :
                new ObjectParameter("BankaOIB", typeof(string));
    
            var izvadakVrParameter = IzvadakVr.HasValue ?
                new ObjectParameter("IzvadakVr", IzvadakVr) :
                new ObjectParameter("IzvadakVr", typeof(int));
    
            var datumObradaParameter = DatumObrada.HasValue ?
                new ObjectParameter("DatumObrada", DatumObrada) :
                new ObjectParameter("DatumObrada", typeof(System.DateTime));
    
            var bankaBICParameter = BankaBIC != null ?
                new ObjectParameter("BankaBIC", BankaBIC) :
                new ObjectParameter("BankaBIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var maticniBrojParameter = MaticniBroj != null ?
                new ObjectParameter("MaticniBroj", MaticniBroj) :
                new ObjectParameter("MaticniBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var redniBrojIzvadakParameter = RedniBrojIzvadak.HasValue ?
                new ObjectParameter("RedniBrojIzvadak", RedniBrojIzvadak) :
                new ObjectParameter("RedniBrojIzvadak", typeof(int));
    
            var podbrojIzvadakParameter = PodbrojIzvadak.HasValue ?
                new ObjectParameter("PodbrojIzvadak", PodbrojIzvadak) :
                new ObjectParameter("PodbrojIzvadak", typeof(int));
    
            var datumIzvadakParameter = DatumIzvadak.HasValue ?
                new ObjectParameter("DatumIzvadak", DatumIzvadak) :
                new ObjectParameter("DatumIzvadak", typeof(System.DateTime));
    
            var redniBrojGrupaParameter = RedniBrojGrupa.HasValue ?
                new ObjectParameter("RedniBrojGrupa", RedniBrojGrupa) :
                new ObjectParameter("RedniBrojGrupa", typeof(int));
    
            var vrstaIzvadakParameter = VrstaIzvadak.HasValue ?
                new ObjectParameter("VrstaIzvadak", VrstaIzvadak) :
                new ObjectParameter("VrstaIzvadak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_INSERT", mergeOption, iD_IzvodParameter, bankaVBDIParameter, bankaNazivParameter, bankaOIBParameter, izvadakVrParameter, datumObradaParameter, bankaBICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, maticniBrojParameter, oIBParameter, redniBrojIzvadakParameter, podbrojIzvadakParameter, datumIzvadakParameter, redniBrojGrupaParameter, vrstaIzvadakParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_SELECT(long? ID_Izvod2012A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_Izvod2012AParameter = ID_Izvod2012A.HasValue ?
                new ObjectParameter("ID_Izvod2012A", ID_Izvod2012A) :
                new ObjectParameter("ID_Izvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_SELECT", iD_Izvod2012AParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_SELECT(long? ID_Izvod2012A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_Izvod2012AParameter = ID_Izvod2012A.HasValue ?
                new ObjectParameter("ID_Izvod2012A", ID_Izvod2012A) :
                new ObjectParameter("ID_Izvod2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_SELECT", mergeOption, iD_Izvod2012AParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_UPDATE(long? ID_Izvod2012A, long? ID_Izvod, string BankaVBDI, string BankaNaziv, string BankaOIB, int? IzvadakVr, DateTime? DatumObrada, string BankaBIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MaticniBroj, string OIB, int? RedniBrojIzvadak, int? PodbrojIzvadak, DateTime? DatumIzvadak, int? RedniBrojGrupa, int? VrstaIzvadak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_Izvod2012AParameter = ID_Izvod2012A.HasValue ?
                new ObjectParameter("ID_Izvod2012A", ID_Izvod2012A) :
                new ObjectParameter("ID_Izvod2012A", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var bankaVBDIParameter = BankaVBDI != null ?
                new ObjectParameter("BankaVBDI", BankaVBDI) :
                new ObjectParameter("BankaVBDI", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaOIBParameter = BankaOIB != null ?
                new ObjectParameter("BankaOIB", BankaOIB) :
                new ObjectParameter("BankaOIB", typeof(string));
    
            var izvadakVrParameter = IzvadakVr.HasValue ?
                new ObjectParameter("IzvadakVr", IzvadakVr) :
                new ObjectParameter("IzvadakVr", typeof(int));
    
            var datumObradaParameter = DatumObrada.HasValue ?
                new ObjectParameter("DatumObrada", DatumObrada) :
                new ObjectParameter("DatumObrada", typeof(System.DateTime));
    
            var bankaBICParameter = BankaBIC != null ?
                new ObjectParameter("BankaBIC", BankaBIC) :
                new ObjectParameter("BankaBIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var maticniBrojParameter = MaticniBroj != null ?
                new ObjectParameter("MaticniBroj", MaticniBroj) :
                new ObjectParameter("MaticniBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var redniBrojIzvadakParameter = RedniBrojIzvadak.HasValue ?
                new ObjectParameter("RedniBrojIzvadak", RedniBrojIzvadak) :
                new ObjectParameter("RedniBrojIzvadak", typeof(int));
    
            var podbrojIzvadakParameter = PodbrojIzvadak.HasValue ?
                new ObjectParameter("PodbrojIzvadak", PodbrojIzvadak) :
                new ObjectParameter("PodbrojIzvadak", typeof(int));
    
            var datumIzvadakParameter = DatumIzvadak.HasValue ?
                new ObjectParameter("DatumIzvadak", DatumIzvadak) :
                new ObjectParameter("DatumIzvadak", typeof(System.DateTime));
    
            var redniBrojGrupaParameter = RedniBrojGrupa.HasValue ?
                new ObjectParameter("RedniBrojGrupa", RedniBrojGrupa) :
                new ObjectParameter("RedniBrojGrupa", typeof(int));
    
            var vrstaIzvadakParameter = VrstaIzvadak.HasValue ?
                new ObjectParameter("VrstaIzvadak", VrstaIzvadak) :
                new ObjectParameter("VrstaIzvadak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_UPDATE", iD_Izvod2012AParameter, iD_IzvodParameter, bankaVBDIParameter, bankaNazivParameter, bankaOIBParameter, izvadakVrParameter, datumObradaParameter, bankaBICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, maticniBrojParameter, oIBParameter, redniBrojIzvadakParameter, podbrojIzvadakParameter, datumIzvadakParameter, redniBrojGrupaParameter, vrstaIzvadakParameter);
        }
    
        public virtual ObjectResult<Izvod2012A> USP_Izvod2012A_UPDATE(long? ID_Izvod2012A, long? ID_Izvod, string BankaVBDI, string BankaNaziv, string BankaOIB, int? IzvadakVr, DateTime? DatumObrada, string BankaBIC, string Racun, string IDValuta, string Naziv, string Sjediste, string MaticniBroj, string OIB, int? RedniBrojIzvadak, int? PodbrojIzvadak, DateTime? DatumIzvadak, int? RedniBrojGrupa, int? VrstaIzvadak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012A).Assembly);
    
            var iD_Izvod2012AParameter = ID_Izvod2012A.HasValue ?
                new ObjectParameter("ID_Izvod2012A", ID_Izvod2012A) :
                new ObjectParameter("ID_Izvod2012A", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var bankaVBDIParameter = BankaVBDI != null ?
                new ObjectParameter("BankaVBDI", BankaVBDI) :
                new ObjectParameter("BankaVBDI", typeof(string));
    
            var bankaNazivParameter = BankaNaziv != null ?
                new ObjectParameter("BankaNaziv", BankaNaziv) :
                new ObjectParameter("BankaNaziv", typeof(string));
    
            var bankaOIBParameter = BankaOIB != null ?
                new ObjectParameter("BankaOIB", BankaOIB) :
                new ObjectParameter("BankaOIB", typeof(string));
    
            var izvadakVrParameter = IzvadakVr.HasValue ?
                new ObjectParameter("IzvadakVr", IzvadakVr) :
                new ObjectParameter("IzvadakVr", typeof(int));
    
            var datumObradaParameter = DatumObrada.HasValue ?
                new ObjectParameter("DatumObrada", DatumObrada) :
                new ObjectParameter("DatumObrada", typeof(System.DateTime));
    
            var bankaBICParameter = BankaBIC != null ?
                new ObjectParameter("BankaBIC", BankaBIC) :
                new ObjectParameter("BankaBIC", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var maticniBrojParameter = MaticniBroj != null ?
                new ObjectParameter("MaticniBroj", MaticniBroj) :
                new ObjectParameter("MaticniBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var redniBrojIzvadakParameter = RedniBrojIzvadak.HasValue ?
                new ObjectParameter("RedniBrojIzvadak", RedniBrojIzvadak) :
                new ObjectParameter("RedniBrojIzvadak", typeof(int));
    
            var podbrojIzvadakParameter = PodbrojIzvadak.HasValue ?
                new ObjectParameter("PodbrojIzvadak", PodbrojIzvadak) :
                new ObjectParameter("PodbrojIzvadak", typeof(int));
    
            var datumIzvadakParameter = DatumIzvadak.HasValue ?
                new ObjectParameter("DatumIzvadak", DatumIzvadak) :
                new ObjectParameter("DatumIzvadak", typeof(System.DateTime));
    
            var redniBrojGrupaParameter = RedniBrojGrupa.HasValue ?
                new ObjectParameter("RedniBrojGrupa", RedniBrojGrupa) :
                new ObjectParameter("RedniBrojGrupa", typeof(int));
    
            var vrstaIzvadakParameter = VrstaIzvadak.HasValue ?
                new ObjectParameter("VrstaIzvadak", VrstaIzvadak) :
                new ObjectParameter("VrstaIzvadak", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012A>("USP_Izvod2012A_UPDATE", mergeOption, iD_Izvod2012AParameter, iD_IzvodParameter, bankaVBDIParameter, bankaNazivParameter, bankaOIBParameter, izvadakVrParameter, datumObradaParameter, bankaBICParameter, racunParameter, iDValutaParameter, nazivParameter, sjedisteParameter, maticniBrojParameter, oIBParameter, redniBrojIzvadakParameter, podbrojIzvadakParameter, datumIzvadakParameter, redniBrojGrupaParameter, vrstaIzvadakParameter);
        }
    
        public virtual ObjectResult<int?> USP_Izvod2012ASt_DELETE(long? ID_Izvod2012ASt)
        {
            var iD_Izvod2012AStParameter = ID_Izvod2012ASt.HasValue ?
                new ObjectParameter("ID_Izvod2012ASt", ID_Izvod2012ASt) :
                new ObjectParameter("ID_Izvod2012ASt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Izvod2012ASt_DELETE", iD_Izvod2012AStParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_INSERT(long? ID_IzvodSt, int? IDIzvod2012ATransakcijaVr, string Racun, string Naziv, string Adresa, string Sjediste, DateTime? DatumValuta, DateTime? DatumIzvrsenje, string IDValuta, decimal? Tecaj, decimal? IznosValuta, decimal? Iznos, string PlatiteljPozivNaBroj, string PrimateljPozivNaBroj, int? IDHUBNamjena2013A, string OpisPlacanje, string IdentifikatorTransakcijeFINA, string IdentifikatorTransakcije)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var identifikatorTransakcijeFINAParameter = IdentifikatorTransakcijeFINA != null ?
                new ObjectParameter("IdentifikatorTransakcijeFINA", IdentifikatorTransakcijeFINA) :
                new ObjectParameter("IdentifikatorTransakcijeFINA", typeof(string));
    
            var identifikatorTransakcijeParameter = IdentifikatorTransakcije != null ?
                new ObjectParameter("IdentifikatorTransakcije", IdentifikatorTransakcije) :
                new ObjectParameter("IdentifikatorTransakcije", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_INSERT", iD_IzvodStParameter, iDIzvod2012ATransakcijaVrParameter, racunParameter, nazivParameter, adresaParameter, sjedisteParameter, datumValutaParameter, datumIzvrsenjeParameter, iDValutaParameter, tecajParameter, iznosValutaParameter, iznosParameter, platiteljPozivNaBrojParameter, primateljPozivNaBrojParameter, iDHUBNamjena2013AParameter, opisPlacanjeParameter, identifikatorTransakcijeFINAParameter, identifikatorTransakcijeParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_INSERT(long? ID_IzvodSt, int? IDIzvod2012ATransakcijaVr, string Racun, string Naziv, string Adresa, string Sjediste, DateTime? DatumValuta, DateTime? DatumIzvrsenje, string IDValuta, decimal? Tecaj, decimal? IznosValuta, decimal? Iznos, string PlatiteljPozivNaBroj, string PrimateljPozivNaBroj, int? IDHUBNamjena2013A, string OpisPlacanje, string IdentifikatorTransakcijeFINA, string IdentifikatorTransakcije, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var identifikatorTransakcijeFINAParameter = IdentifikatorTransakcijeFINA != null ?
                new ObjectParameter("IdentifikatorTransakcijeFINA", IdentifikatorTransakcijeFINA) :
                new ObjectParameter("IdentifikatorTransakcijeFINA", typeof(string));
    
            var identifikatorTransakcijeParameter = IdentifikatorTransakcije != null ?
                new ObjectParameter("IdentifikatorTransakcije", IdentifikatorTransakcije) :
                new ObjectParameter("IdentifikatorTransakcije", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_INSERT", mergeOption, iD_IzvodStParameter, iDIzvod2012ATransakcijaVrParameter, racunParameter, nazivParameter, adresaParameter, sjedisteParameter, datumValutaParameter, datumIzvrsenjeParameter, iDValutaParameter, tecajParameter, iznosValutaParameter, iznosParameter, platiteljPozivNaBrojParameter, primateljPozivNaBrojParameter, iDHUBNamjena2013AParameter, opisPlacanjeParameter, identifikatorTransakcijeFINAParameter, identifikatorTransakcijeParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_SELECT(long? ID_Izvod2012ASt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_Izvod2012AStParameter = ID_Izvod2012ASt.HasValue ?
                new ObjectParameter("ID_Izvod2012ASt", ID_Izvod2012ASt) :
                new ObjectParameter("ID_Izvod2012ASt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_SELECT", iD_Izvod2012AStParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_SELECT(long? ID_Izvod2012ASt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_Izvod2012AStParameter = ID_Izvod2012ASt.HasValue ?
                new ObjectParameter("ID_Izvod2012ASt", ID_Izvod2012ASt) :
                new ObjectParameter("ID_Izvod2012ASt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_SELECT", mergeOption, iD_Izvod2012AStParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_UPDATE(long? ID_Izvod2012ASt, long? ID_IzvodSt, int? IDIzvod2012ATransakcijaVr, string Racun, string Naziv, string Adresa, string Sjediste, DateTime? DatumValuta, DateTime? DatumIzvrsenje, string IDValuta, decimal? Tecaj, decimal? IznosValuta, decimal? Iznos, string PlatiteljPozivNaBroj, string PrimateljPozivNaBroj, int? IDHUBNamjena2013A, string OpisPlacanje, string IdentifikatorTransakcijeFINA, string IdentifikatorTransakcije)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_Izvod2012AStParameter = ID_Izvod2012ASt.HasValue ?
                new ObjectParameter("ID_Izvod2012ASt", ID_Izvod2012ASt) :
                new ObjectParameter("ID_Izvod2012ASt", typeof(long));
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var identifikatorTransakcijeFINAParameter = IdentifikatorTransakcijeFINA != null ?
                new ObjectParameter("IdentifikatorTransakcijeFINA", IdentifikatorTransakcijeFINA) :
                new ObjectParameter("IdentifikatorTransakcijeFINA", typeof(string));
    
            var identifikatorTransakcijeParameter = IdentifikatorTransakcije != null ?
                new ObjectParameter("IdentifikatorTransakcije", IdentifikatorTransakcije) :
                new ObjectParameter("IdentifikatorTransakcije", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_UPDATE", iD_Izvod2012AStParameter, iD_IzvodStParameter, iDIzvod2012ATransakcijaVrParameter, racunParameter, nazivParameter, adresaParameter, sjedisteParameter, datumValutaParameter, datumIzvrsenjeParameter, iDValutaParameter, tecajParameter, iznosValutaParameter, iznosParameter, platiteljPozivNaBrojParameter, primateljPozivNaBrojParameter, iDHUBNamjena2013AParameter, opisPlacanjeParameter, identifikatorTransakcijeFINAParameter, identifikatorTransakcijeParameter);
        }
    
        public virtual ObjectResult<Izvod2012ASt> USP_Izvod2012ASt_UPDATE(long? ID_Izvod2012ASt, long? ID_IzvodSt, int? IDIzvod2012ATransakcijaVr, string Racun, string Naziv, string Adresa, string Sjediste, DateTime? DatumValuta, DateTime? DatumIzvrsenje, string IDValuta, decimal? Tecaj, decimal? IznosValuta, decimal? Iznos, string PlatiteljPozivNaBroj, string PrimateljPozivNaBroj, int? IDHUBNamjena2013A, string OpisPlacanje, string IdentifikatorTransakcijeFINA, string IdentifikatorTransakcije, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ASt).Assembly);
    
            var iD_Izvod2012AStParameter = ID_Izvod2012ASt.HasValue ?
                new ObjectParameter("ID_Izvod2012ASt", ID_Izvod2012ASt) :
                new ObjectParameter("ID_Izvod2012ASt", typeof(long));
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var sjedisteParameter = Sjediste != null ?
                new ObjectParameter("Sjediste", Sjediste) :
                new ObjectParameter("Sjediste", typeof(string));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datumIzvrsenjeParameter = DatumIzvrsenje.HasValue ?
                new ObjectParameter("DatumIzvrsenje", DatumIzvrsenje) :
                new ObjectParameter("DatumIzvrsenje", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var platiteljPozivNaBrojParameter = PlatiteljPozivNaBroj != null ?
                new ObjectParameter("PlatiteljPozivNaBroj", PlatiteljPozivNaBroj) :
                new ObjectParameter("PlatiteljPozivNaBroj", typeof(string));
    
            var primateljPozivNaBrojParameter = PrimateljPozivNaBroj != null ?
                new ObjectParameter("PrimateljPozivNaBroj", PrimateljPozivNaBroj) :
                new ObjectParameter("PrimateljPozivNaBroj", typeof(string));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var opisPlacanjeParameter = OpisPlacanje != null ?
                new ObjectParameter("OpisPlacanje", OpisPlacanje) :
                new ObjectParameter("OpisPlacanje", typeof(string));
    
            var identifikatorTransakcijeFINAParameter = IdentifikatorTransakcijeFINA != null ?
                new ObjectParameter("IdentifikatorTransakcijeFINA", IdentifikatorTransakcijeFINA) :
                new ObjectParameter("IdentifikatorTransakcijeFINA", typeof(string));
    
            var identifikatorTransakcijeParameter = IdentifikatorTransakcije != null ?
                new ObjectParameter("IdentifikatorTransakcije", IdentifikatorTransakcije) :
                new ObjectParameter("IdentifikatorTransakcije", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ASt>("USP_Izvod2012ASt_UPDATE", mergeOption, iD_Izvod2012AStParameter, iD_IzvodStParameter, iDIzvod2012ATransakcijaVrParameter, racunParameter, nazivParameter, adresaParameter, sjedisteParameter, datumValutaParameter, datumIzvrsenjeParameter, iDValutaParameter, tecajParameter, iznosValutaParameter, iznosParameter, platiteljPozivNaBrojParameter, primateljPozivNaBrojParameter, iDHUBNamjena2013AParameter, opisPlacanjeParameter, identifikatorTransakcijeFINAParameter, identifikatorTransakcijeParameter);
        }
    
        public virtual ObjectResult<int?> USP_Izvod2012ATransakcijaVr_DELETE(int? IDIzvod2012ATransakcijaVr)
        {
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Izvod2012ATransakcijaVr_DELETE", iDIzvod2012ATransakcijaVrParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_INSERT(int? IDIzvod2012ATransakcijaVr, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_INSERT", iDIzvod2012ATransakcijaVrParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_INSERT(int? IDIzvod2012ATransakcijaVr, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_INSERT", mergeOption, iDIzvod2012ATransakcijaVrParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_SELECT(int? IDIzvod2012ATransakcijaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_SELECT", iDIzvod2012ATransakcijaVrParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_SELECT(int? IDIzvod2012ATransakcijaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_SELECT", mergeOption, iDIzvod2012ATransakcijaVrParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_UPDATE(int? IDIzvod2012ATransakcijaVr, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_UPDATE", iDIzvod2012ATransakcijaVrParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Izvod2012ATransakcijaVr> USP_Izvod2012ATransakcijaVr_UPDATE(int? IDIzvod2012ATransakcijaVr, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod2012ATransakcijaVr).Assembly);
    
            var iDIzvod2012ATransakcijaVrParameter = IDIzvod2012ATransakcijaVr.HasValue ?
                new ObjectParameter("IDIzvod2012ATransakcijaVr", IDIzvod2012ATransakcijaVr) :
                new ObjectParameter("IDIzvod2012ATransakcijaVr", typeof(int));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod2012ATransakcijaVr>("USP_Izvod2012ATransakcijaVr_UPDATE", mergeOption, iDIzvod2012ATransakcijaVrParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodPosiljatelj_DELETE(long? ID_IzvodPosiljatelj)
        {
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodPosiljatelj_DELETE", iD_IzvodPosiljateljParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_INSERT(long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_INSERT", iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_INSERT(long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_INSERT", mergeOption, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_SELECT(long? ID_IzvodPosiljatelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_SELECT", iD_IzvodPosiljateljParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_SELECT(long? ID_IzvodPosiljatelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_SELECT", mergeOption, iD_IzvodPosiljateljParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_UPDATE(long? ID_IzvodPosiljatelj, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_UPDATE", iD_IzvodPosiljateljParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodPosiljatelj> USP_IzvodPosiljatelj_UPDATE(long? ID_IzvodPosiljatelj, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodPosiljatelj).Assembly);
    
            var iD_IzvodPosiljateljParameter = ID_IzvodPosiljatelj.HasValue ?
                new ObjectParameter("ID_IzvodPosiljatelj", ID_IzvodPosiljatelj) :
                new ObjectParameter("ID_IzvodPosiljatelj", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodPosiljatelj>("USP_IzvodPosiljatelj_UPDATE", mergeOption, iD_IzvodPosiljateljParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodSt_DELETE(long? ID_IzvodSt)
        {
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodSt_DELETE", iD_IzvodStParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_INSERT(long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_INSERT", iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_INSERT(long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_INSERT", mergeOption, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_SELECT(long? ID_IzvodSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_SELECT", iD_IzvodStParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_SELECT(long? ID_IzvodSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_SELECT", mergeOption, iD_IzvodStParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_UPDATE(long? ID_IzvodSt, long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_UPDATE", iD_IzvodStParameter, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<IzvodSt> USP_IzvodSt_UPDATE(long? ID_IzvodSt, long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodSt).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodSt>("USP_IzvodSt_UPDATE", mergeOption, iD_IzvodStParameter, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodTemeljnica_DELETE(long? ID_IzvodTemeljnica)
        {
            var iD_IzvodTemeljnicaParameter = ID_IzvodTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodTemeljnica", ID_IzvodTemeljnica) :
                new ObjectParameter("ID_IzvodTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodTemeljnica_DELETE", iD_IzvodTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_INSERT(long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, string TemeljnicaStatus, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var temeljnicaStatusParameter = TemeljnicaStatus != null ?
                new ObjectParameter("TemeljnicaStatus", TemeljnicaStatus) :
                new ObjectParameter("TemeljnicaStatus", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_INSERT", iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, temeljnicaStatusParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_INSERT(long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, string TemeljnicaStatus, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var temeljnicaStatusParameter = TemeljnicaStatus != null ?
                new ObjectParameter("TemeljnicaStatus", TemeljnicaStatus) :
                new ObjectParameter("TemeljnicaStatus", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_INSERT", mergeOption, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, temeljnicaStatusParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_SELECT(long? ID_IzvodTemeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodTemeljnicaParameter = ID_IzvodTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodTemeljnica", ID_IzvodTemeljnica) :
                new ObjectParameter("ID_IzvodTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_SELECT", iD_IzvodTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_SELECT(long? ID_IzvodTemeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodTemeljnicaParameter = ID_IzvodTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodTemeljnica", ID_IzvodTemeljnica) :
                new ObjectParameter("ID_IzvodTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_SELECT", mergeOption, iD_IzvodTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_UPDATE(long? ID_IzvodTemeljnica, long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, string TemeljnicaStatus, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodTemeljnicaParameter = ID_IzvodTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodTemeljnica", ID_IzvodTemeljnica) :
                new ObjectParameter("ID_IzvodTemeljnica", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var temeljnicaStatusParameter = TemeljnicaStatus != null ?
                new ObjectParameter("TemeljnicaStatus", TemeljnicaStatus) :
                new ObjectParameter("TemeljnicaStatus", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_UPDATE", iD_IzvodTemeljnicaParameter, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, temeljnicaStatusParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodTemeljnica> USP_IzvodTemeljnica_UPDATE(long? ID_IzvodTemeljnica, long? ID_Izvod, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, string TemeljnicaStatus, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodTemeljnica).Assembly);
    
            var iD_IzvodTemeljnicaParameter = ID_IzvodTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodTemeljnica", ID_IzvodTemeljnica) :
                new ObjectParameter("ID_IzvodTemeljnica", typeof(long));
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var temeljnicaStatusParameter = TemeljnicaStatus != null ?
                new ObjectParameter("TemeljnicaStatus", TemeljnicaStatus) :
                new ObjectParameter("TemeljnicaStatus", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodTemeljnica>("USP_IzvodTemeljnica_UPDATE", mergeOption, iD_IzvodTemeljnicaParameter, iD_IzvodParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, temeljnicaStatusParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodVerzija_DELETE(int? IDIzvodVerzija)
        {
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodVerzija_DELETE", iDIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_INSERT(int? IDIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_INSERT", iDIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_INSERT(int? IDIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_INSERT", mergeOption, iDIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_SELECT(int? IDIzvodVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_SELECT", iDIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_SELECT(int? IDIzvodVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_SELECT", mergeOption, iDIzvodVerzijaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_UPDATE(int? IDIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_UPDATE", iDIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<IzvodVerzija> USP_IzvodVerzija_UPDATE(int? IDIzvodVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzija).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzija>("USP_IzvodVerzija_UPDATE", mergeOption, iDIzvodVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodVerzijaTablica_DELETE(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica)
        {
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodVerzijaTablica_DELETE", iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_INSERT(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_INSERT", iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_INSERT(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_INSERT", mergeOption, iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_SELECT(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_SELECT", iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_SELECT(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_SELECT", mergeOption, iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_UPDATE(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_UPDATE", iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<IzvodVerzijaTablica> USP_IzvodVerzijaTablica_UPDATE(int? IDIzvodVerzija, int? IDIzvodVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodVerzijaTablica).Assembly);
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iDIzvodVerzijaTablicaParameter = IDIzvodVerzijaTablica.HasValue ?
                new ObjectParameter("IDIzvodVerzijaTablica", IDIzvodVerzijaTablica) :
                new ObjectParameter("IDIzvodVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodVerzijaTablica>("USP_IzvodVerzijaTablica_UPDATE", mergeOption, iDIzvodVerzijaParameter, iDIzvodVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_Jezik_DELETE(long? ID_Jezik)
        {
            var iD_JezikParameter = ID_Jezik.HasValue ?
                new ObjectParameter("ID_Jezik", ID_Jezik) :
                new ObjectParameter("ID_Jezik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Jezik_DELETE", iD_JezikParameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_INSERT(string Oznaka, string Naziv, string NazivEn, string Oznaka2T, string Oznaka2B, string Oznaka3)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var oznaka2TParameter = Oznaka2T != null ?
                new ObjectParameter("Oznaka2T", Oznaka2T) :
                new ObjectParameter("Oznaka2T", typeof(string));
    
            var oznaka2BParameter = Oznaka2B != null ?
                new ObjectParameter("Oznaka2B", Oznaka2B) :
                new ObjectParameter("Oznaka2B", typeof(string));
    
            var oznaka3Parameter = Oznaka3 != null ?
                new ObjectParameter("Oznaka3", Oznaka3) :
                new ObjectParameter("Oznaka3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_INSERT", oznakaParameter, nazivParameter, nazivEnParameter, oznaka2TParameter, oznaka2BParameter, oznaka3Parameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_INSERT(string Oznaka, string Naziv, string NazivEn, string Oznaka2T, string Oznaka2B, string Oznaka3, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var oznaka2TParameter = Oznaka2T != null ?
                new ObjectParameter("Oznaka2T", Oznaka2T) :
                new ObjectParameter("Oznaka2T", typeof(string));
    
            var oznaka2BParameter = Oznaka2B != null ?
                new ObjectParameter("Oznaka2B", Oznaka2B) :
                new ObjectParameter("Oznaka2B", typeof(string));
    
            var oznaka3Parameter = Oznaka3 != null ?
                new ObjectParameter("Oznaka3", Oznaka3) :
                new ObjectParameter("Oznaka3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivEnParameter, oznaka2TParameter, oznaka2BParameter, oznaka3Parameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_SELECT(long? ID_Jezik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var iD_JezikParameter = ID_Jezik.HasValue ?
                new ObjectParameter("ID_Jezik", ID_Jezik) :
                new ObjectParameter("ID_Jezik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_SELECT", iD_JezikParameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_SELECT(long? ID_Jezik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var iD_JezikParameter = ID_Jezik.HasValue ?
                new ObjectParameter("ID_Jezik", ID_Jezik) :
                new ObjectParameter("ID_Jezik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_SELECT", mergeOption, iD_JezikParameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_UPDATE(long? ID_Jezik, string Oznaka, string Naziv, string NazivEn, string Oznaka2T, string Oznaka2B, string Oznaka3)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var iD_JezikParameter = ID_Jezik.HasValue ?
                new ObjectParameter("ID_Jezik", ID_Jezik) :
                new ObjectParameter("ID_Jezik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var oznaka2TParameter = Oznaka2T != null ?
                new ObjectParameter("Oznaka2T", Oznaka2T) :
                new ObjectParameter("Oznaka2T", typeof(string));
    
            var oznaka2BParameter = Oznaka2B != null ?
                new ObjectParameter("Oznaka2B", Oznaka2B) :
                new ObjectParameter("Oznaka2B", typeof(string));
    
            var oznaka3Parameter = Oznaka3 != null ?
                new ObjectParameter("Oznaka3", Oznaka3) :
                new ObjectParameter("Oznaka3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_UPDATE", iD_JezikParameter, oznakaParameter, nazivParameter, nazivEnParameter, oznaka2TParameter, oznaka2BParameter, oznaka3Parameter);
        }
    
        public virtual ObjectResult<Jezik> USP_Jezik_UPDATE(long? ID_Jezik, string Oznaka, string Naziv, string NazivEn, string Oznaka2T, string Oznaka2B, string Oznaka3, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Jezik).Assembly);
    
            var iD_JezikParameter = ID_Jezik.HasValue ?
                new ObjectParameter("ID_Jezik", ID_Jezik) :
                new ObjectParameter("ID_Jezik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivEnParameter = NazivEn != null ?
                new ObjectParameter("NazivEn", NazivEn) :
                new ObjectParameter("NazivEn", typeof(string));
    
            var oznaka2TParameter = Oznaka2T != null ?
                new ObjectParameter("Oznaka2T", Oznaka2T) :
                new ObjectParameter("Oznaka2T", typeof(string));
    
            var oznaka2BParameter = Oznaka2B != null ?
                new ObjectParameter("Oznaka2B", Oznaka2B) :
                new ObjectParameter("Oznaka2B", typeof(string));
    
            var oznaka3Parameter = Oznaka3 != null ?
                new ObjectParameter("Oznaka3", Oznaka3) :
                new ObjectParameter("Oznaka3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jezik>("USP_Jezik_UPDATE", mergeOption, iD_JezikParameter, oznakaParameter, nazivParameter, nazivEnParameter, oznaka2TParameter, oznaka2BParameter, oznaka3Parameter);
        }
    
        public virtual ObjectResult<int?> USP_JezikGr_DELETE(long? ID_JezikGr)
        {
            var iD_JezikGrParameter = ID_JezikGr.HasValue ?
                new ObjectParameter("ID_JezikGr", ID_JezikGr) :
                new ObjectParameter("ID_JezikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_JezikGr_DELETE", iD_JezikGrParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_SELECT(long? ID_JezikGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var iD_JezikGrParameter = ID_JezikGr.HasValue ?
                new ObjectParameter("ID_JezikGr", ID_JezikGr) :
                new ObjectParameter("ID_JezikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_SELECT", iD_JezikGrParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_SELECT(long? ID_JezikGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var iD_JezikGrParameter = ID_JezikGr.HasValue ?
                new ObjectParameter("ID_JezikGr", ID_JezikGr) :
                new ObjectParameter("ID_JezikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_SELECT", mergeOption, iD_JezikGrParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_UPDATE(long? ID_JezikGr, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var iD_JezikGrParameter = ID_JezikGr.HasValue ?
                new ObjectParameter("ID_JezikGr", ID_JezikGr) :
                new ObjectParameter("ID_JezikGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_UPDATE", iD_JezikGrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<JezikGr> USP_JezikGr_UPDATE(long? ID_JezikGr, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(JezikGr).Assembly);
    
            var iD_JezikGrParameter = ID_JezikGr.HasValue ?
                new ObjectParameter("ID_JezikGr", ID_JezikGr) :
                new ObjectParameter("ID_JezikGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JezikGr>("USP_JezikGr_UPDATE", mergeOption, iD_JezikGrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_Kalendar_DELETE(int? IDDatum)
        {
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Kalendar_DELETE", iDDatumParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_INSERT(int? IDDatum, int? RBR, DateTime? Datum, int? Godina, int? Mjesec, int? Dan, int? Tromjesecje, int? TjedanUGodini, int? DanUGodini, int? DanUTjednu)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            var rBRParameter = RBR.HasValue ?
                new ObjectParameter("RBR", RBR) :
                new ObjectParameter("RBR", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var danParameter = Dan.HasValue ?
                new ObjectParameter("Dan", Dan) :
                new ObjectParameter("Dan", typeof(int));
    
            var tromjesecjeParameter = Tromjesecje.HasValue ?
                new ObjectParameter("Tromjesecje", Tromjesecje) :
                new ObjectParameter("Tromjesecje", typeof(int));
    
            var tjedanUGodiniParameter = TjedanUGodini.HasValue ?
                new ObjectParameter("TjedanUGodini", TjedanUGodini) :
                new ObjectParameter("TjedanUGodini", typeof(int));
    
            var danUGodiniParameter = DanUGodini.HasValue ?
                new ObjectParameter("DanUGodini", DanUGodini) :
                new ObjectParameter("DanUGodini", typeof(int));
    
            var danUTjednuParameter = DanUTjednu.HasValue ?
                new ObjectParameter("DanUTjednu", DanUTjednu) :
                new ObjectParameter("DanUTjednu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_INSERT", iDDatumParameter, rBRParameter, datumParameter, godinaParameter, mjesecParameter, danParameter, tromjesecjeParameter, tjedanUGodiniParameter, danUGodiniParameter, danUTjednuParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_INSERT(int? IDDatum, int? RBR, DateTime? Datum, int? Godina, int? Mjesec, int? Dan, int? Tromjesecje, int? TjedanUGodini, int? DanUGodini, int? DanUTjednu, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            var rBRParameter = RBR.HasValue ?
                new ObjectParameter("RBR", RBR) :
                new ObjectParameter("RBR", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var danParameter = Dan.HasValue ?
                new ObjectParameter("Dan", Dan) :
                new ObjectParameter("Dan", typeof(int));
    
            var tromjesecjeParameter = Tromjesecje.HasValue ?
                new ObjectParameter("Tromjesecje", Tromjesecje) :
                new ObjectParameter("Tromjesecje", typeof(int));
    
            var tjedanUGodiniParameter = TjedanUGodini.HasValue ?
                new ObjectParameter("TjedanUGodini", TjedanUGodini) :
                new ObjectParameter("TjedanUGodini", typeof(int));
    
            var danUGodiniParameter = DanUGodini.HasValue ?
                new ObjectParameter("DanUGodini", DanUGodini) :
                new ObjectParameter("DanUGodini", typeof(int));
    
            var danUTjednuParameter = DanUTjednu.HasValue ?
                new ObjectParameter("DanUTjednu", DanUTjednu) :
                new ObjectParameter("DanUTjednu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_INSERT", mergeOption, iDDatumParameter, rBRParameter, datumParameter, godinaParameter, mjesecParameter, danParameter, tromjesecjeParameter, tjedanUGodiniParameter, danUGodiniParameter, danUTjednuParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_SELECT(int? IDDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_SELECT", iDDatumParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_SELECT(int? IDDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_SELECT", mergeOption, iDDatumParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_UPDATE(int? IDDatum, int? RBR, DateTime? Datum, int? Godina, int? Mjesec, int? Dan, int? Tromjesecje, int? TjedanUGodini, int? DanUGodini, int? DanUTjednu)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            var rBRParameter = RBR.HasValue ?
                new ObjectParameter("RBR", RBR) :
                new ObjectParameter("RBR", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var danParameter = Dan.HasValue ?
                new ObjectParameter("Dan", Dan) :
                new ObjectParameter("Dan", typeof(int));
    
            var tromjesecjeParameter = Tromjesecje.HasValue ?
                new ObjectParameter("Tromjesecje", Tromjesecje) :
                new ObjectParameter("Tromjesecje", typeof(int));
    
            var tjedanUGodiniParameter = TjedanUGodini.HasValue ?
                new ObjectParameter("TjedanUGodini", TjedanUGodini) :
                new ObjectParameter("TjedanUGodini", typeof(int));
    
            var danUGodiniParameter = DanUGodini.HasValue ?
                new ObjectParameter("DanUGodini", DanUGodini) :
                new ObjectParameter("DanUGodini", typeof(int));
    
            var danUTjednuParameter = DanUTjednu.HasValue ?
                new ObjectParameter("DanUTjednu", DanUTjednu) :
                new ObjectParameter("DanUTjednu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_UPDATE", iDDatumParameter, rBRParameter, datumParameter, godinaParameter, mjesecParameter, danParameter, tromjesecjeParameter, tjedanUGodiniParameter, danUGodiniParameter, danUTjednuParameter);
        }
    
        public virtual ObjectResult<Kalendar> USP_Kalendar_UPDATE(int? IDDatum, int? RBR, DateTime? Datum, int? Godina, int? Mjesec, int? Dan, int? Tromjesecje, int? TjedanUGodini, int? DanUGodini, int? DanUTjednu, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kalendar).Assembly);
    
            var iDDatumParameter = IDDatum.HasValue ?
                new ObjectParameter("IDDatum", IDDatum) :
                new ObjectParameter("IDDatum", typeof(int));
    
            var rBRParameter = RBR.HasValue ?
                new ObjectParameter("RBR", RBR) :
                new ObjectParameter("RBR", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var danParameter = Dan.HasValue ?
                new ObjectParameter("Dan", Dan) :
                new ObjectParameter("Dan", typeof(int));
    
            var tromjesecjeParameter = Tromjesecje.HasValue ?
                new ObjectParameter("Tromjesecje", Tromjesecje) :
                new ObjectParameter("Tromjesecje", typeof(int));
    
            var tjedanUGodiniParameter = TjedanUGodini.HasValue ?
                new ObjectParameter("TjedanUGodini", TjedanUGodini) :
                new ObjectParameter("TjedanUGodini", typeof(int));
    
            var danUGodiniParameter = DanUGodini.HasValue ?
                new ObjectParameter("DanUGodini", DanUGodini) :
                new ObjectParameter("DanUGodini", typeof(int));
    
            var danUTjednuParameter = DanUTjednu.HasValue ?
                new ObjectParameter("DanUTjednu", DanUTjednu) :
                new ObjectParameter("DanUTjednu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kalendar>("USP_Kalendar_UPDATE", mergeOption, iDDatumParameter, rBRParameter, datumParameter, godinaParameter, mjesecParameter, danParameter, tromjesecjeParameter, tjedanUGodiniParameter, danUGodiniParameter, danUTjednuParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarGodina_DELETE(int? Godina)
        {
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarGodina_DELETE", godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_INSERT(int? Godina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_INSERT", godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_INSERT(int? Godina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_INSERT", mergeOption, godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_SELECT(int? Godina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_SELECT", godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_SELECT(int? Godina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_SELECT", mergeOption, godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_UPDATE(int? Godina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_UPDATE", godinaParameter);
        }
    
        public virtual ObjectResult<KalendarGodina> USP_KalendarGodina_UPDATE(int? Godina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodina).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodina>("USP_KalendarGodina_UPDATE", mergeOption, godinaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarGodinaDan_DELETE(int? GodinaDan)
        {
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarGodinaDan_DELETE", godinaDanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_INSERT(int? GodinaDan, string Oznaka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_INSERT", godinaDanParameter, oznakaParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_INSERT(int? GodinaDan, string Oznaka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_INSERT", mergeOption, godinaDanParameter, oznakaParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_SELECT(int? GodinaDan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_SELECT", godinaDanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_SELECT(int? GodinaDan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_SELECT", mergeOption, godinaDanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_UPDATE(int? GodinaDan, string Oznaka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_UPDATE", godinaDanParameter, oznakaParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaDan> USP_KalendarGodinaDan_UPDATE(int? GodinaDan, string Oznaka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaDan).Assembly);
    
            var godinaDanParameter = GodinaDan.HasValue ?
                new ObjectParameter("GodinaDan", GodinaDan) :
                new ObjectParameter("GodinaDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaDan>("USP_KalendarGodinaDan_UPDATE", mergeOption, godinaDanParameter, oznakaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarGodinaKvartal_DELETE(int? Godina, int? Kvartal)
        {
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarGodinaKvartal_DELETE", godinaParameter, kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_INSERT(int? Godina, int? Kvartal, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_INSERT", godinaParameter, kvartalParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_INSERT(int? Godina, int? Kvartal, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_INSERT", mergeOption, godinaParameter, kvartalParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_SELECT(int? Godina, int? Kvartal)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_SELECT", godinaParameter, kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_SELECT(int? Godina, int? Kvartal, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_SELECT", mergeOption, godinaParameter, kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_UPDATE(int? Godina, int? Kvartal, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_UPDATE", godinaParameter, kvartalParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaKvartal> USP_KalendarGodinaKvartal_UPDATE(int? Godina, int? Kvartal, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaKvartal).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaKvartal>("USP_KalendarGodinaKvartal_UPDATE", mergeOption, godinaParameter, kvartalParameter, odabirParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarGodinaMjesec_DELETE(int? Godina, int? Mjesec)
        {
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarGodinaMjesec_DELETE", godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_INSERT(int? Godina, int? Mjesec, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_INSERT", godinaParameter, mjesecParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_INSERT(int? Godina, int? Mjesec, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_INSERT", mergeOption, godinaParameter, mjesecParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_SELECT(int? Godina, int? Mjesec)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_SELECT", godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_SELECT(int? Godina, int? Mjesec, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_SELECT", mergeOption, godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_UPDATE(int? Godina, int? Mjesec, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_UPDATE", godinaParameter, mjesecParameter, odabirParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaMjesec> USP_KalendarGodinaMjesec_UPDATE(int? Godina, int? Mjesec, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaMjesec).Assembly);
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaMjesec>("USP_KalendarGodinaMjesec_UPDATE", mergeOption, godinaParameter, mjesecParameter, odabirParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarGodinaTjedan_DELETE(int? GodinaTjedan)
        {
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarGodinaTjedan_DELETE", godinaTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_INSERT(int? GodinaTjedan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_INSERT", godinaTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_INSERT(int? GodinaTjedan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_INSERT", mergeOption, godinaTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_SELECT(int? GodinaTjedan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_SELECT", godinaTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_SELECT(int? GodinaTjedan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_SELECT", mergeOption, godinaTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_UPDATE(int? GodinaTjedan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_UPDATE", godinaTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarGodinaTjedan> USP_KalendarGodinaTjedan_UPDATE(int? GodinaTjedan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarGodinaTjedan).Assembly);
    
            var godinaTjedanParameter = GodinaTjedan.HasValue ?
                new ObjectParameter("GodinaTjedan", GodinaTjedan) :
                new ObjectParameter("GodinaTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarGodinaTjedan>("USP_KalendarGodinaTjedan_UPDATE", mergeOption, godinaTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarKvartal_DELETE(int? Kvartal)
        {
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarKvartal_DELETE", kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_INSERT(int? Kvartal, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_INSERT", kvartalParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_INSERT(int? Kvartal, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_INSERT", mergeOption, kvartalParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_SELECT(int? Kvartal)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_SELECT", kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_SELECT(int? Kvartal, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_SELECT", mergeOption, kvartalParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_UPDATE(int? Kvartal, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_UPDATE", kvartalParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarKvartal> USP_KalendarKvartal_UPDATE(int? Kvartal, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarKvartal).Assembly);
    
            var kvartalParameter = Kvartal.HasValue ?
                new ObjectParameter("Kvartal", Kvartal) :
                new ObjectParameter("Kvartal", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarKvartal>("USP_KalendarKvartal_UPDATE", mergeOption, kvartalParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarMjesec_DELETE(int? Mjesec)
        {
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarMjesec_DELETE", mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_INSERT(int? Mjesec, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_INSERT", mjesecParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_INSERT(int? Mjesec, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_INSERT", mergeOption, mjesecParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_SELECT(int? Mjesec)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_SELECT", mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_SELECT(int? Mjesec, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_SELECT", mergeOption, mjesecParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_UPDATE(int? Mjesec, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_UPDATE", mjesecParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesec> USP_KalendarMjesec_UPDATE(int? Mjesec, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesec).Assembly);
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesec>("USP_KalendarMjesec_UPDATE", mergeOption, mjesecParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarMjesecDan_DELETE(int? MjesecDan)
        {
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarMjesecDan_DELETE", mjesecDanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_INSERT(int? MjesecDan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_INSERT", mjesecDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_INSERT(int? MjesecDan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_INSERT", mergeOption, mjesecDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_SELECT(int? MjesecDan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_SELECT", mjesecDanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_SELECT(int? MjesecDan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_SELECT", mergeOption, mjesecDanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_UPDATE(int? MjesecDan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_UPDATE", mjesecDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecDan> USP_KalendarMjesecDan_UPDATE(int? MjesecDan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecDan).Assembly);
    
            var mjesecDanParameter = MjesecDan.HasValue ?
                new ObjectParameter("MjesecDan", MjesecDan) :
                new ObjectParameter("MjesecDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecDan>("USP_KalendarMjesecDan_UPDATE", mergeOption, mjesecDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarMjesecTjedan_DELETE(int? MjesecTjedan)
        {
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarMjesecTjedan_DELETE", mjesecTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_INSERT(int? MjesecTjedan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_INSERT", mjesecTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_INSERT(int? MjesecTjedan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_INSERT", mergeOption, mjesecTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_SELECT(int? MjesecTjedan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_SELECT", mjesecTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_SELECT(int? MjesecTjedan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_SELECT", mergeOption, mjesecTjedanParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_UPDATE(int? MjesecTjedan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_UPDATE", mjesecTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarMjesecTjedan> USP_KalendarMjesecTjedan_UPDATE(int? MjesecTjedan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarMjesecTjedan).Assembly);
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarMjesecTjedan>("USP_KalendarMjesecTjedan_UPDATE", mergeOption, mjesecTjedanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KalendarTjedanDan_DELETE(int? TjedanDan)
        {
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KalendarTjedanDan_DELETE", tjedanDanParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_INSERT(int? TjedanDan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_INSERT", tjedanDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_INSERT(int? TjedanDan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_INSERT", mergeOption, tjedanDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_SELECT(int? TjedanDan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_SELECT", tjedanDanParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_SELECT(int? TjedanDan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_SELECT", mergeOption, tjedanDanParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_UPDATE(int? TjedanDan, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_UPDATE", tjedanDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<KalendarTjedanDan> USP_KalendarTjedanDan_UPDATE(int? TjedanDan, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KalendarTjedanDan).Assembly);
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KalendarTjedanDan>("USP_KalendarTjedanDan_UPDATE", mergeOption, tjedanDanParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_KnjigaIRA_DELETE(long? ID_KnjigaIRA)
        {
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KnjigaIRA_DELETE", iD_KnjigaIRAParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunIzlaz, decimal? IznosProlaznaSt, decimal? IznosNeoporezivo, decimal? IznosIzvoz, decimal? IznosMedunarodniPrijevoz, decimal? IznosTuzemstvo, decimal? IznosOstalo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iznosProlaznaStParameter = IznosProlaznaSt.HasValue ?
                new ObjectParameter("IznosProlaznaSt", IznosProlaznaSt) :
                new ObjectParameter("IznosProlaznaSt", typeof(decimal));
    
            var iznosNeoporezivoParameter = IznosNeoporezivo.HasValue ?
                new ObjectParameter("IznosNeoporezivo", IznosNeoporezivo) :
                new ObjectParameter("IznosNeoporezivo", typeof(decimal));
    
            var iznosIzvozParameter = IznosIzvoz.HasValue ?
                new ObjectParameter("IznosIzvoz", IznosIzvoz) :
                new ObjectParameter("IznosIzvoz", typeof(decimal));
    
            var iznosMedunarodniPrijevozParameter = IznosMedunarodniPrijevoz.HasValue ?
                new ObjectParameter("IznosMedunarodniPrijevoz", IznosMedunarodniPrijevoz) :
                new ObjectParameter("IznosMedunarodniPrijevoz", typeof(decimal));
    
            var iznosTuzemstvoParameter = IznosTuzemstvo.HasValue ?
                new ObjectParameter("IznosTuzemstvo", IznosTuzemstvo) :
                new ObjectParameter("IznosTuzemstvo", typeof(decimal));
    
            var iznosOstaloParameter = IznosOstalo.HasValue ?
                new ObjectParameter("IznosOstalo", IznosOstalo) :
                new ObjectParameter("IznosOstalo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_INSERT", iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunIzlazParameter, iznosProlaznaStParameter, iznosNeoporezivoParameter, iznosIzvozParameter, iznosMedunarodniPrijevozParameter, iznosTuzemstvoParameter, iznosOstaloParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunIzlaz, decimal? IznosProlaznaSt, decimal? IznosNeoporezivo, decimal? IznosIzvoz, decimal? IznosMedunarodniPrijevoz, decimal? IznosTuzemstvo, decimal? IznosOstalo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iznosProlaznaStParameter = IznosProlaznaSt.HasValue ?
                new ObjectParameter("IznosProlaznaSt", IznosProlaznaSt) :
                new ObjectParameter("IznosProlaznaSt", typeof(decimal));
    
            var iznosNeoporezivoParameter = IznosNeoporezivo.HasValue ?
                new ObjectParameter("IznosNeoporezivo", IznosNeoporezivo) :
                new ObjectParameter("IznosNeoporezivo", typeof(decimal));
    
            var iznosIzvozParameter = IznosIzvoz.HasValue ?
                new ObjectParameter("IznosIzvoz", IznosIzvoz) :
                new ObjectParameter("IznosIzvoz", typeof(decimal));
    
            var iznosMedunarodniPrijevozParameter = IznosMedunarodniPrijevoz.HasValue ?
                new ObjectParameter("IznosMedunarodniPrijevoz", IznosMedunarodniPrijevoz) :
                new ObjectParameter("IznosMedunarodniPrijevoz", typeof(decimal));
    
            var iznosTuzemstvoParameter = IznosTuzemstvo.HasValue ?
                new ObjectParameter("IznosTuzemstvo", IznosTuzemstvo) :
                new ObjectParameter("IznosTuzemstvo", typeof(decimal));
    
            var iznosOstaloParameter = IznosOstalo.HasValue ?
                new ObjectParameter("IznosOstalo", IznosOstalo) :
                new ObjectParameter("IznosOstalo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunIzlazParameter, iznosProlaznaStParameter, iznosNeoporezivoParameter, iznosIzvozParameter, iznosMedunarodniPrijevozParameter, iznosTuzemstvoParameter, iznosOstaloParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_SELECT(long? ID_KnjigaIRA)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_SELECT", iD_KnjigaIRAParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_SELECT(long? ID_KnjigaIRA, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_SELECT", mergeOption, iD_KnjigaIRAParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_UPDATE(long? ID_KnjigaIRA, long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunIzlaz, decimal? IznosProlaznaSt, decimal? IznosNeoporezivo, decimal? IznosIzvoz, decimal? IznosMedunarodniPrijevoz, decimal? IznosTuzemstvo, decimal? IznosOstalo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iznosProlaznaStParameter = IznosProlaznaSt.HasValue ?
                new ObjectParameter("IznosProlaznaSt", IznosProlaznaSt) :
                new ObjectParameter("IznosProlaznaSt", typeof(decimal));
    
            var iznosNeoporezivoParameter = IznosNeoporezivo.HasValue ?
                new ObjectParameter("IznosNeoporezivo", IznosNeoporezivo) :
                new ObjectParameter("IznosNeoporezivo", typeof(decimal));
    
            var iznosIzvozParameter = IznosIzvoz.HasValue ?
                new ObjectParameter("IznosIzvoz", IznosIzvoz) :
                new ObjectParameter("IznosIzvoz", typeof(decimal));
    
            var iznosMedunarodniPrijevozParameter = IznosMedunarodniPrijevoz.HasValue ?
                new ObjectParameter("IznosMedunarodniPrijevoz", IznosMedunarodniPrijevoz) :
                new ObjectParameter("IznosMedunarodniPrijevoz", typeof(decimal));
    
            var iznosTuzemstvoParameter = IznosTuzemstvo.HasValue ?
                new ObjectParameter("IznosTuzemstvo", IznosTuzemstvo) :
                new ObjectParameter("IznosTuzemstvo", typeof(decimal));
    
            var iznosOstaloParameter = IznosOstalo.HasValue ?
                new ObjectParameter("IznosOstalo", IznosOstalo) :
                new ObjectParameter("IznosOstalo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_UPDATE", iD_KnjigaIRAParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunIzlazParameter, iznosProlaznaStParameter, iznosNeoporezivoParameter, iznosIzvozParameter, iznosMedunarodniPrijevozParameter, iznosTuzemstvoParameter, iznosOstaloParameter);
        }
    
        public virtual ObjectResult<KnjigaIRA> USP_KnjigaIRA_UPDATE(long? ID_KnjigaIRA, long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunIzlaz, decimal? IznosProlaznaSt, decimal? IznosNeoporezivo, decimal? IznosIzvoz, decimal? IznosMedunarodniPrijevoz, decimal? IznosTuzemstvo, decimal? IznosOstalo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRA).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iznosProlaznaStParameter = IznosProlaznaSt.HasValue ?
                new ObjectParameter("IznosProlaznaSt", IznosProlaznaSt) :
                new ObjectParameter("IznosProlaznaSt", typeof(decimal));
    
            var iznosNeoporezivoParameter = IznosNeoporezivo.HasValue ?
                new ObjectParameter("IznosNeoporezivo", IznosNeoporezivo) :
                new ObjectParameter("IznosNeoporezivo", typeof(decimal));
    
            var iznosIzvozParameter = IznosIzvoz.HasValue ?
                new ObjectParameter("IznosIzvoz", IznosIzvoz) :
                new ObjectParameter("IznosIzvoz", typeof(decimal));
    
            var iznosMedunarodniPrijevozParameter = IznosMedunarodniPrijevoz.HasValue ?
                new ObjectParameter("IznosMedunarodniPrijevoz", IznosMedunarodniPrijevoz) :
                new ObjectParameter("IznosMedunarodniPrijevoz", typeof(decimal));
    
            var iznosTuzemstvoParameter = IznosTuzemstvo.HasValue ?
                new ObjectParameter("IznosTuzemstvo", IznosTuzemstvo) :
                new ObjectParameter("IznosTuzemstvo", typeof(decimal));
    
            var iznosOstaloParameter = IznosOstalo.HasValue ?
                new ObjectParameter("IznosOstalo", IznosOstalo) :
                new ObjectParameter("IznosOstalo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRA>("USP_KnjigaIRA_UPDATE", mergeOption, iD_KnjigaIRAParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunIzlazParameter, iznosProlaznaStParameter, iznosNeoporezivoParameter, iznosIzvozParameter, iznosMedunarodniPrijevozParameter, iznosTuzemstvoParameter, iznosOstaloParameter);
        }
    
        public virtual ObjectResult<int?> USP_KnjigaIRAPDV_DELETE(long? ID_KnjigaIRAPDV)
        {
            var iD_KnjigaIRAPDVParameter = ID_KnjigaIRAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaIRAPDV", ID_KnjigaIRAPDV) :
                new ObjectParameter("ID_KnjigaIRAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KnjigaIRAPDV_DELETE", iD_KnjigaIRAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_INSERT(long? ID_KnjigaIRA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_INSERT", iD_KnjigaIRAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_INSERT(long? ID_KnjigaIRA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_INSERT", mergeOption, iD_KnjigaIRAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_SELECT(long? ID_KnjigaIRAPDV)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAPDVParameter = ID_KnjigaIRAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaIRAPDV", ID_KnjigaIRAPDV) :
                new ObjectParameter("ID_KnjigaIRAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_SELECT", iD_KnjigaIRAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_SELECT(long? ID_KnjigaIRAPDV, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAPDVParameter = ID_KnjigaIRAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaIRAPDV", ID_KnjigaIRAPDV) :
                new ObjectParameter("ID_KnjigaIRAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_SELECT", mergeOption, iD_KnjigaIRAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_UPDATE(long? ID_KnjigaIRAPDV, long? ID_KnjigaIRA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAPDVParameter = ID_KnjigaIRAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaIRAPDV", ID_KnjigaIRAPDV) :
                new ObjectParameter("ID_KnjigaIRAPDV", typeof(long));
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_UPDATE", iD_KnjigaIRAPDVParameter, iD_KnjigaIRAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaIRAPDV> USP_KnjigaIRAPDV_UPDATE(long? ID_KnjigaIRAPDV, long? ID_KnjigaIRA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaIRAPDV).Assembly);
    
            var iD_KnjigaIRAPDVParameter = ID_KnjigaIRAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaIRAPDV", ID_KnjigaIRAPDV) :
                new ObjectParameter("ID_KnjigaIRAPDV", typeof(long));
    
            var iD_KnjigaIRAParameter = ID_KnjigaIRA.HasValue ?
                new ObjectParameter("ID_KnjigaIRA", ID_KnjigaIRA) :
                new ObjectParameter("ID_KnjigaIRA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaIRAPDV>("USP_KnjigaIRAPDV_UPDATE", mergeOption, iD_KnjigaIRAPDVParameter, iD_KnjigaIRAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<int?> USP_KnjigaOS_DELETE(long? ID_KnjigaOS)
        {
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KnjigaOS_DELETE", iD_KnjigaOSParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_INSERT", iD_ZapisParameter, iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_SELECT(long? ID_KnjigaOS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_SELECT", iD_KnjigaOSParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_SELECT(long? ID_KnjigaOS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_SELECT", mergeOption, iD_KnjigaOSParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_UPDATE(long? ID_KnjigaOS, long? ID_Zapis, long? ID_PoslovniSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_UPDATE", iD_KnjigaOSParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<KnjigaOS> USP_KnjigaOS_UPDATE(long? ID_KnjigaOS, long? ID_Zapis, long? ID_PoslovniSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaOS).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaOS>("USP_KnjigaOS_UPDATE", mergeOption, iD_KnjigaOSParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_KnjigaURA_DELETE(long? ID_KnjigaURA)
        {
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KnjigaURA_DELETE", iD_KnjigaURAParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunUlaz)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_INSERT", iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunUlaz, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_SELECT(long? ID_KnjigaURA)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_SELECT", iD_KnjigaURAParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_SELECT(long? ID_KnjigaURA, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_SELECT", mergeOption, iD_KnjigaURAParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_UPDATE(long? ID_KnjigaURA, long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunUlaz)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_UPDATE", iD_KnjigaURAParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<KnjigaURA> USP_KnjigaURA_UPDATE(long? ID_KnjigaURA, long? ID_Zapis, long? ID_PoslovnaGodina, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_RacunUlaz, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURA).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURA>("USP_KnjigaURA_UPDATE", mergeOption, iD_KnjigaURAParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<int?> USP_KnjigaURAPDV_DELETE(long? ID_KnjigaURAPDV)
        {
            var iD_KnjigaURAPDVParameter = ID_KnjigaURAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaURAPDV", ID_KnjigaURAPDV) :
                new ObjectParameter("ID_KnjigaURAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KnjigaURAPDV_DELETE", iD_KnjigaURAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_INSERT(long? ID_KnjigaURA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_INSERT", iD_KnjigaURAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_INSERT(long? ID_KnjigaURA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_INSERT", mergeOption, iD_KnjigaURAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_SELECT(long? ID_KnjigaURAPDV)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAPDVParameter = ID_KnjigaURAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaURAPDV", ID_KnjigaURAPDV) :
                new ObjectParameter("ID_KnjigaURAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_SELECT", iD_KnjigaURAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_SELECT(long? ID_KnjigaURAPDV, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAPDVParameter = ID_KnjigaURAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaURAPDV", ID_KnjigaURAPDV) :
                new ObjectParameter("ID_KnjigaURAPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_SELECT", mergeOption, iD_KnjigaURAPDVParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_UPDATE(long? ID_KnjigaURAPDV, long? ID_KnjigaURA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAPDVParameter = ID_KnjigaURAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaURAPDV", ID_KnjigaURAPDV) :
                new ObjectParameter("ID_KnjigaURAPDV", typeof(long));
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_UPDATE", iD_KnjigaURAPDVParameter, iD_KnjigaURAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<KnjigaURAPDV> USP_KnjigaURAPDV_UPDATE(long? ID_KnjigaURAPDV, long? ID_KnjigaURA, long? ID_PDV, decimal? IznosOsnova, decimal? Iznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KnjigaURAPDV).Assembly);
    
            var iD_KnjigaURAPDVParameter = ID_KnjigaURAPDV.HasValue ?
                new ObjectParameter("ID_KnjigaURAPDV", ID_KnjigaURAPDV) :
                new ObjectParameter("ID_KnjigaURAPDV", typeof(long));
    
            var iD_KnjigaURAParameter = ID_KnjigaURA.HasValue ?
                new ObjectParameter("ID_KnjigaURA", ID_KnjigaURA) :
                new ObjectParameter("ID_KnjigaURA", typeof(long));
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnjigaURAPDV>("USP_KnjigaURAPDV_UPDATE", mergeOption, iD_KnjigaURAPDVParameter, iD_KnjigaURAParameter, iD_PDVParameter, iznosOsnovaParameter, iznosParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlan_DELETE(long? ID_KontniPlan)
        {
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlan_DELETE", iD_KontniPlanParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_INSERT(long? ID_PoslovnaGodina, int? AnalitikaOd)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var analitikaOdParameter = AnalitikaOd.HasValue ?
                new ObjectParameter("AnalitikaOd", AnalitikaOd) :
                new ObjectParameter("AnalitikaOd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_INSERT", iD_PoslovnaGodinaParameter, analitikaOdParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_INSERT(long? ID_PoslovnaGodina, int? AnalitikaOd, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var analitikaOdParameter = AnalitikaOd.HasValue ?
                new ObjectParameter("AnalitikaOd", AnalitikaOd) :
                new ObjectParameter("AnalitikaOd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_INSERT", mergeOption, iD_PoslovnaGodinaParameter, analitikaOdParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_SELECT(long? ID_KontniPlan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_SELECT", iD_KontniPlanParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_SELECT(long? ID_KontniPlan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_SELECT", mergeOption, iD_KontniPlanParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_UPDATE(long? ID_KontniPlan, long? ID_PoslovnaGodina, int? AnalitikaOd)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var analitikaOdParameter = AnalitikaOd.HasValue ?
                new ObjectParameter("AnalitikaOd", AnalitikaOd) :
                new ObjectParameter("AnalitikaOd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_UPDATE", iD_KontniPlanParameter, iD_PoslovnaGodinaParameter, analitikaOdParameter);
        }
    
        public virtual ObjectResult<KontniPlan> USP_KontniPlan_UPDATE(long? ID_KontniPlan, long? ID_PoslovnaGodina, int? AnalitikaOd, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlan).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var analitikaOdParameter = AnalitikaOd.HasValue ?
                new ObjectParameter("AnalitikaOd", AnalitikaOd) :
                new ObjectParameter("AnalitikaOd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlan>("USP_KontniPlan_UPDATE", mergeOption, iD_KontniPlanParameter, iD_PoslovnaGodinaParameter, analitikaOdParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanAnalitika_DELETE(long? ID_KontniPlanAnalitika)
        {
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanAnalitika_DELETE", iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_INSERT(long? ID_KontniPlan, int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_INSERT", iD_KontniPlanParameter, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_INSERT(long? ID_KontniPlan, int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_INSERT", mergeOption, iD_KontniPlanParameter, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_SELECT(long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_SELECT", iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_SELECT(long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_SELECT", mergeOption, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_UPDATE(long? ID_KontniPlanAnalitika, long? ID_KontniPlan, int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_UPDATE", iD_KontniPlanAnalitikaParameter, iD_KontniPlanParameter, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanAnalitika> USP_KontniPlanAnalitika_UPDATE(long? ID_KontniPlanAnalitika, long? ID_KontniPlan, int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanAnalitika).Assembly);
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanAnalitika>("USP_KontniPlanAnalitika_UPDATE", mergeOption, iD_KontniPlanAnalitikaParameter, iD_KontniPlanParameter, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanSkup_DELETE(long? ID_KontniPlanSkup)
        {
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanSkup_DELETE", iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_INSERT(long? ID_KontniPlan, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_INSERT", iD_KontniPlanParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_INSERT(long? ID_KontniPlan, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_INSERT", mergeOption, iD_KontniPlanParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_SELECT(long? ID_KontniPlanSkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_SELECT", iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_SELECT(long? ID_KontniPlanSkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_SELECT", mergeOption, iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_UPDATE(long? ID_KontniPlanSkup, long? ID_KontniPlan, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_UPDATE", iD_KontniPlanSkupParameter, iD_KontniPlanParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkup> USP_KontniPlanSkup_UPDATE(long? ID_KontniPlanSkup, long? ID_KontniPlan, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkup>("USP_KontniPlanSkup_UPDATE", mergeOption, iD_KontniPlanSkupParameter, iD_KontniPlanParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanSkupGr_DELETE(long? ID_KontniPlanSkupGr)
        {
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanSkupGr_DELETE", iD_KontniPlanSkupGrParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_SELECT(long? ID_KontniPlanSkupGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_SELECT", iD_KontniPlanSkupGrParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_SELECT(long? ID_KontniPlanSkupGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_SELECT", mergeOption, iD_KontniPlanSkupGrParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_UPDATE(long? ID_KontniPlanSkupGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_UPDATE", iD_KontniPlanSkupGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGr> USP_KontniPlanSkupGr_UPDATE(long? ID_KontniPlanSkupGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGr).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGr>("USP_KontniPlanSkupGr_UPDATE", mergeOption, iD_KontniPlanSkupGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanSkupGrKontniPlanSkup_DELETE(long? ID_KontniPlanSkupGrKontniPlanSkup)
        {
            var iD_KontniPlanSkupGrKontniPlanSkupParameter = ID_KontniPlanSkupGrKontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", ID_KontniPlanSkupGrKontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanSkupGrKontniPlanSkup_DELETE", iD_KontniPlanSkupGrKontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_INSERT(long? ID_KontniPlanSkupGr, long? ID_KontniPlanSkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_INSERT", iD_KontniPlanSkupGrParameter, iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_INSERT(long? ID_KontniPlanSkupGr, long? ID_KontniPlanSkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_INSERT", mergeOption, iD_KontniPlanSkupGrParameter, iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_SELECT(long? ID_KontniPlanSkupGrKontniPlanSkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrKontniPlanSkupParameter = ID_KontniPlanSkupGrKontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", ID_KontniPlanSkupGrKontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_SELECT", iD_KontniPlanSkupGrKontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_SELECT(long? ID_KontniPlanSkupGrKontniPlanSkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrKontniPlanSkupParameter = ID_KontniPlanSkupGrKontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", ID_KontniPlanSkupGrKontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_SELECT", mergeOption, iD_KontniPlanSkupGrKontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_UPDATE(long? ID_KontniPlanSkupGrKontniPlanSkup, long? ID_KontniPlanSkupGr, long? ID_KontniPlanSkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrKontniPlanSkupParameter = ID_KontniPlanSkupGrKontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", ID_KontniPlanSkupGrKontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", typeof(long));
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_UPDATE", iD_KontniPlanSkupGrKontniPlanSkupParameter, iD_KontniPlanSkupGrParameter, iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<KontniPlanSkupGrKontniPlanSkup> USP_KontniPlanSkupGrKontniPlanSkup_UPDATE(long? ID_KontniPlanSkupGrKontniPlanSkup, long? ID_KontniPlanSkupGr, long? ID_KontniPlanSkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSkupGrKontniPlanSkup).Assembly);
    
            var iD_KontniPlanSkupGrKontniPlanSkupParameter = ID_KontniPlanSkupGrKontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", ID_KontniPlanSkupGrKontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkupGrKontniPlanSkup", typeof(long));
    
            var iD_KontniPlanSkupGrParameter = ID_KontniPlanSkupGr.HasValue ?
                new ObjectParameter("ID_KontniPlanSkupGr", ID_KontniPlanSkupGr) :
                new ObjectParameter("ID_KontniPlanSkupGr", typeof(long));
    
            var iD_KontniPlanSkupParameter = ID_KontniPlanSkup.HasValue ?
                new ObjectParameter("ID_KontniPlanSkup", ID_KontniPlanSkup) :
                new ObjectParameter("ID_KontniPlanSkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSkupGrKontniPlanSkup>("USP_KontniPlanSkupGrKontniPlanSkup_UPDATE", mergeOption, iD_KontniPlanSkupGrKontniPlanSkupParameter, iD_KontniPlanSkupGrParameter, iD_KontniPlanSkupParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanSt_DELETE(long? ID_KontniPlanSt)
        {
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanSt_DELETE", iD_KontniPlanStParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_INSERT(long? ID_KontniPlan, string Konto, string Naziv, string NazivKr, string Kratica, bool? SaldoKonti, bool? ZapisDopusteno, bool? ZapisObavezno, bool? SubjektDopusteno, bool? SubjektObavezno, bool? ObjektDopusteno, bool? ObjektObavezno, bool? DavanjeDopusteno, bool? DavanjeObavezno, bool? DugujeDopusteno, bool? DugujeObavezno, bool? PotrazujeDopusteno, bool? PotrazujeObavezno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var kontoParameter = Konto != null ?
                new ObjectParameter("Konto", Konto) :
                new ObjectParameter("Konto", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var saldoKontiParameter = SaldoKonti.HasValue ?
                new ObjectParameter("SaldoKonti", SaldoKonti) :
                new ObjectParameter("SaldoKonti", typeof(bool));
    
            var zapisDopustenoParameter = ZapisDopusteno.HasValue ?
                new ObjectParameter("ZapisDopusteno", ZapisDopusteno) :
                new ObjectParameter("ZapisDopusteno", typeof(bool));
    
            var zapisObaveznoParameter = ZapisObavezno.HasValue ?
                new ObjectParameter("ZapisObavezno", ZapisObavezno) :
                new ObjectParameter("ZapisObavezno", typeof(bool));
    
            var subjektDopustenoParameter = SubjektDopusteno.HasValue ?
                new ObjectParameter("SubjektDopusteno", SubjektDopusteno) :
                new ObjectParameter("SubjektDopusteno", typeof(bool));
    
            var subjektObaveznoParameter = SubjektObavezno.HasValue ?
                new ObjectParameter("SubjektObavezno", SubjektObavezno) :
                new ObjectParameter("SubjektObavezno", typeof(bool));
    
            var objektDopustenoParameter = ObjektDopusteno.HasValue ?
                new ObjectParameter("ObjektDopusteno", ObjektDopusteno) :
                new ObjectParameter("ObjektDopusteno", typeof(bool));
    
            var objektObaveznoParameter = ObjektObavezno.HasValue ?
                new ObjectParameter("ObjektObavezno", ObjektObavezno) :
                new ObjectParameter("ObjektObavezno", typeof(bool));
    
            var davanjeDopustenoParameter = DavanjeDopusteno.HasValue ?
                new ObjectParameter("DavanjeDopusteno", DavanjeDopusteno) :
                new ObjectParameter("DavanjeDopusteno", typeof(bool));
    
            var davanjeObaveznoParameter = DavanjeObavezno.HasValue ?
                new ObjectParameter("DavanjeObavezno", DavanjeObavezno) :
                new ObjectParameter("DavanjeObavezno", typeof(bool));
    
            var dugujeDopustenoParameter = DugujeDopusteno.HasValue ?
                new ObjectParameter("DugujeDopusteno", DugujeDopusteno) :
                new ObjectParameter("DugujeDopusteno", typeof(bool));
    
            var dugujeObaveznoParameter = DugujeObavezno.HasValue ?
                new ObjectParameter("DugujeObavezno", DugujeObavezno) :
                new ObjectParameter("DugujeObavezno", typeof(bool));
    
            var potrazujeDopustenoParameter = PotrazujeDopusteno.HasValue ?
                new ObjectParameter("PotrazujeDopusteno", PotrazujeDopusteno) :
                new ObjectParameter("PotrazujeDopusteno", typeof(bool));
    
            var potrazujeObaveznoParameter = PotrazujeObavezno.HasValue ?
                new ObjectParameter("PotrazujeObavezno", PotrazujeObavezno) :
                new ObjectParameter("PotrazujeObavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_INSERT", iD_KontniPlanParameter, kontoParameter, nazivParameter, nazivKrParameter, kraticaParameter, saldoKontiParameter, zapisDopustenoParameter, zapisObaveznoParameter, subjektDopustenoParameter, subjektObaveznoParameter, objektDopustenoParameter, objektObaveznoParameter, davanjeDopustenoParameter, davanjeObaveznoParameter, dugujeDopustenoParameter, dugujeObaveznoParameter, potrazujeDopustenoParameter, potrazujeObaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_INSERT(long? ID_KontniPlan, string Konto, string Naziv, string NazivKr, string Kratica, bool? SaldoKonti, bool? ZapisDopusteno, bool? ZapisObavezno, bool? SubjektDopusteno, bool? SubjektObavezno, bool? ObjektDopusteno, bool? ObjektObavezno, bool? DavanjeDopusteno, bool? DavanjeObavezno, bool? DugujeDopusteno, bool? DugujeObavezno, bool? PotrazujeDopusteno, bool? PotrazujeObavezno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var kontoParameter = Konto != null ?
                new ObjectParameter("Konto", Konto) :
                new ObjectParameter("Konto", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var saldoKontiParameter = SaldoKonti.HasValue ?
                new ObjectParameter("SaldoKonti", SaldoKonti) :
                new ObjectParameter("SaldoKonti", typeof(bool));
    
            var zapisDopustenoParameter = ZapisDopusteno.HasValue ?
                new ObjectParameter("ZapisDopusteno", ZapisDopusteno) :
                new ObjectParameter("ZapisDopusteno", typeof(bool));
    
            var zapisObaveznoParameter = ZapisObavezno.HasValue ?
                new ObjectParameter("ZapisObavezno", ZapisObavezno) :
                new ObjectParameter("ZapisObavezno", typeof(bool));
    
            var subjektDopustenoParameter = SubjektDopusteno.HasValue ?
                new ObjectParameter("SubjektDopusteno", SubjektDopusteno) :
                new ObjectParameter("SubjektDopusteno", typeof(bool));
    
            var subjektObaveznoParameter = SubjektObavezno.HasValue ?
                new ObjectParameter("SubjektObavezno", SubjektObavezno) :
                new ObjectParameter("SubjektObavezno", typeof(bool));
    
            var objektDopustenoParameter = ObjektDopusteno.HasValue ?
                new ObjectParameter("ObjektDopusteno", ObjektDopusteno) :
                new ObjectParameter("ObjektDopusteno", typeof(bool));
    
            var objektObaveznoParameter = ObjektObavezno.HasValue ?
                new ObjectParameter("ObjektObavezno", ObjektObavezno) :
                new ObjectParameter("ObjektObavezno", typeof(bool));
    
            var davanjeDopustenoParameter = DavanjeDopusteno.HasValue ?
                new ObjectParameter("DavanjeDopusteno", DavanjeDopusteno) :
                new ObjectParameter("DavanjeDopusteno", typeof(bool));
    
            var davanjeObaveznoParameter = DavanjeObavezno.HasValue ?
                new ObjectParameter("DavanjeObavezno", DavanjeObavezno) :
                new ObjectParameter("DavanjeObavezno", typeof(bool));
    
            var dugujeDopustenoParameter = DugujeDopusteno.HasValue ?
                new ObjectParameter("DugujeDopusteno", DugujeDopusteno) :
                new ObjectParameter("DugujeDopusteno", typeof(bool));
    
            var dugujeObaveznoParameter = DugujeObavezno.HasValue ?
                new ObjectParameter("DugujeObavezno", DugujeObavezno) :
                new ObjectParameter("DugujeObavezno", typeof(bool));
    
            var potrazujeDopustenoParameter = PotrazujeDopusteno.HasValue ?
                new ObjectParameter("PotrazujeDopusteno", PotrazujeDopusteno) :
                new ObjectParameter("PotrazujeDopusteno", typeof(bool));
    
            var potrazujeObaveznoParameter = PotrazujeObavezno.HasValue ?
                new ObjectParameter("PotrazujeObavezno", PotrazujeObavezno) :
                new ObjectParameter("PotrazujeObavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_INSERT", mergeOption, iD_KontniPlanParameter, kontoParameter, nazivParameter, nazivKrParameter, kraticaParameter, saldoKontiParameter, zapisDopustenoParameter, zapisObaveznoParameter, subjektDopustenoParameter, subjektObaveznoParameter, objektDopustenoParameter, objektObaveznoParameter, davanjeDopustenoParameter, davanjeObaveznoParameter, dugujeDopustenoParameter, dugujeObaveznoParameter, potrazujeDopustenoParameter, potrazujeObaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_SELECT(long? ID_KontniPlanSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_SELECT", iD_KontniPlanStParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_SELECT(long? ID_KontniPlanSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_SELECT", mergeOption, iD_KontniPlanStParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_UPDATE(long? ID_KontniPlanSt, long? ID_KontniPlan, string Konto, string Naziv, string NazivKr, string Kratica, bool? SaldoKonti, bool? ZapisDopusteno, bool? ZapisObavezno, bool? SubjektDopusteno, bool? SubjektObavezno, bool? ObjektDopusteno, bool? ObjektObavezno, bool? DavanjeDopusteno, bool? DavanjeObavezno, bool? DugujeDopusteno, bool? DugujeObavezno, bool? PotrazujeDopusteno, bool? PotrazujeObavezno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var kontoParameter = Konto != null ?
                new ObjectParameter("Konto", Konto) :
                new ObjectParameter("Konto", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var saldoKontiParameter = SaldoKonti.HasValue ?
                new ObjectParameter("SaldoKonti", SaldoKonti) :
                new ObjectParameter("SaldoKonti", typeof(bool));
    
            var zapisDopustenoParameter = ZapisDopusteno.HasValue ?
                new ObjectParameter("ZapisDopusteno", ZapisDopusteno) :
                new ObjectParameter("ZapisDopusteno", typeof(bool));
    
            var zapisObaveznoParameter = ZapisObavezno.HasValue ?
                new ObjectParameter("ZapisObavezno", ZapisObavezno) :
                new ObjectParameter("ZapisObavezno", typeof(bool));
    
            var subjektDopustenoParameter = SubjektDopusteno.HasValue ?
                new ObjectParameter("SubjektDopusteno", SubjektDopusteno) :
                new ObjectParameter("SubjektDopusteno", typeof(bool));
    
            var subjektObaveznoParameter = SubjektObavezno.HasValue ?
                new ObjectParameter("SubjektObavezno", SubjektObavezno) :
                new ObjectParameter("SubjektObavezno", typeof(bool));
    
            var objektDopustenoParameter = ObjektDopusteno.HasValue ?
                new ObjectParameter("ObjektDopusteno", ObjektDopusteno) :
                new ObjectParameter("ObjektDopusteno", typeof(bool));
    
            var objektObaveznoParameter = ObjektObavezno.HasValue ?
                new ObjectParameter("ObjektObavezno", ObjektObavezno) :
                new ObjectParameter("ObjektObavezno", typeof(bool));
    
            var davanjeDopustenoParameter = DavanjeDopusteno.HasValue ?
                new ObjectParameter("DavanjeDopusteno", DavanjeDopusteno) :
                new ObjectParameter("DavanjeDopusteno", typeof(bool));
    
            var davanjeObaveznoParameter = DavanjeObavezno.HasValue ?
                new ObjectParameter("DavanjeObavezno", DavanjeObavezno) :
                new ObjectParameter("DavanjeObavezno", typeof(bool));
    
            var dugujeDopustenoParameter = DugujeDopusteno.HasValue ?
                new ObjectParameter("DugujeDopusteno", DugujeDopusteno) :
                new ObjectParameter("DugujeDopusteno", typeof(bool));
    
            var dugujeObaveznoParameter = DugujeObavezno.HasValue ?
                new ObjectParameter("DugujeObavezno", DugujeObavezno) :
                new ObjectParameter("DugujeObavezno", typeof(bool));
    
            var potrazujeDopustenoParameter = PotrazujeDopusteno.HasValue ?
                new ObjectParameter("PotrazujeDopusteno", PotrazujeDopusteno) :
                new ObjectParameter("PotrazujeDopusteno", typeof(bool));
    
            var potrazujeObaveznoParameter = PotrazujeObavezno.HasValue ?
                new ObjectParameter("PotrazujeObavezno", PotrazujeObavezno) :
                new ObjectParameter("PotrazujeObavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_UPDATE", iD_KontniPlanStParameter, iD_KontniPlanParameter, kontoParameter, nazivParameter, nazivKrParameter, kraticaParameter, saldoKontiParameter, zapisDopustenoParameter, zapisObaveznoParameter, subjektDopustenoParameter, subjektObaveznoParameter, objektDopustenoParameter, objektObaveznoParameter, davanjeDopustenoParameter, davanjeObaveznoParameter, dugujeDopustenoParameter, dugujeObaveznoParameter, potrazujeDopustenoParameter, potrazujeObaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanSt> USP_KontniPlanSt_UPDATE(long? ID_KontniPlanSt, long? ID_KontniPlan, string Konto, string Naziv, string NazivKr, string Kratica, bool? SaldoKonti, bool? ZapisDopusteno, bool? ZapisObavezno, bool? SubjektDopusteno, bool? SubjektObavezno, bool? ObjektDopusteno, bool? ObjektObavezno, bool? DavanjeDopusteno, bool? DavanjeObavezno, bool? DugujeDopusteno, bool? DugujeObavezno, bool? PotrazujeDopusteno, bool? PotrazujeObavezno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanSt).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var kontoParameter = Konto != null ?
                new ObjectParameter("Konto", Konto) :
                new ObjectParameter("Konto", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var saldoKontiParameter = SaldoKonti.HasValue ?
                new ObjectParameter("SaldoKonti", SaldoKonti) :
                new ObjectParameter("SaldoKonti", typeof(bool));
    
            var zapisDopustenoParameter = ZapisDopusteno.HasValue ?
                new ObjectParameter("ZapisDopusteno", ZapisDopusteno) :
                new ObjectParameter("ZapisDopusteno", typeof(bool));
    
            var zapisObaveznoParameter = ZapisObavezno.HasValue ?
                new ObjectParameter("ZapisObavezno", ZapisObavezno) :
                new ObjectParameter("ZapisObavezno", typeof(bool));
    
            var subjektDopustenoParameter = SubjektDopusteno.HasValue ?
                new ObjectParameter("SubjektDopusteno", SubjektDopusteno) :
                new ObjectParameter("SubjektDopusteno", typeof(bool));
    
            var subjektObaveznoParameter = SubjektObavezno.HasValue ?
                new ObjectParameter("SubjektObavezno", SubjektObavezno) :
                new ObjectParameter("SubjektObavezno", typeof(bool));
    
            var objektDopustenoParameter = ObjektDopusteno.HasValue ?
                new ObjectParameter("ObjektDopusteno", ObjektDopusteno) :
                new ObjectParameter("ObjektDopusteno", typeof(bool));
    
            var objektObaveznoParameter = ObjektObavezno.HasValue ?
                new ObjectParameter("ObjektObavezno", ObjektObavezno) :
                new ObjectParameter("ObjektObavezno", typeof(bool));
    
            var davanjeDopustenoParameter = DavanjeDopusteno.HasValue ?
                new ObjectParameter("DavanjeDopusteno", DavanjeDopusteno) :
                new ObjectParameter("DavanjeDopusteno", typeof(bool));
    
            var davanjeObaveznoParameter = DavanjeObavezno.HasValue ?
                new ObjectParameter("DavanjeObavezno", DavanjeObavezno) :
                new ObjectParameter("DavanjeObavezno", typeof(bool));
    
            var dugujeDopustenoParameter = DugujeDopusteno.HasValue ?
                new ObjectParameter("DugujeDopusteno", DugujeDopusteno) :
                new ObjectParameter("DugujeDopusteno", typeof(bool));
    
            var dugujeObaveznoParameter = DugujeObavezno.HasValue ?
                new ObjectParameter("DugujeObavezno", DugujeObavezno) :
                new ObjectParameter("DugujeObavezno", typeof(bool));
    
            var potrazujeDopustenoParameter = PotrazujeDopusteno.HasValue ?
                new ObjectParameter("PotrazujeDopusteno", PotrazujeDopusteno) :
                new ObjectParameter("PotrazujeDopusteno", typeof(bool));
    
            var potrazujeObaveznoParameter = PotrazujeObavezno.HasValue ?
                new ObjectParameter("PotrazujeObavezno", PotrazujeObavezno) :
                new ObjectParameter("PotrazujeObavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanSt>("USP_KontniPlanSt_UPDATE", mergeOption, iD_KontniPlanStParameter, iD_KontniPlanParameter, kontoParameter, nazivParameter, nazivKrParameter, kraticaParameter, saldoKontiParameter, zapisDopustenoParameter, zapisObaveznoParameter, subjektDopustenoParameter, subjektObaveznoParameter, objektDopustenoParameter, objektObaveznoParameter, davanjeDopustenoParameter, davanjeObaveznoParameter, dugujeDopustenoParameter, dugujeObaveznoParameter, potrazujeDopustenoParameter, potrazujeObaveznoParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanStKriterij_DELETE(long? ID_KontniPlanStKriterij)
        {
            var iD_KontniPlanStKriterijParameter = ID_KontniPlanStKriterij.HasValue ?
                new ObjectParameter("ID_KontniPlanStKriterij", ID_KontniPlanStKriterij) :
                new ObjectParameter("ID_KontniPlanStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanStKriterij_DELETE", iD_KontniPlanStKriterijParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_INSERT(long? ID_KontniPlanSt, long? ID_Kriterij, long? ID_KriterijSt, bool? Obavezno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var obaveznoParameter = Obavezno.HasValue ?
                new ObjectParameter("Obavezno", Obavezno) :
                new ObjectParameter("Obavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_INSERT", iD_KontniPlanStParameter, iD_KriterijParameter, iD_KriterijStParameter, obaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_INSERT(long? ID_KontniPlanSt, long? ID_Kriterij, long? ID_KriterijSt, bool? Obavezno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var obaveznoParameter = Obavezno.HasValue ?
                new ObjectParameter("Obavezno", Obavezno) :
                new ObjectParameter("Obavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_INSERT", mergeOption, iD_KontniPlanStParameter, iD_KriterijParameter, iD_KriterijStParameter, obaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_SELECT(long? ID_KontniPlanStKriterij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStKriterijParameter = ID_KontniPlanStKriterij.HasValue ?
                new ObjectParameter("ID_KontniPlanStKriterij", ID_KontniPlanStKriterij) :
                new ObjectParameter("ID_KontniPlanStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_SELECT", iD_KontniPlanStKriterijParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_SELECT(long? ID_KontniPlanStKriterij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStKriterijParameter = ID_KontniPlanStKriterij.HasValue ?
                new ObjectParameter("ID_KontniPlanStKriterij", ID_KontniPlanStKriterij) :
                new ObjectParameter("ID_KontniPlanStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_SELECT", mergeOption, iD_KontniPlanStKriterijParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_UPDATE(long? ID_KontniPlanStKriterij, long? ID_KontniPlanSt, long? ID_Kriterij, long? ID_KriterijSt, bool? Obavezno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStKriterijParameter = ID_KontniPlanStKriterij.HasValue ?
                new ObjectParameter("ID_KontniPlanStKriterij", ID_KontniPlanStKriterij) :
                new ObjectParameter("ID_KontniPlanStKriterij", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var obaveznoParameter = Obavezno.HasValue ?
                new ObjectParameter("Obavezno", Obavezno) :
                new ObjectParameter("Obavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_UPDATE", iD_KontniPlanStKriterijParameter, iD_KontniPlanStParameter, iD_KriterijParameter, iD_KriterijStParameter, obaveznoParameter);
        }
    
        public virtual ObjectResult<KontniPlanStKriterij> USP_KontniPlanStKriterij_UPDATE(long? ID_KontniPlanStKriterij, long? ID_KontniPlanSt, long? ID_Kriterij, long? ID_KriterijSt, bool? Obavezno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanStKriterij).Assembly);
    
            var iD_KontniPlanStKriterijParameter = ID_KontniPlanStKriterij.HasValue ?
                new ObjectParameter("ID_KontniPlanStKriterij", ID_KontniPlanStKriterij) :
                new ObjectParameter("ID_KontniPlanStKriterij", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var obaveznoParameter = Obavezno.HasValue ?
                new ObjectParameter("Obavezno", Obavezno) :
                new ObjectParameter("Obavezno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanStKriterij>("USP_KontniPlanStKriterij_UPDATE", mergeOption, iD_KontniPlanStKriterijParameter, iD_KontniPlanStParameter, iD_KriterijParameter, iD_KriterijStParameter, obaveznoParameter);
        }
    
        public virtual ObjectResult<int?> USP_KontniPlanTemeljnicaVr_DELETE(long? ID_KontniPlanTemeljnicaVr)
        {
            var iD_KontniPlanTemeljnicaVrParameter = ID_KontniPlanTemeljnicaVr.HasValue ?
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", ID_KontniPlanTemeljnicaVr) :
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KontniPlanTemeljnicaVr_DELETE", iD_KontniPlanTemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_INSERT(long? ID_KontniPlan, int? IDTemeljnicaVrVr, long? ID_TemeljnicaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_INSERT", iD_KontniPlanParameter, iDTemeljnicaVrVrParameter, iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_INSERT(long? ID_KontniPlan, int? IDTemeljnicaVrVr, long? ID_TemeljnicaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_INSERT", mergeOption, iD_KontniPlanParameter, iDTemeljnicaVrVrParameter, iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_SELECT(long? ID_KontniPlanTemeljnicaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanTemeljnicaVrParameter = ID_KontniPlanTemeljnicaVr.HasValue ?
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", ID_KontniPlanTemeljnicaVr) :
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_SELECT", iD_KontniPlanTemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_SELECT(long? ID_KontniPlanTemeljnicaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanTemeljnicaVrParameter = ID_KontniPlanTemeljnicaVr.HasValue ?
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", ID_KontniPlanTemeljnicaVr) :
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_SELECT", mergeOption, iD_KontniPlanTemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_UPDATE(long? ID_KontniPlanTemeljnicaVr, long? ID_KontniPlan, int? IDTemeljnicaVrVr, long? ID_TemeljnicaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanTemeljnicaVrParameter = ID_KontniPlanTemeljnicaVr.HasValue ?
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", ID_KontniPlanTemeljnicaVr) :
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_UPDATE", iD_KontniPlanTemeljnicaVrParameter, iD_KontniPlanParameter, iDTemeljnicaVrVrParameter, iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<KontniPlanTemeljnicaVr> USP_KontniPlanTemeljnicaVr_UPDATE(long? ID_KontniPlanTemeljnicaVr, long? ID_KontniPlan, int? IDTemeljnicaVrVr, long? ID_TemeljnicaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KontniPlanTemeljnicaVr).Assembly);
    
            var iD_KontniPlanTemeljnicaVrParameter = ID_KontniPlanTemeljnicaVr.HasValue ?
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", ID_KontniPlanTemeljnicaVr) :
                new ObjectParameter("ID_KontniPlanTemeljnicaVr", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontniPlanTemeljnicaVr>("USP_KontniPlanTemeljnicaVr_UPDATE", mergeOption, iD_KontniPlanTemeljnicaVrParameter, iD_KontniPlanParameter, iDTemeljnicaVrVrParameter, iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<int?> USP_Kriterij_DELETE(long? ID_Kriterij)
        {
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Kriterij_DELETE", iD_KriterijParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_INSERT(long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, int? RedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_INSERT", iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_INSERT(long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, int? RedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_INSERT", mergeOption, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_SELECT(long? ID_Kriterij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_SELECT", iD_KriterijParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_SELECT(long? ID_Kriterij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_SELECT", mergeOption, iD_KriterijParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_UPDATE(long? ID_Kriterij, long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, int? RedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_UPDATE", iD_KriterijParameter, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<Kriterij> USP_Kriterij_UPDATE(long? ID_Kriterij, long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, int? RedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kriterij).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kriterij>("USP_Kriterij_UPDATE", mergeOption, iD_KriterijParameter, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<int?> USP_KriterijSt_DELETE(long? ID_KriterijSt)
        {
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KriterijSt_DELETE", iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_INSERT(long? ID_Kriterij, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_INSERT", iD_KriterijParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_INSERT(long? ID_Kriterij, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_INSERT", mergeOption, iD_KriterijParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_SELECT(long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_SELECT", iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_SELECT(long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_SELECT", mergeOption, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_UPDATE(long? ID_KriterijSt, long? ID_Kriterij, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_UPDATE", iD_KriterijStParameter, iD_KriterijParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<KriterijSt> USP_KriterijSt_UPDATE(long? ID_KriterijSt, long? ID_Kriterij, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijSt).Assembly);
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijSt>("USP_KriterijSt_UPDATE", mergeOption, iD_KriterijStParameter, iD_KriterijParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_KriterijStKriterijSt_DELETE(long? ID_KriterijStKriterijSt)
        {
            var iD_KriterijStKriterijStParameter = ID_KriterijStKriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijStKriterijSt", ID_KriterijStKriterijSt) :
                new ObjectParameter("ID_KriterijStKriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_KriterijStKriterijSt_DELETE", iD_KriterijStKriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_INSERT(long? ID_Kriterij, long? ID_KriterijSt, long? ID_KriterijStNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijStNadParameter = ID_KriterijStNad.HasValue ?
                new ObjectParameter("ID_KriterijStNad", ID_KriterijStNad) :
                new ObjectParameter("ID_KriterijStNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_INSERT", iD_KriterijParameter, iD_KriterijStParameter, iD_KriterijStNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_INSERT(long? ID_Kriterij, long? ID_KriterijSt, long? ID_KriterijStNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijStNadParameter = ID_KriterijStNad.HasValue ?
                new ObjectParameter("ID_KriterijStNad", ID_KriterijStNad) :
                new ObjectParameter("ID_KriterijStNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_INSERT", mergeOption, iD_KriterijParameter, iD_KriterijStParameter, iD_KriterijStNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_SELECT(long? ID_KriterijStKriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijStKriterijStParameter = ID_KriterijStKriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijStKriterijSt", ID_KriterijStKriterijSt) :
                new ObjectParameter("ID_KriterijStKriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_SELECT", iD_KriterijStKriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_SELECT(long? ID_KriterijStKriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijStKriterijStParameter = ID_KriterijStKriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijStKriterijSt", ID_KriterijStKriterijSt) :
                new ObjectParameter("ID_KriterijStKriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_SELECT", mergeOption, iD_KriterijStKriterijStParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_UPDATE(long? ID_KriterijStKriterijSt, long? ID_Kriterij, long? ID_KriterijSt, long? ID_KriterijStNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijStKriterijStParameter = ID_KriterijStKriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijStKriterijSt", ID_KriterijStKriterijSt) :
                new ObjectParameter("ID_KriterijStKriterijSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijStNadParameter = ID_KriterijStNad.HasValue ?
                new ObjectParameter("ID_KriterijStNad", ID_KriterijStNad) :
                new ObjectParameter("ID_KriterijStNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_UPDATE", iD_KriterijStKriterijStParameter, iD_KriterijParameter, iD_KriterijStParameter, iD_KriterijStNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<KriterijStKriterijSt> USP_KriterijStKriterijSt_UPDATE(long? ID_KriterijStKriterijSt, long? ID_Kriterij, long? ID_KriterijSt, long? ID_KriterijStNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(KriterijStKriterijSt).Assembly);
    
            var iD_KriterijStKriterijStParameter = ID_KriterijStKriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijStKriterijSt", ID_KriterijStKriterijSt) :
                new ObjectParameter("ID_KriterijStKriterijSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            var iD_KriterijStNadParameter = ID_KriterijStNad.HasValue ?
                new ObjectParameter("ID_KriterijStNad", ID_KriterijStNad) :
                new ObjectParameter("ID_KriterijStNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KriterijStKriterijSt>("USP_KriterijStKriterijSt_UPDATE", mergeOption, iD_KriterijStKriterijStParameter, iD_KriterijParameter, iD_KriterijStParameter, iD_KriterijStNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<int?> USP_Kupac_DELETE(long? ID_Kupac)
        {
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Kupac_DELETE", iD_KupacParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_INSERT(string Oznaka, string Naziv, string JMBG, string Ulica, string KucniBroj, string KucniBrojDodatak, string PostanskiBroj, string OIB, string Posta, long? ID_Posta, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_INSERT", oznakaParameter, nazivParameter, jMBGParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, postanskiBrojParameter, oIBParameter, postaParameter, iD_PostaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_INSERT(string Oznaka, string Naziv, string JMBG, string Ulica, string KucniBroj, string KucniBrojDodatak, string PostanskiBroj, string OIB, string Posta, long? ID_Posta, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_INSERT", mergeOption, oznakaParameter, nazivParameter, jMBGParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, postanskiBrojParameter, oIBParameter, postaParameter, iD_PostaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_SELECT(long? ID_Kupac)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_SELECT", iD_KupacParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_SELECT(long? ID_Kupac, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_SELECT", mergeOption, iD_KupacParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_UPDATE(long? ID_Kupac, string Oznaka, string Naziv, string JMBG, string Ulica, string KucniBroj, string KucniBrojDodatak, string PostanskiBroj, string OIB, string Posta, long? ID_Posta, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_UPDATE", iD_KupacParameter, oznakaParameter, nazivParameter, jMBGParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, postanskiBrojParameter, oIBParameter, postaParameter, iD_PostaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Kupac> USP_Kupac_UPDATE(long? ID_Kupac, string Oznaka, string Naziv, string JMBG, string Ulica, string KucniBroj, string KucniBrojDodatak, string PostanskiBroj, string OIB, string Posta, long? ID_Posta, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Kupac).Assembly);
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupac>("USP_Kupac_UPDATE", mergeOption, iD_KupacParameter, oznakaParameter, nazivParameter, jMBGParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, postanskiBrojParameter, oIBParameter, postaParameter, iD_PostaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_Lokacija_DELETE(long? ID_Lokacija)
        {
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Lokacija_DELETE", iD_LokacijaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Mjesto, long? ID_Subjekt, long? ID_Nekretnina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_MjestoParameter, iD_SubjektParameter, iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Mjesto, long? ID_Subjekt, long? ID_Nekretnina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_MjestoParameter, iD_SubjektParameter, iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_SELECT(long? ID_Lokacija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_SELECT", iD_LokacijaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_SELECT(long? ID_Lokacija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_SELECT", mergeOption, iD_LokacijaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_UPDATE(long? ID_Lokacija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Mjesto, long? ID_Subjekt, long? ID_Nekretnina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_UPDATE", iD_LokacijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_MjestoParameter, iD_SubjektParameter, iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Lokacija> USP_Lokacija_UPDATE(long? ID_Lokacija, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Mjesto, long? ID_Subjekt, long? ID_Nekretnina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Lokacija).Assembly);
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lokacija>("USP_Lokacija_UPDATE", mergeOption, iD_LokacijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_MjestoParameter, iD_SubjektParameter, iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<int?> USP_LokacijaLokacija_DELETE(long? ID_LokacijaLokacija)
        {
            var iD_LokacijaLokacijaParameter = ID_LokacijaLokacija.HasValue ?
                new ObjectParameter("ID_LokacijaLokacija", ID_LokacijaLokacija) :
                new ObjectParameter("ID_LokacijaLokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_LokacijaLokacija_DELETE", iD_LokacijaLokacijaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_INSERT(long? ID_LokacijaLokacijaStruktura, long? ID_Lokacija, long? ID_LokacijaNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var iD_LokacijaNadParameter = ID_LokacijaNad.HasValue ?
                new ObjectParameter("ID_LokacijaNad", ID_LokacijaNad) :
                new ObjectParameter("ID_LokacijaNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_INSERT", iD_LokacijaLokacijaStrukturaParameter, iD_LokacijaParameter, iD_LokacijaNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_INSERT(long? ID_LokacijaLokacijaStruktura, long? ID_Lokacija, long? ID_LokacijaNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var iD_LokacijaNadParameter = ID_LokacijaNad.HasValue ?
                new ObjectParameter("ID_LokacijaNad", ID_LokacijaNad) :
                new ObjectParameter("ID_LokacijaNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_INSERT", mergeOption, iD_LokacijaLokacijaStrukturaParameter, iD_LokacijaParameter, iD_LokacijaNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_SELECT(long? ID_LokacijaLokacija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaParameter = ID_LokacijaLokacija.HasValue ?
                new ObjectParameter("ID_LokacijaLokacija", ID_LokacijaLokacija) :
                new ObjectParameter("ID_LokacijaLokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_SELECT", iD_LokacijaLokacijaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_SELECT(long? ID_LokacijaLokacija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaParameter = ID_LokacijaLokacija.HasValue ?
                new ObjectParameter("ID_LokacijaLokacija", ID_LokacijaLokacija) :
                new ObjectParameter("ID_LokacijaLokacija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_SELECT", mergeOption, iD_LokacijaLokacijaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_UPDATE(long? ID_LokacijaLokacija, long? ID_LokacijaLokacijaStruktura, long? ID_Lokacija, long? ID_LokacijaNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaParameter = ID_LokacijaLokacija.HasValue ?
                new ObjectParameter("ID_LokacijaLokacija", ID_LokacijaLokacija) :
                new ObjectParameter("ID_LokacijaLokacija", typeof(long));
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var iD_LokacijaNadParameter = ID_LokacijaNad.HasValue ?
                new ObjectParameter("ID_LokacijaNad", ID_LokacijaNad) :
                new ObjectParameter("ID_LokacijaNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_UPDATE", iD_LokacijaLokacijaParameter, iD_LokacijaLokacijaStrukturaParameter, iD_LokacijaParameter, iD_LokacijaNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacija> USP_LokacijaLokacija_UPDATE(long? ID_LokacijaLokacija, long? ID_LokacijaLokacijaStruktura, long? ID_Lokacija, long? ID_LokacijaNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacija).Assembly);
    
            var iD_LokacijaLokacijaParameter = ID_LokacijaLokacija.HasValue ?
                new ObjectParameter("ID_LokacijaLokacija", ID_LokacijaLokacija) :
                new ObjectParameter("ID_LokacijaLokacija", typeof(long));
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var iD_LokacijaParameter = ID_Lokacija.HasValue ?
                new ObjectParameter("ID_Lokacija", ID_Lokacija) :
                new ObjectParameter("ID_Lokacija", typeof(long));
    
            var iD_LokacijaNadParameter = ID_LokacijaNad.HasValue ?
                new ObjectParameter("ID_LokacijaNad", ID_LokacijaNad) :
                new ObjectParameter("ID_LokacijaNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacija>("USP_LokacijaLokacija_UPDATE", mergeOption, iD_LokacijaLokacijaParameter, iD_LokacijaLokacijaStrukturaParameter, iD_LokacijaParameter, iD_LokacijaNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<int?> USP_LokacijaLokacijaStruktura_DELETE(long? ID_LokacijaLokacijaStruktura)
        {
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_LokacijaLokacijaStruktura_DELETE", iD_LokacijaLokacijaStrukturaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_SELECT(long? ID_LokacijaLokacijaStruktura)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_SELECT", iD_LokacijaLokacijaStrukturaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_SELECT(long? ID_LokacijaLokacijaStruktura, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_SELECT", mergeOption, iD_LokacijaLokacijaStrukturaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_UPDATE(long? ID_LokacijaLokacijaStruktura, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_UPDATE", iD_LokacijaLokacijaStrukturaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<LokacijaLokacijaStruktura> USP_LokacijaLokacijaStruktura_UPDATE(long? ID_LokacijaLokacijaStruktura, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LokacijaLokacijaStruktura).Assembly);
    
            var iD_LokacijaLokacijaStrukturaParameter = ID_LokacijaLokacijaStruktura.HasValue ?
                new ObjectParameter("ID_LokacijaLokacijaStruktura", ID_LokacijaLokacijaStruktura) :
                new ObjectParameter("ID_LokacijaLokacijaStruktura", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LokacijaLokacijaStruktura>("USP_LokacijaLokacijaStruktura_UPDATE", mergeOption, iD_LokacijaLokacijaStrukturaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_MirovinskiStup_DELETE(int? IDMirovinskiStup)
        {
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MirovinskiStup_DELETE", iDMirovinskiStupParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_INSERT(int? IDMirovinskiStup, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_INSERT", iDMirovinskiStupParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_INSERT(int? IDMirovinskiStup, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_INSERT", mergeOption, iDMirovinskiStupParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_SELECT(int? IDMirovinskiStup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_SELECT", iDMirovinskiStupParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_SELECT(int? IDMirovinskiStup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_SELECT", mergeOption, iDMirovinskiStupParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_UPDATE(int? IDMirovinskiStup, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_UPDATE", iDMirovinskiStupParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MirovinskiStup> USP_MirovinskiStup_UPDATE(int? IDMirovinskiStup, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MirovinskiStup).Assembly);
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MirovinskiStup>("USP_MirovinskiStup_UPDATE", mergeOption, iDMirovinskiStupParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjernaJedinica_DELETE(long? ID_MjernaJedinica)
        {
            var iD_MjernaJedinicaParameter = ID_MjernaJedinica.HasValue ?
                new ObjectParameter("ID_MjernaJedinica", ID_MjernaJedinica) :
                new ObjectParameter("ID_MjernaJedinica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjernaJedinica_DELETE", iD_MjernaJedinicaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_SELECT(long? ID_MjernaJedinica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var iD_MjernaJedinicaParameter = ID_MjernaJedinica.HasValue ?
                new ObjectParameter("ID_MjernaJedinica", ID_MjernaJedinica) :
                new ObjectParameter("ID_MjernaJedinica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_SELECT", iD_MjernaJedinicaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_SELECT(long? ID_MjernaJedinica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var iD_MjernaJedinicaParameter = ID_MjernaJedinica.HasValue ?
                new ObjectParameter("ID_MjernaJedinica", ID_MjernaJedinica) :
                new ObjectParameter("ID_MjernaJedinica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_SELECT", mergeOption, iD_MjernaJedinicaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_UPDATE(long? ID_MjernaJedinica, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var iD_MjernaJedinicaParameter = ID_MjernaJedinica.HasValue ?
                new ObjectParameter("ID_MjernaJedinica", ID_MjernaJedinica) :
                new ObjectParameter("ID_MjernaJedinica", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_UPDATE", iD_MjernaJedinicaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<MjernaJedinica> USP_MjernaJedinica_UPDATE(long? ID_MjernaJedinica, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjernaJedinica).Assembly);
    
            var iD_MjernaJedinicaParameter = ID_MjernaJedinica.HasValue ?
                new ObjectParameter("ID_MjernaJedinica", ID_MjernaJedinica) :
                new ObjectParameter("ID_MjernaJedinica", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjernaJedinica>("USP_MjernaJedinica_UPDATE", mergeOption, iD_MjernaJedinicaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Mjesto_DELETE(long? ID_Mjesto)
        {
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Mjesto_DELETE", iD_MjestoParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivAlt, string NazivHPT, bool? StaroMjesto, bool? NeOK, bool? NePosta, string Opis, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, long? ID_MjestoTip, long? ID_Opcina, string IDDrzava, string Opcina, string Zupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var staroMjestoParameter = StaroMjesto.HasValue ?
                new ObjectParameter("StaroMjesto", StaroMjesto) :
                new ObjectParameter("StaroMjesto", typeof(bool));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var nePostaParameter = NePosta.HasValue ?
                new ObjectParameter("NePosta", NePosta) :
                new ObjectParameter("NePosta", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivAltParameter, nazivHPTParameter, staroMjestoParameter, neOKParameter, nePostaParameter, opisParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_MjestoTipParameter, iD_OpcinaParameter, iDDrzavaParameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivAlt, string NazivHPT, bool? StaroMjesto, bool? NeOK, bool? NePosta, string Opis, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, long? ID_MjestoTip, long? ID_Opcina, string IDDrzava, string Opcina, string Zupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var staroMjestoParameter = StaroMjesto.HasValue ?
                new ObjectParameter("StaroMjesto", StaroMjesto) :
                new ObjectParameter("StaroMjesto", typeof(bool));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var nePostaParameter = NePosta.HasValue ?
                new ObjectParameter("NePosta", NePosta) :
                new ObjectParameter("NePosta", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivAltParameter, nazivHPTParameter, staroMjestoParameter, neOKParameter, nePostaParameter, opisParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_MjestoTipParameter, iD_OpcinaParameter, iDDrzavaParameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_SELECT(long? ID_Mjesto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_SELECT", iD_MjestoParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_SELECT(long? ID_Mjesto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_SELECT", mergeOption, iD_MjestoParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_UPDATE(long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivAlt, string NazivHPT, bool? StaroMjesto, bool? NeOK, bool? NePosta, string Opis, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, long? ID_MjestoTip, long? ID_Opcina, string IDDrzava, string Opcina, string Zupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var staroMjestoParameter = StaroMjesto.HasValue ?
                new ObjectParameter("StaroMjesto", StaroMjesto) :
                new ObjectParameter("StaroMjesto", typeof(bool));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var nePostaParameter = NePosta.HasValue ?
                new ObjectParameter("NePosta", NePosta) :
                new ObjectParameter("NePosta", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_UPDATE", iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivAltParameter, nazivHPTParameter, staroMjestoParameter, neOKParameter, nePostaParameter, opisParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_MjestoTipParameter, iD_OpcinaParameter, iDDrzavaParameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<Mjesto> USP_Mjesto_UPDATE(long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string NazivAlt, string NazivHPT, bool? StaroMjesto, bool? NeOK, bool? NePosta, string Opis, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, long? ID_MjestoTip, long? ID_Opcina, string IDDrzava, string Opcina, string Zupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Mjesto).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var staroMjestoParameter = StaroMjesto.HasValue ?
                new ObjectParameter("StaroMjesto", StaroMjesto) :
                new ObjectParameter("StaroMjesto", typeof(bool));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var nePostaParameter = NePosta.HasValue ?
                new ObjectParameter("NePosta", NePosta) :
                new ObjectParameter("NePosta", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mjesto>("USP_Mjesto_UPDATE", mergeOption, iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, nazivAltParameter, nazivHPTParameter, staroMjestoParameter, neOKParameter, nePostaParameter, opisParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_MjestoTipParameter, iD_OpcinaParameter, iDDrzavaParameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoDioTip_DELETE(long? ID_MjestoDioTip)
        {
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoDioTip_DELETE", iD_MjestoDioTipParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_SELECT(long? ID_MjestoDioTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_SELECT", iD_MjestoDioTipParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_SELECT(long? ID_MjestoDioTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_SELECT", mergeOption, iD_MjestoDioTipParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_UPDATE(long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_UPDATE", iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDioTip> USP_MjestoDioTip_UPDATE(long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDioTip).Assembly);
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDioTip>("USP_MjestoDioTip_UPDATE", mergeOption, iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoDrzava_DELETE(long? ID_MjestoDrzava)
        {
            var iD_MjestoDrzavaParameter = ID_MjestoDrzava.HasValue ?
                new ObjectParameter("ID_MjestoDrzava", ID_MjestoDrzava) :
                new ObjectParameter("ID_MjestoDrzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoDrzava_DELETE", iD_MjestoDrzavaParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_INSERT(long? ID_Mjesto, string IDDrzava, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_INSERT", iD_MjestoParameter, iDDrzavaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_INSERT(long? ID_Mjesto, string IDDrzava, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_INSERT", mergeOption, iD_MjestoParameter, iDDrzavaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_SELECT(long? ID_MjestoDrzava)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoDrzavaParameter = ID_MjestoDrzava.HasValue ?
                new ObjectParameter("ID_MjestoDrzava", ID_MjestoDrzava) :
                new ObjectParameter("ID_MjestoDrzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_SELECT", iD_MjestoDrzavaParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_SELECT(long? ID_MjestoDrzava, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoDrzavaParameter = ID_MjestoDrzava.HasValue ?
                new ObjectParameter("ID_MjestoDrzava", ID_MjestoDrzava) :
                new ObjectParameter("ID_MjestoDrzava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_SELECT", mergeOption, iD_MjestoDrzavaParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_UPDATE(long? ID_MjestoDrzava, long? ID_Mjesto, string IDDrzava, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoDrzavaParameter = ID_MjestoDrzava.HasValue ?
                new ObjectParameter("ID_MjestoDrzava", ID_MjestoDrzava) :
                new ObjectParameter("ID_MjestoDrzava", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_UPDATE", iD_MjestoDrzavaParameter, iD_MjestoParameter, iDDrzavaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoDrzava> USP_MjestoDrzava_UPDATE(long? ID_MjestoDrzava, long? ID_Mjesto, string IDDrzava, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoDrzava).Assembly);
    
            var iD_MjestoDrzavaParameter = ID_MjestoDrzava.HasValue ?
                new ObjectParameter("ID_MjestoDrzava", ID_MjestoDrzava) :
                new ObjectParameter("ID_MjestoDrzava", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoDrzava>("USP_MjestoDrzava_UPDATE", mergeOption, iD_MjestoDrzavaParameter, iD_MjestoParameter, iDDrzavaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoGr_DELETE(long? ID_MjestoGr)
        {
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoGr_DELETE", iD_MjestoGrParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_INSERT(string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, long? ID_MjestoGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_INSERT", nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_INSERT(string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, long? ID_MjestoGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_INSERT", mergeOption, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_SELECT(long? ID_MjestoGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_SELECT", iD_MjestoGrParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_SELECT(long? ID_MjestoGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_SELECT", mergeOption, iD_MjestoGrParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_UPDATE(long? ID_MjestoGr, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, long? ID_MjestoGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_UPDATE", iD_MjestoGrParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGr> USP_MjestoGr_UPDATE(long? ID_MjestoGr, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, long? ID_MjestoGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGr).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGr>("USP_MjestoGr_UPDATE", mergeOption, iD_MjestoGrParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoGrMjesto_DELETE(long? ID_MjestoGrMjesto)
        {
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoGrMjesto_DELETE", iD_MjestoGrMjestoParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_INSERT(long? ID_MjestoGr, long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_INSERT", iD_MjestoGrParameter, iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_INSERT(long? ID_MjestoGr, long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_INSERT", mergeOption, iD_MjestoGrParameter, iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_SELECT(long? ID_MjestoGrMjesto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_SELECT", iD_MjestoGrMjestoParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_SELECT(long? ID_MjestoGrMjesto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_SELECT", mergeOption, iD_MjestoGrMjestoParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_UPDATE(long? ID_MjestoGrMjesto, long? ID_MjestoGr, long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_UPDATE", iD_MjestoGrMjestoParameter, iD_MjestoGrParameter, iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjesto> USP_MjestoGrMjesto_UPDATE(long? ID_MjestoGrMjesto, long? ID_MjestoGr, long? ID_Mjesto, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjesto).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var iD_MjestoGrParameter = ID_MjestoGr.HasValue ?
                new ObjectParameter("ID_MjestoGr", ID_MjestoGr) :
                new ObjectParameter("ID_MjestoGr", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjesto>("USP_MjestoGrMjesto_UPDATE", mergeOption, iD_MjestoGrMjestoParameter, iD_MjestoGrParameter, iD_MjestoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoGrMjestoDatum_DELETE(long? ID_MjestoGrMjestoDatum)
        {
            var iD_MjestoGrMjestoDatumParameter = ID_MjestoGrMjestoDatum.HasValue ?
                new ObjectParameter("ID_MjestoGrMjestoDatum", ID_MjestoGrMjestoDatum) :
                new ObjectParameter("ID_MjestoGrMjestoDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoGrMjestoDatum_DELETE", iD_MjestoGrMjestoDatumParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_INSERT(long? ID_MjestoGrMjesto, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_INSERT", iD_MjestoGrMjestoParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_INSERT(long? ID_MjestoGrMjesto, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_INSERT", mergeOption, iD_MjestoGrMjestoParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_SELECT(long? ID_MjestoGrMjestoDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoDatumParameter = ID_MjestoGrMjestoDatum.HasValue ?
                new ObjectParameter("ID_MjestoGrMjestoDatum", ID_MjestoGrMjestoDatum) :
                new ObjectParameter("ID_MjestoGrMjestoDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_SELECT", iD_MjestoGrMjestoDatumParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_SELECT(long? ID_MjestoGrMjestoDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoDatumParameter = ID_MjestoGrMjestoDatum.HasValue ?
                new ObjectParameter("ID_MjestoGrMjestoDatum", ID_MjestoGrMjestoDatum) :
                new ObjectParameter("ID_MjestoGrMjestoDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_SELECT", mergeOption, iD_MjestoGrMjestoDatumParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_UPDATE(long? ID_MjestoGrMjestoDatum, long? ID_MjestoGrMjesto, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoDatumParameter = ID_MjestoGrMjestoDatum.HasValue ?
                new ObjectParameter("ID_MjestoGrMjestoDatum", ID_MjestoGrMjestoDatum) :
                new ObjectParameter("ID_MjestoGrMjestoDatum", typeof(long));
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_UPDATE", iD_MjestoGrMjestoDatumParameter, iD_MjestoGrMjestoParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<MjestoGrMjestoDatum> USP_MjestoGrMjestoDatum_UPDATE(long? ID_MjestoGrMjestoDatum, long? ID_MjestoGrMjesto, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrMjestoDatum).Assembly);
    
            var iD_MjestoGrMjestoDatumParameter = ID_MjestoGrMjestoDatum.HasValue ?
                new ObjectParameter("ID_MjestoGrMjestoDatum", ID_MjestoGrMjestoDatum) :
                new ObjectParameter("ID_MjestoGrMjestoDatum", typeof(long));
    
            var iD_MjestoGrMjestoParameter = ID_MjestoGrMjesto.HasValue ?
                new ObjectParameter("ID_MjestoGrMjesto", ID_MjestoGrMjesto) :
                new ObjectParameter("ID_MjestoGrMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrMjestoDatum>("USP_MjestoGrMjestoDatum_UPDATE", mergeOption, iD_MjestoGrMjestoDatumParameter, iD_MjestoGrMjestoParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoGrTip_DELETE(long? ID_MjestoGrTip)
        {
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoGrTip_DELETE", iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoGrTipParameter = StsMjestoGrTip != null ?
                new ObjectParameter("StsMjestoGrTip", StsMjestoGrTip) :
                new ObjectParameter("StsMjestoGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoGrTipParameter = StsMjestoGrTip != null ?
                new ObjectParameter("StsMjestoGrTip", StsMjestoGrTip) :
                new ObjectParameter("StsMjestoGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_SELECT(long? ID_MjestoGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_SELECT", iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_SELECT(long? ID_MjestoGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_SELECT", mergeOption, iD_MjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_UPDATE(long? ID_MjestoGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoGrTipParameter = StsMjestoGrTip != null ?
                new ObjectParameter("StsMjestoGrTip", StsMjestoGrTip) :
                new ObjectParameter("StsMjestoGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_UPDATE", iD_MjestoGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoGrTipParameter);
        }
    
        public virtual ObjectResult<MjestoGrTip> USP_MjestoGrTip_UPDATE(long? ID_MjestoGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoGrTip).Assembly);
    
            var iD_MjestoGrTipParameter = ID_MjestoGrTip.HasValue ?
                new ObjectParameter("ID_MjestoGrTip", ID_MjestoGrTip) :
                new ObjectParameter("ID_MjestoGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoGrTipParameter = StsMjestoGrTip != null ?
                new ObjectParameter("StsMjestoGrTip", StsMjestoGrTip) :
                new ObjectParameter("StsMjestoGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoGrTip>("USP_MjestoGrTip_UPDATE", mergeOption, iD_MjestoGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoOpcina_DELETE(long? ID_MjestoOpcina)
        {
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoOpcina_DELETE", iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_INSERT(long? ID_Mjesto, long? ID_MjestoDio, DateTime? DatumOd, DateTime? DatumDo, bool? AktivU, long? ID_Opcina, long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivAlt, string NazivHPT, bool? NeOK, bool? VisePosta, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, string Opcina, string Zupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoDioParameter = ID_MjestoDio.HasValue ?
                new ObjectParameter("ID_MjestoDio", ID_MjestoDio) :
                new ObjectParameter("ID_MjestoDio", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var visePostaParameter = VisePosta.HasValue ?
                new ObjectParameter("VisePosta", VisePosta) :
                new ObjectParameter("VisePosta", typeof(bool));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_INSERT", iD_MjestoParameter, iD_MjestoDioParameter, datumOdParameter, datumDoParameter, aktivUParameter, iD_OpcinaParameter, iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivAltParameter, nazivHPTParameter, neOKParameter, visePostaParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_INSERT(long? ID_Mjesto, long? ID_MjestoDio, DateTime? DatumOd, DateTime? DatumDo, bool? AktivU, long? ID_Opcina, long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivAlt, string NazivHPT, bool? NeOK, bool? VisePosta, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, string Opcina, string Zupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoDioParameter = ID_MjestoDio.HasValue ?
                new ObjectParameter("ID_MjestoDio", ID_MjestoDio) :
                new ObjectParameter("ID_MjestoDio", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var visePostaParameter = VisePosta.HasValue ?
                new ObjectParameter("VisePosta", VisePosta) :
                new ObjectParameter("VisePosta", typeof(bool));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_INSERT", mergeOption, iD_MjestoParameter, iD_MjestoDioParameter, datumOdParameter, datumDoParameter, aktivUParameter, iD_OpcinaParameter, iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivAltParameter, nazivHPTParameter, neOKParameter, visePostaParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_SELECT(long? ID_MjestoOpcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_SELECT", iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_SELECT(long? ID_MjestoOpcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_SELECT", mergeOption, iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_UPDATE(long? ID_MjestoOpcina, long? ID_Mjesto, long? ID_MjestoDio, DateTime? DatumOd, DateTime? DatumDo, bool? AktivU, long? ID_Opcina, long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivAlt, string NazivHPT, bool? NeOK, bool? VisePosta, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, string Opcina, string Zupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoDioParameter = ID_MjestoDio.HasValue ?
                new ObjectParameter("ID_MjestoDio", ID_MjestoDio) :
                new ObjectParameter("ID_MjestoDio", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var visePostaParameter = VisePosta.HasValue ?
                new ObjectParameter("VisePosta", VisePosta) :
                new ObjectParameter("VisePosta", typeof(bool));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_UPDATE", iD_MjestoOpcinaParameter, iD_MjestoParameter, iD_MjestoDioParameter, datumOdParameter, datumDoParameter, aktivUParameter, iD_OpcinaParameter, iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivAltParameter, nazivHPTParameter, neOKParameter, visePostaParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<MjestoOpcina> USP_MjestoOpcina_UPDATE(long? ID_MjestoOpcina, long? ID_Mjesto, long? ID_MjestoDio, DateTime? DatumOd, DateTime? DatumDo, bool? AktivU, long? ID_Opcina, long? ID_MjestoDioTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivAlt, string NazivHPT, bool? NeOK, bool? VisePosta, string StsMjesto, bool? IzborMjesto, string MBr, string PathSlika, string PathPlan, string PathSlika2, string Opcina, string Zupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoOpcina).Assembly);
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoDioParameter = ID_MjestoDio.HasValue ?
                new ObjectParameter("ID_MjestoDio", ID_MjestoDio) :
                new ObjectParameter("ID_MjestoDio", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoDioTipParameter = ID_MjestoDioTip.HasValue ?
                new ObjectParameter("ID_MjestoDioTip", ID_MjestoDioTip) :
                new ObjectParameter("ID_MjestoDioTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var neOKParameter = NeOK.HasValue ?
                new ObjectParameter("NeOK", NeOK) :
                new ObjectParameter("NeOK", typeof(bool));
    
            var visePostaParameter = VisePosta.HasValue ?
                new ObjectParameter("VisePosta", VisePosta) :
                new ObjectParameter("VisePosta", typeof(bool));
    
            var stsMjestoParameter = StsMjesto != null ?
                new ObjectParameter("StsMjesto", StsMjesto) :
                new ObjectParameter("StsMjesto", typeof(string));
    
            var izborMjestoParameter = IzborMjesto.HasValue ?
                new ObjectParameter("IzborMjesto", IzborMjesto) :
                new ObjectParameter("IzborMjesto", typeof(bool));
    
            var mBrParameter = MBr != null ?
                new ObjectParameter("MBr", MBr) :
                new ObjectParameter("MBr", typeof(string));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var opcinaParameter = Opcina != null ?
                new ObjectParameter("Opcina", Opcina) :
                new ObjectParameter("Opcina", typeof(string));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoOpcina>("USP_MjestoOpcina_UPDATE", mergeOption, iD_MjestoOpcinaParameter, iD_MjestoParameter, iD_MjestoDioParameter, datumOdParameter, datumDoParameter, aktivUParameter, iD_OpcinaParameter, iD_MjestoDioTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivAltParameter, nazivHPTParameter, neOKParameter, visePostaParameter, stsMjestoParameter, izborMjestoParameter, mBrParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, opcinaParameter, zupanijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoPosta_DELETE(long? ID_MjestoPosta)
        {
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoPosta_DELETE", iD_MjestoPostaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_INSERT(long? ID_Mjesto, long? ID_Posta, bool? DioMjesta, string StsMjestoPosta, bool? IzborMjestoPosta, int? PBrStari, string Oznaka, string Naziv, string NazivAlt, string NazivHPT, string NazivKr, string Kratica, string Opis, string OpisHPT, bool? AdresaBezMjesta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var dioMjestaParameter = DioMjesta.HasValue ?
                new ObjectParameter("DioMjesta", DioMjesta) :
                new ObjectParameter("DioMjesta", typeof(bool));
    
            var stsMjestoPostaParameter = StsMjestoPosta != null ?
                new ObjectParameter("StsMjestoPosta", StsMjestoPosta) :
                new ObjectParameter("StsMjestoPosta", typeof(string));
    
            var izborMjestoPostaParameter = IzborMjestoPosta.HasValue ?
                new ObjectParameter("IzborMjestoPosta", IzborMjestoPosta) :
                new ObjectParameter("IzborMjestoPosta", typeof(bool));
    
            var pBrStariParameter = PBrStari.HasValue ?
                new ObjectParameter("PBrStari", PBrStari) :
                new ObjectParameter("PBrStari", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var opisHPTParameter = OpisHPT != null ?
                new ObjectParameter("OpisHPT", OpisHPT) :
                new ObjectParameter("OpisHPT", typeof(string));
    
            var adresaBezMjestaParameter = AdresaBezMjesta.HasValue ?
                new ObjectParameter("AdresaBezMjesta", AdresaBezMjesta) :
                new ObjectParameter("AdresaBezMjesta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_INSERT", iD_MjestoParameter, iD_PostaParameter, dioMjestaParameter, stsMjestoPostaParameter, izborMjestoPostaParameter, pBrStariParameter, oznakaParameter, nazivParameter, nazivAltParameter, nazivHPTParameter, nazivKrParameter, kraticaParameter, opisParameter, opisHPTParameter, adresaBezMjestaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_INSERT(long? ID_Mjesto, long? ID_Posta, bool? DioMjesta, string StsMjestoPosta, bool? IzborMjestoPosta, int? PBrStari, string Oznaka, string Naziv, string NazivAlt, string NazivHPT, string NazivKr, string Kratica, string Opis, string OpisHPT, bool? AdresaBezMjesta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var dioMjestaParameter = DioMjesta.HasValue ?
                new ObjectParameter("DioMjesta", DioMjesta) :
                new ObjectParameter("DioMjesta", typeof(bool));
    
            var stsMjestoPostaParameter = StsMjestoPosta != null ?
                new ObjectParameter("StsMjestoPosta", StsMjestoPosta) :
                new ObjectParameter("StsMjestoPosta", typeof(string));
    
            var izborMjestoPostaParameter = IzborMjestoPosta.HasValue ?
                new ObjectParameter("IzborMjestoPosta", IzborMjestoPosta) :
                new ObjectParameter("IzborMjestoPosta", typeof(bool));
    
            var pBrStariParameter = PBrStari.HasValue ?
                new ObjectParameter("PBrStari", PBrStari) :
                new ObjectParameter("PBrStari", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var opisHPTParameter = OpisHPT != null ?
                new ObjectParameter("OpisHPT", OpisHPT) :
                new ObjectParameter("OpisHPT", typeof(string));
    
            var adresaBezMjestaParameter = AdresaBezMjesta.HasValue ?
                new ObjectParameter("AdresaBezMjesta", AdresaBezMjesta) :
                new ObjectParameter("AdresaBezMjesta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_INSERT", mergeOption, iD_MjestoParameter, iD_PostaParameter, dioMjestaParameter, stsMjestoPostaParameter, izborMjestoPostaParameter, pBrStariParameter, oznakaParameter, nazivParameter, nazivAltParameter, nazivHPTParameter, nazivKrParameter, kraticaParameter, opisParameter, opisHPTParameter, adresaBezMjestaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_SELECT(long? ID_MjestoPosta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_SELECT", iD_MjestoPostaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_SELECT(long? ID_MjestoPosta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_SELECT", mergeOption, iD_MjestoPostaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_UPDATE(long? ID_MjestoPosta, long? ID_Mjesto, long? ID_Posta, bool? DioMjesta, string StsMjestoPosta, bool? IzborMjestoPosta, int? PBrStari, string Oznaka, string Naziv, string NazivAlt, string NazivHPT, string NazivKr, string Kratica, string Opis, string OpisHPT, bool? AdresaBezMjesta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var dioMjestaParameter = DioMjesta.HasValue ?
                new ObjectParameter("DioMjesta", DioMjesta) :
                new ObjectParameter("DioMjesta", typeof(bool));
    
            var stsMjestoPostaParameter = StsMjestoPosta != null ?
                new ObjectParameter("StsMjestoPosta", StsMjestoPosta) :
                new ObjectParameter("StsMjestoPosta", typeof(string));
    
            var izborMjestoPostaParameter = IzborMjestoPosta.HasValue ?
                new ObjectParameter("IzborMjestoPosta", IzborMjestoPosta) :
                new ObjectParameter("IzborMjestoPosta", typeof(bool));
    
            var pBrStariParameter = PBrStari.HasValue ?
                new ObjectParameter("PBrStari", PBrStari) :
                new ObjectParameter("PBrStari", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var opisHPTParameter = OpisHPT != null ?
                new ObjectParameter("OpisHPT", OpisHPT) :
                new ObjectParameter("OpisHPT", typeof(string));
    
            var adresaBezMjestaParameter = AdresaBezMjesta.HasValue ?
                new ObjectParameter("AdresaBezMjesta", AdresaBezMjesta) :
                new ObjectParameter("AdresaBezMjesta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_UPDATE", iD_MjestoPostaParameter, iD_MjestoParameter, iD_PostaParameter, dioMjestaParameter, stsMjestoPostaParameter, izborMjestoPostaParameter, pBrStariParameter, oznakaParameter, nazivParameter, nazivAltParameter, nazivHPTParameter, nazivKrParameter, kraticaParameter, opisParameter, opisHPTParameter, adresaBezMjestaParameter);
        }
    
        public virtual ObjectResult<MjestoPosta> USP_MjestoPosta_UPDATE(long? ID_MjestoPosta, long? ID_Mjesto, long? ID_Posta, bool? DioMjesta, string StsMjestoPosta, bool? IzborMjestoPosta, int? PBrStari, string Oznaka, string Naziv, string NazivAlt, string NazivHPT, string NazivKr, string Kratica, string Opis, string OpisHPT, bool? AdresaBezMjesta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoPosta).Assembly);
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var dioMjestaParameter = DioMjesta.HasValue ?
                new ObjectParameter("DioMjesta", DioMjesta) :
                new ObjectParameter("DioMjesta", typeof(bool));
    
            var stsMjestoPostaParameter = StsMjestoPosta != null ?
                new ObjectParameter("StsMjestoPosta", StsMjestoPosta) :
                new ObjectParameter("StsMjestoPosta", typeof(string));
    
            var izborMjestoPostaParameter = IzborMjestoPosta.HasValue ?
                new ObjectParameter("IzborMjestoPosta", IzborMjestoPosta) :
                new ObjectParameter("IzborMjestoPosta", typeof(bool));
    
            var pBrStariParameter = PBrStari.HasValue ?
                new ObjectParameter("PBrStari", PBrStari) :
                new ObjectParameter("PBrStari", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivAltParameter = NazivAlt != null ?
                new ObjectParameter("NazivAlt", NazivAlt) :
                new ObjectParameter("NazivAlt", typeof(string));
    
            var nazivHPTParameter = NazivHPT != null ?
                new ObjectParameter("NazivHPT", NazivHPT) :
                new ObjectParameter("NazivHPT", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var opisHPTParameter = OpisHPT != null ?
                new ObjectParameter("OpisHPT", OpisHPT) :
                new ObjectParameter("OpisHPT", typeof(string));
    
            var adresaBezMjestaParameter = AdresaBezMjesta.HasValue ?
                new ObjectParameter("AdresaBezMjesta", AdresaBezMjesta) :
                new ObjectParameter("AdresaBezMjesta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoPosta>("USP_MjestoPosta_UPDATE", mergeOption, iD_MjestoPostaParameter, iD_MjestoParameter, iD_PostaParameter, dioMjestaParameter, stsMjestoPostaParameter, izborMjestoPostaParameter, pBrStariParameter, oznakaParameter, nazivParameter, nazivAltParameter, nazivHPTParameter, nazivKrParameter, kraticaParameter, opisParameter, opisHPTParameter, adresaBezMjestaParameter);
        }
    
        public virtual ObjectResult<int?> USP_MjestoTip_DELETE(long? ID_MjestoTip)
        {
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_MjestoTip_DELETE", iD_MjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoTipParameter = StsMjestoTip != null ?
                new ObjectParameter("StsMjestoTip", StsMjestoTip) :
                new ObjectParameter("StsMjestoTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoTipParameter = StsMjestoTip != null ?
                new ObjectParameter("StsMjestoTip", StsMjestoTip) :
                new ObjectParameter("StsMjestoTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_SELECT(long? ID_MjestoTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_SELECT", iD_MjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_SELECT(long? ID_MjestoTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_SELECT", mergeOption, iD_MjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_UPDATE(long? ID_MjestoTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoTipParameter = StsMjestoTip != null ?
                new ObjectParameter("StsMjestoTip", StsMjestoTip) :
                new ObjectParameter("StsMjestoTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_UPDATE", iD_MjestoTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoTipParameter);
        }
    
        public virtual ObjectResult<MjestoTip> USP_MjestoTip_UPDATE(long? ID_MjestoTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsMjestoTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MjestoTip).Assembly);
    
            var iD_MjestoTipParameter = ID_MjestoTip.HasValue ?
                new ObjectParameter("ID_MjestoTip", ID_MjestoTip) :
                new ObjectParameter("ID_MjestoTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsMjestoTipParameter = StsMjestoTip != null ?
                new ObjectParameter("StsMjestoTip", StsMjestoTip) :
                new ObjectParameter("StsMjestoTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MjestoTip>("USP_MjestoTip_UPDATE", mergeOption, iD_MjestoTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsMjestoTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_Nalog_DELETE(long? ID_Nalog)
        {
            var iD_NalogParameter = ID_Nalog.HasValue ?
                new ObjectParameter("ID_Nalog", ID_Nalog) :
                new ObjectParameter("ID_Nalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Nalog_DELETE", iD_NalogParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_INSERT(long? ID_Zapis, int? GodinaNalog, int? BrojNalog, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? DatumPlacanje, decimal? Iznos, decimal? IznosValuta, decimal? IznosTecajnaRazlika, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosTecajnaRazlika2, string IDValuta, int? BrojObrok, int? BrojIzvod, int? BrojObveznica, int? DokumentGrupa, int? DokumentVrsta, long? ID_Subjekt, long? ID_Racun, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupAneks, int? GodinaObracun, string SlovimaIznos, string OsobaInsert, DateTime? DatumInsert, string OsobaUpdate, DateTime? DatumUpdate, int? GodinaRjesenje, int? BrojRjesenje, bool? Storno, DateTime? DatumRjesenje, string OpisPovrat, string SifraSubjekt, string SifraRacun, string VeznaOznaka, string Svrha, string PozivNaBrojZaduzenja, string PozivNaBrojOdobrenja, string Racun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var godinaNalogParameter = GodinaNalog.HasValue ?
                new ObjectParameter("GodinaNalog", GodinaNalog) :
                new ObjectParameter("GodinaNalog", typeof(int));
    
            var brojNalogParameter = BrojNalog.HasValue ?
                new ObjectParameter("BrojNalog", BrojNalog) :
                new ObjectParameter("BrojNalog", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumPlacanjeParameter = DatumPlacanje.HasValue ?
                new ObjectParameter("DatumPlacanje", DatumPlacanje) :
                new ObjectParameter("DatumPlacanje", typeof(System.DateTime));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosTecajnaRazlika2Parameter = IznosTecajnaRazlika2.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika2", IznosTecajnaRazlika2) :
                new ObjectParameter("IznosTecajnaRazlika2", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var godinaObracunParameter = GodinaObracun.HasValue ?
                new ObjectParameter("GodinaObracun", GodinaObracun) :
                new ObjectParameter("GodinaObracun", typeof(int));
    
            var slovimaIznosParameter = SlovimaIznos != null ?
                new ObjectParameter("SlovimaIznos", SlovimaIznos) :
                new ObjectParameter("SlovimaIznos", typeof(string));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var godinaRjesenjeParameter = GodinaRjesenje.HasValue ?
                new ObjectParameter("GodinaRjesenje", GodinaRjesenje) :
                new ObjectParameter("GodinaRjesenje", typeof(int));
    
            var brojRjesenjeParameter = BrojRjesenje.HasValue ?
                new ObjectParameter("BrojRjesenje", BrojRjesenje) :
                new ObjectParameter("BrojRjesenje", typeof(int));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var datumRjesenjeParameter = DatumRjesenje.HasValue ?
                new ObjectParameter("DatumRjesenje", DatumRjesenje) :
                new ObjectParameter("DatumRjesenje", typeof(System.DateTime));
    
            var opisPovratParameter = OpisPovrat != null ?
                new ObjectParameter("OpisPovrat", OpisPovrat) :
                new ObjectParameter("OpisPovrat", typeof(string));
    
            var sifraSubjektParameter = SifraSubjekt != null ?
                new ObjectParameter("SifraSubjekt", SifraSubjekt) :
                new ObjectParameter("SifraSubjekt", typeof(string));
    
            var sifraRacunParameter = SifraRacun != null ?
                new ObjectParameter("SifraRacun", SifraRacun) :
                new ObjectParameter("SifraRacun", typeof(string));
    
            var veznaOznakaParameter = VeznaOznaka != null ?
                new ObjectParameter("VeznaOznaka", VeznaOznaka) :
                new ObjectParameter("VeznaOznaka", typeof(string));
    
            var svrhaParameter = Svrha != null ?
                new ObjectParameter("Svrha", Svrha) :
                new ObjectParameter("Svrha", typeof(string));
    
            var pozivNaBrojZaduzenjaParameter = PozivNaBrojZaduzenja != null ?
                new ObjectParameter("PozivNaBrojZaduzenja", PozivNaBrojZaduzenja) :
                new ObjectParameter("PozivNaBrojZaduzenja", typeof(string));
    
            var pozivNaBrojOdobrenjaParameter = PozivNaBrojOdobrenja != null ?
                new ObjectParameter("PozivNaBrojOdobrenja", PozivNaBrojOdobrenja) :
                new ObjectParameter("PozivNaBrojOdobrenja", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_INSERT", iD_ZapisParameter, godinaNalogParameter, brojNalogParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumPlacanjeParameter, iznosParameter, iznosValutaParameter, iznosTecajnaRazlikaParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosTecajnaRazlika2Parameter, iDValutaParameter, brojObrokParameter, brojIzvodParameter, brojObveznicaParameter, dokumentGrupaParameter, dokumentVrstaParameter, iD_SubjektParameter, iD_RacunParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupAneksParameter, godinaObracunParameter, slovimaIznosParameter, osobaInsertParameter, datumInsertParameter, osobaUpdateParameter, datumUpdateParameter, godinaRjesenjeParameter, brojRjesenjeParameter, stornoParameter, datumRjesenjeParameter, opisPovratParameter, sifraSubjektParameter, sifraRacunParameter, veznaOznakaParameter, svrhaParameter, pozivNaBrojZaduzenjaParameter, pozivNaBrojOdobrenjaParameter, racunParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_INSERT(long? ID_Zapis, int? GodinaNalog, int? BrojNalog, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? DatumPlacanje, decimal? Iznos, decimal? IznosValuta, decimal? IznosTecajnaRazlika, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosTecajnaRazlika2, string IDValuta, int? BrojObrok, int? BrojIzvod, int? BrojObveznica, int? DokumentGrupa, int? DokumentVrsta, long? ID_Subjekt, long? ID_Racun, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupAneks, int? GodinaObracun, string SlovimaIznos, string OsobaInsert, DateTime? DatumInsert, string OsobaUpdate, DateTime? DatumUpdate, int? GodinaRjesenje, int? BrojRjesenje, bool? Storno, DateTime? DatumRjesenje, string OpisPovrat, string SifraSubjekt, string SifraRacun, string VeznaOznaka, string Svrha, string PozivNaBrojZaduzenja, string PozivNaBrojOdobrenja, string Racun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var godinaNalogParameter = GodinaNalog.HasValue ?
                new ObjectParameter("GodinaNalog", GodinaNalog) :
                new ObjectParameter("GodinaNalog", typeof(int));
    
            var brojNalogParameter = BrojNalog.HasValue ?
                new ObjectParameter("BrojNalog", BrojNalog) :
                new ObjectParameter("BrojNalog", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumPlacanjeParameter = DatumPlacanje.HasValue ?
                new ObjectParameter("DatumPlacanje", DatumPlacanje) :
                new ObjectParameter("DatumPlacanje", typeof(System.DateTime));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosTecajnaRazlika2Parameter = IznosTecajnaRazlika2.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika2", IznosTecajnaRazlika2) :
                new ObjectParameter("IznosTecajnaRazlika2", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var godinaObracunParameter = GodinaObracun.HasValue ?
                new ObjectParameter("GodinaObracun", GodinaObracun) :
                new ObjectParameter("GodinaObracun", typeof(int));
    
            var slovimaIznosParameter = SlovimaIznos != null ?
                new ObjectParameter("SlovimaIznos", SlovimaIznos) :
                new ObjectParameter("SlovimaIznos", typeof(string));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var godinaRjesenjeParameter = GodinaRjesenje.HasValue ?
                new ObjectParameter("GodinaRjesenje", GodinaRjesenje) :
                new ObjectParameter("GodinaRjesenje", typeof(int));
    
            var brojRjesenjeParameter = BrojRjesenje.HasValue ?
                new ObjectParameter("BrojRjesenje", BrojRjesenje) :
                new ObjectParameter("BrojRjesenje", typeof(int));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var datumRjesenjeParameter = DatumRjesenje.HasValue ?
                new ObjectParameter("DatumRjesenje", DatumRjesenje) :
                new ObjectParameter("DatumRjesenje", typeof(System.DateTime));
    
            var opisPovratParameter = OpisPovrat != null ?
                new ObjectParameter("OpisPovrat", OpisPovrat) :
                new ObjectParameter("OpisPovrat", typeof(string));
    
            var sifraSubjektParameter = SifraSubjekt != null ?
                new ObjectParameter("SifraSubjekt", SifraSubjekt) :
                new ObjectParameter("SifraSubjekt", typeof(string));
    
            var sifraRacunParameter = SifraRacun != null ?
                new ObjectParameter("SifraRacun", SifraRacun) :
                new ObjectParameter("SifraRacun", typeof(string));
    
            var veznaOznakaParameter = VeznaOznaka != null ?
                new ObjectParameter("VeznaOznaka", VeznaOznaka) :
                new ObjectParameter("VeznaOznaka", typeof(string));
    
            var svrhaParameter = Svrha != null ?
                new ObjectParameter("Svrha", Svrha) :
                new ObjectParameter("Svrha", typeof(string));
    
            var pozivNaBrojZaduzenjaParameter = PozivNaBrojZaduzenja != null ?
                new ObjectParameter("PozivNaBrojZaduzenja", PozivNaBrojZaduzenja) :
                new ObjectParameter("PozivNaBrojZaduzenja", typeof(string));
    
            var pozivNaBrojOdobrenjaParameter = PozivNaBrojOdobrenja != null ?
                new ObjectParameter("PozivNaBrojOdobrenja", PozivNaBrojOdobrenja) :
                new ObjectParameter("PozivNaBrojOdobrenja", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_INSERT", mergeOption, iD_ZapisParameter, godinaNalogParameter, brojNalogParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumPlacanjeParameter, iznosParameter, iznosValutaParameter, iznosTecajnaRazlikaParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosTecajnaRazlika2Parameter, iDValutaParameter, brojObrokParameter, brojIzvodParameter, brojObveznicaParameter, dokumentGrupaParameter, dokumentVrstaParameter, iD_SubjektParameter, iD_RacunParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupAneksParameter, godinaObracunParameter, slovimaIznosParameter, osobaInsertParameter, datumInsertParameter, osobaUpdateParameter, datumUpdateParameter, godinaRjesenjeParameter, brojRjesenjeParameter, stornoParameter, datumRjesenjeParameter, opisPovratParameter, sifraSubjektParameter, sifraRacunParameter, veznaOznakaParameter, svrhaParameter, pozivNaBrojZaduzenjaParameter, pozivNaBrojOdobrenjaParameter, racunParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_SELECT(long? ID_Nalog)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_NalogParameter = ID_Nalog.HasValue ?
                new ObjectParameter("ID_Nalog", ID_Nalog) :
                new ObjectParameter("ID_Nalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_SELECT", iD_NalogParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_SELECT(long? ID_Nalog, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_NalogParameter = ID_Nalog.HasValue ?
                new ObjectParameter("ID_Nalog", ID_Nalog) :
                new ObjectParameter("ID_Nalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_SELECT", mergeOption, iD_NalogParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_UPDATE(long? ID_Nalog, long? ID_Zapis, int? GodinaNalog, int? BrojNalog, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? DatumPlacanje, decimal? Iznos, decimal? IznosValuta, decimal? IznosTecajnaRazlika, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosTecajnaRazlika2, string IDValuta, int? BrojObrok, int? BrojIzvod, int? BrojObveznica, int? DokumentGrupa, int? DokumentVrsta, long? ID_Subjekt, long? ID_Racun, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupAneks, int? GodinaObracun, string SlovimaIznos, string OsobaInsert, DateTime? DatumInsert, string OsobaUpdate, DateTime? DatumUpdate, int? GodinaRjesenje, int? BrojRjesenje, bool? Storno, DateTime? DatumRjesenje, string OpisPovrat, string SifraSubjekt, string SifraRacun, string VeznaOznaka, string Svrha, string PozivNaBrojZaduzenja, string PozivNaBrojOdobrenja, string Racun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_NalogParameter = ID_Nalog.HasValue ?
                new ObjectParameter("ID_Nalog", ID_Nalog) :
                new ObjectParameter("ID_Nalog", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var godinaNalogParameter = GodinaNalog.HasValue ?
                new ObjectParameter("GodinaNalog", GodinaNalog) :
                new ObjectParameter("GodinaNalog", typeof(int));
    
            var brojNalogParameter = BrojNalog.HasValue ?
                new ObjectParameter("BrojNalog", BrojNalog) :
                new ObjectParameter("BrojNalog", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumPlacanjeParameter = DatumPlacanje.HasValue ?
                new ObjectParameter("DatumPlacanje", DatumPlacanje) :
                new ObjectParameter("DatumPlacanje", typeof(System.DateTime));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosTecajnaRazlika2Parameter = IznosTecajnaRazlika2.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika2", IznosTecajnaRazlika2) :
                new ObjectParameter("IznosTecajnaRazlika2", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var godinaObracunParameter = GodinaObracun.HasValue ?
                new ObjectParameter("GodinaObracun", GodinaObracun) :
                new ObjectParameter("GodinaObracun", typeof(int));
    
            var slovimaIznosParameter = SlovimaIznos != null ?
                new ObjectParameter("SlovimaIznos", SlovimaIznos) :
                new ObjectParameter("SlovimaIznos", typeof(string));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var godinaRjesenjeParameter = GodinaRjesenje.HasValue ?
                new ObjectParameter("GodinaRjesenje", GodinaRjesenje) :
                new ObjectParameter("GodinaRjesenje", typeof(int));
    
            var brojRjesenjeParameter = BrojRjesenje.HasValue ?
                new ObjectParameter("BrojRjesenje", BrojRjesenje) :
                new ObjectParameter("BrojRjesenje", typeof(int));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var datumRjesenjeParameter = DatumRjesenje.HasValue ?
                new ObjectParameter("DatumRjesenje", DatumRjesenje) :
                new ObjectParameter("DatumRjesenje", typeof(System.DateTime));
    
            var opisPovratParameter = OpisPovrat != null ?
                new ObjectParameter("OpisPovrat", OpisPovrat) :
                new ObjectParameter("OpisPovrat", typeof(string));
    
            var sifraSubjektParameter = SifraSubjekt != null ?
                new ObjectParameter("SifraSubjekt", SifraSubjekt) :
                new ObjectParameter("SifraSubjekt", typeof(string));
    
            var sifraRacunParameter = SifraRacun != null ?
                new ObjectParameter("SifraRacun", SifraRacun) :
                new ObjectParameter("SifraRacun", typeof(string));
    
            var veznaOznakaParameter = VeznaOznaka != null ?
                new ObjectParameter("VeznaOznaka", VeznaOznaka) :
                new ObjectParameter("VeznaOznaka", typeof(string));
    
            var svrhaParameter = Svrha != null ?
                new ObjectParameter("Svrha", Svrha) :
                new ObjectParameter("Svrha", typeof(string));
    
            var pozivNaBrojZaduzenjaParameter = PozivNaBrojZaduzenja != null ?
                new ObjectParameter("PozivNaBrojZaduzenja", PozivNaBrojZaduzenja) :
                new ObjectParameter("PozivNaBrojZaduzenja", typeof(string));
    
            var pozivNaBrojOdobrenjaParameter = PozivNaBrojOdobrenja != null ?
                new ObjectParameter("PozivNaBrojOdobrenja", PozivNaBrojOdobrenja) :
                new ObjectParameter("PozivNaBrojOdobrenja", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_UPDATE", iD_NalogParameter, iD_ZapisParameter, godinaNalogParameter, brojNalogParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumPlacanjeParameter, iznosParameter, iznosValutaParameter, iznosTecajnaRazlikaParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosTecajnaRazlika2Parameter, iDValutaParameter, brojObrokParameter, brojIzvodParameter, brojObveznicaParameter, dokumentGrupaParameter, dokumentVrstaParameter, iD_SubjektParameter, iD_RacunParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupAneksParameter, godinaObracunParameter, slovimaIznosParameter, osobaInsertParameter, datumInsertParameter, osobaUpdateParameter, datumUpdateParameter, godinaRjesenjeParameter, brojRjesenjeParameter, stornoParameter, datumRjesenjeParameter, opisPovratParameter, sifraSubjektParameter, sifraRacunParameter, veznaOznakaParameter, svrhaParameter, pozivNaBrojZaduzenjaParameter, pozivNaBrojOdobrenjaParameter, racunParameter);
        }
    
        public virtual ObjectResult<Nalog> USP_Nalog_UPDATE(long? ID_Nalog, long? ID_Zapis, int? GodinaNalog, int? BrojNalog, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? DatumPlacanje, decimal? Iznos, decimal? IznosValuta, decimal? IznosTecajnaRazlika, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosTecajnaRazlika2, string IDValuta, int? BrojObrok, int? BrojIzvod, int? BrojObveznica, int? DokumentGrupa, int? DokumentVrsta, long? ID_Subjekt, long? ID_Racun, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupAneks, int? GodinaObracun, string SlovimaIznos, string OsobaInsert, DateTime? DatumInsert, string OsobaUpdate, DateTime? DatumUpdate, int? GodinaRjesenje, int? BrojRjesenje, bool? Storno, DateTime? DatumRjesenje, string OpisPovrat, string SifraSubjekt, string SifraRacun, string VeznaOznaka, string Svrha, string PozivNaBrojZaduzenja, string PozivNaBrojOdobrenja, string Racun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nalog).Assembly);
    
            var iD_NalogParameter = ID_Nalog.HasValue ?
                new ObjectParameter("ID_Nalog", ID_Nalog) :
                new ObjectParameter("ID_Nalog", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var godinaNalogParameter = GodinaNalog.HasValue ?
                new ObjectParameter("GodinaNalog", GodinaNalog) :
                new ObjectParameter("GodinaNalog", typeof(int));
    
            var brojNalogParameter = BrojNalog.HasValue ?
                new ObjectParameter("BrojNalog", BrojNalog) :
                new ObjectParameter("BrojNalog", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumPlacanjeParameter = DatumPlacanje.HasValue ?
                new ObjectParameter("DatumPlacanje", DatumPlacanje) :
                new ObjectParameter("DatumPlacanje", typeof(System.DateTime));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosTecajnaRazlika2Parameter = IznosTecajnaRazlika2.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika2", IznosTecajnaRazlika2) :
                new ObjectParameter("IznosTecajnaRazlika2", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var godinaObracunParameter = GodinaObracun.HasValue ?
                new ObjectParameter("GodinaObracun", GodinaObracun) :
                new ObjectParameter("GodinaObracun", typeof(int));
    
            var slovimaIznosParameter = SlovimaIznos != null ?
                new ObjectParameter("SlovimaIznos", SlovimaIznos) :
                new ObjectParameter("SlovimaIznos", typeof(string));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var godinaRjesenjeParameter = GodinaRjesenje.HasValue ?
                new ObjectParameter("GodinaRjesenje", GodinaRjesenje) :
                new ObjectParameter("GodinaRjesenje", typeof(int));
    
            var brojRjesenjeParameter = BrojRjesenje.HasValue ?
                new ObjectParameter("BrojRjesenje", BrojRjesenje) :
                new ObjectParameter("BrojRjesenje", typeof(int));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var datumRjesenjeParameter = DatumRjesenje.HasValue ?
                new ObjectParameter("DatumRjesenje", DatumRjesenje) :
                new ObjectParameter("DatumRjesenje", typeof(System.DateTime));
    
            var opisPovratParameter = OpisPovrat != null ?
                new ObjectParameter("OpisPovrat", OpisPovrat) :
                new ObjectParameter("OpisPovrat", typeof(string));
    
            var sifraSubjektParameter = SifraSubjekt != null ?
                new ObjectParameter("SifraSubjekt", SifraSubjekt) :
                new ObjectParameter("SifraSubjekt", typeof(string));
    
            var sifraRacunParameter = SifraRacun != null ?
                new ObjectParameter("SifraRacun", SifraRacun) :
                new ObjectParameter("SifraRacun", typeof(string));
    
            var veznaOznakaParameter = VeznaOznaka != null ?
                new ObjectParameter("VeznaOznaka", VeznaOznaka) :
                new ObjectParameter("VeznaOznaka", typeof(string));
    
            var svrhaParameter = Svrha != null ?
                new ObjectParameter("Svrha", Svrha) :
                new ObjectParameter("Svrha", typeof(string));
    
            var pozivNaBrojZaduzenjaParameter = PozivNaBrojZaduzenja != null ?
                new ObjectParameter("PozivNaBrojZaduzenja", PozivNaBrojZaduzenja) :
                new ObjectParameter("PozivNaBrojZaduzenja", typeof(string));
    
            var pozivNaBrojOdobrenjaParameter = PozivNaBrojOdobrenja != null ?
                new ObjectParameter("PozivNaBrojOdobrenja", PozivNaBrojOdobrenja) :
                new ObjectParameter("PozivNaBrojOdobrenja", typeof(string));
    
            var racunParameter = Racun != null ?
                new ObjectParameter("Racun", Racun) :
                new ObjectParameter("Racun", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nalog>("USP_Nalog_UPDATE", mergeOption, iD_NalogParameter, iD_ZapisParameter, godinaNalogParameter, brojNalogParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumPlacanjeParameter, iznosParameter, iznosValutaParameter, iznosTecajnaRazlikaParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosTecajnaRazlika2Parameter, iDValutaParameter, brojObrokParameter, brojIzvodParameter, brojObveznicaParameter, dokumentGrupaParameter, dokumentVrstaParameter, iD_SubjektParameter, iD_RacunParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupAneksParameter, godinaObracunParameter, slovimaIznosParameter, osobaInsertParameter, datumInsertParameter, osobaUpdateParameter, datumUpdateParameter, godinaRjesenjeParameter, brojRjesenjeParameter, stornoParameter, datumRjesenjeParameter, opisPovratParameter, sifraSubjektParameter, sifraRacunParameter, veznaOznakaParameter, svrhaParameter, pozivNaBrojZaduzenjaParameter, pozivNaBrojOdobrenjaParameter, racunParameter);
        }
    
        public virtual ObjectResult<int?> USP_Narodnost_DELETE(long? ID_Narodnost)
        {
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Narodnost_DELETE", iD_NarodnostParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_SELECT(long? ID_Narodnost)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_SELECT", iD_NarodnostParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_SELECT(long? ID_Narodnost, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_SELECT", mergeOption, iD_NarodnostParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_UPDATE(long? ID_Narodnost, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_UPDATE", iD_NarodnostParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Narodnost> USP_Narodnost_UPDATE(long? ID_Narodnost, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Narodnost).Assembly);
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narodnost>("USP_Narodnost_UPDATE", mergeOption, iD_NarodnostParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Nekretnina_DELETE(long? ID_Nekretnina)
        {
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Nekretnina_DELETE", iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_SELECT(long? ID_Nekretnina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_SELECT", iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_SELECT(long? ID_Nekretnina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_SELECT", mergeOption, iD_NekretninaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_UPDATE(long? ID_Nekretnina, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_UPDATE", iD_NekretninaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Nekretnina> USP_Nekretnina_UPDATE(long? ID_Nekretnina, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Nekretnina).Assembly);
    
            var iD_NekretninaParameter = ID_Nekretnina.HasValue ?
                new ObjectParameter("ID_Nekretnina", ID_Nekretnina) :
                new ObjectParameter("ID_Nekretnina", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnina>("USP_Nekretnina_UPDATE", mergeOption, iD_NekretninaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Objekt_DELETE(long? ID_Objekt)
        {
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Objekt_DELETE", iD_ObjektParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_INSERT(int? IDObjektTablica, long? IDObjekt, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var iDObjektParameter = IDObjekt.HasValue ?
                new ObjectParameter("IDObjekt", IDObjekt) :
                new ObjectParameter("IDObjekt", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_INSERT", iDObjektTablicaParameter, iDObjektParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_INSERT(int? IDObjektTablica, long? IDObjekt, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var iDObjektParameter = IDObjekt.HasValue ?
                new ObjectParameter("IDObjekt", IDObjekt) :
                new ObjectParameter("IDObjekt", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_INSERT", mergeOption, iDObjektTablicaParameter, iDObjektParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_SELECT(long? ID_Objekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_SELECT", iD_ObjektParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_SELECT(long? ID_Objekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_SELECT", mergeOption, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_UPDATE(long? ID_Objekt, int? IDObjektTablica, long? IDObjekt, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var iDObjektParameter = IDObjekt.HasValue ?
                new ObjectParameter("IDObjekt", IDObjekt) :
                new ObjectParameter("IDObjekt", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_UPDATE", iD_ObjektParameter, iDObjektTablicaParameter, iDObjektParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Objekt> USP_Objekt_UPDATE(long? ID_Objekt, int? IDObjektTablica, long? IDObjekt, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Objekt).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var iDObjektParameter = IDObjekt.HasValue ?
                new ObjectParameter("IDObjekt", IDObjekt) :
                new ObjectParameter("IDObjekt", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Objekt>("USP_Objekt_UPDATE", mergeOption, iD_ObjektParameter, iDObjektTablicaParameter, iDObjektParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektGr_DELETE(long? ID_ObjektGr)
        {
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektGr_DELETE", iD_ObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_SELECT(long? ID_ObjektGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_SELECT", iD_ObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_SELECT(long? ID_ObjektGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_SELECT", mergeOption, iD_ObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_UPDATE(long? ID_ObjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_UPDATE", iD_ObjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektGr> USP_ObjektGr_UPDATE(long? ID_ObjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGr>("USP_ObjektGr_UPDATE", mergeOption, iD_ObjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektGrObjekt_DELETE(long? ID_ObjektGrObjekt)
        {
            var iD_ObjektGrObjektParameter = ID_ObjektGrObjekt.HasValue ?
                new ObjectParameter("ID_ObjektGrObjekt", ID_ObjektGrObjekt) :
                new ObjectParameter("ID_ObjektGrObjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektGrObjekt_DELETE", iD_ObjektGrObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_INSERT(long? ID_ObjektGr, long? ID_Objekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_INSERT", iD_ObjektGrParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_INSERT(long? ID_ObjektGr, long? ID_Objekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_INSERT", mergeOption, iD_ObjektGrParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_SELECT(long? ID_ObjektGrObjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrObjektParameter = ID_ObjektGrObjekt.HasValue ?
                new ObjectParameter("ID_ObjektGrObjekt", ID_ObjektGrObjekt) :
                new ObjectParameter("ID_ObjektGrObjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_SELECT", iD_ObjektGrObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_SELECT(long? ID_ObjektGrObjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrObjektParameter = ID_ObjektGrObjekt.HasValue ?
                new ObjectParameter("ID_ObjektGrObjekt", ID_ObjektGrObjekt) :
                new ObjectParameter("ID_ObjektGrObjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_SELECT", mergeOption, iD_ObjektGrObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_UPDATE(long? ID_ObjektGrObjekt, long? ID_ObjektGr, long? ID_Objekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrObjektParameter = ID_ObjektGrObjekt.HasValue ?
                new ObjectParameter("ID_ObjektGrObjekt", ID_ObjektGrObjekt) :
                new ObjectParameter("ID_ObjektGrObjekt", typeof(long));
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_UPDATE", iD_ObjektGrObjektParameter, iD_ObjektGrParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjekt> USP_ObjektGrObjekt_UPDATE(long? ID_ObjektGrObjekt, long? ID_ObjektGr, long? ID_Objekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjekt).Assembly);
    
            var iD_ObjektGrObjektParameter = ID_ObjektGrObjekt.HasValue ?
                new ObjectParameter("ID_ObjektGrObjekt", ID_ObjektGrObjekt) :
                new ObjectParameter("ID_ObjektGrObjekt", typeof(long));
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjekt>("USP_ObjektGrObjekt_UPDATE", mergeOption, iD_ObjektGrObjektParameter, iD_ObjektGrParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektGrObjektGr_DELETE(long? ID_ObjektGrObjektGr)
        {
            var iD_ObjektGrObjektGrParameter = ID_ObjektGrObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGrObjektGr", ID_ObjektGrObjektGr) :
                new ObjectParameter("ID_ObjektGrObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektGrObjektGr_DELETE", iD_ObjektGrObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_INSERT(long? ID_ObjektGr, long? ID_ObjektGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektGrNadParameter = ID_ObjektGrNad.HasValue ?
                new ObjectParameter("ID_ObjektGrNad", ID_ObjektGrNad) :
                new ObjectParameter("ID_ObjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_INSERT", iD_ObjektGrParameter, iD_ObjektGrNadParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_INSERT(long? ID_ObjektGr, long? ID_ObjektGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektGrNadParameter = ID_ObjektGrNad.HasValue ?
                new ObjectParameter("ID_ObjektGrNad", ID_ObjektGrNad) :
                new ObjectParameter("ID_ObjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_INSERT", mergeOption, iD_ObjektGrParameter, iD_ObjektGrNadParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_SELECT(long? ID_ObjektGrObjektGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrObjektGrParameter = ID_ObjektGrObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGrObjektGr", ID_ObjektGrObjektGr) :
                new ObjectParameter("ID_ObjektGrObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_SELECT", iD_ObjektGrObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_SELECT(long? ID_ObjektGrObjektGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrObjektGrParameter = ID_ObjektGrObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGrObjektGr", ID_ObjektGrObjektGr) :
                new ObjectParameter("ID_ObjektGrObjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_SELECT", mergeOption, iD_ObjektGrObjektGrParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_UPDATE(long? ID_ObjektGrObjektGr, long? ID_ObjektGr, long? ID_ObjektGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrObjektGrParameter = ID_ObjektGrObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGrObjektGr", ID_ObjektGrObjektGr) :
                new ObjectParameter("ID_ObjektGrObjektGr", typeof(long));
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektGrNadParameter = ID_ObjektGrNad.HasValue ?
                new ObjectParameter("ID_ObjektGrNad", ID_ObjektGrNad) :
                new ObjectParameter("ID_ObjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_UPDATE", iD_ObjektGrObjektGrParameter, iD_ObjektGrParameter, iD_ObjektGrNadParameter);
        }
    
        public virtual ObjectResult<ObjektGrObjektGr> USP_ObjektGrObjektGr_UPDATE(long? ID_ObjektGrObjektGr, long? ID_ObjektGr, long? ID_ObjektGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektGrObjektGr).Assembly);
    
            var iD_ObjektGrObjektGrParameter = ID_ObjektGrObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGrObjektGr", ID_ObjektGrObjektGr) :
                new ObjectParameter("ID_ObjektGrObjektGr", typeof(long));
    
            var iD_ObjektGrParameter = ID_ObjektGr.HasValue ?
                new ObjectParameter("ID_ObjektGr", ID_ObjektGr) :
                new ObjectParameter("ID_ObjektGr", typeof(long));
    
            var iD_ObjektGrNadParameter = ID_ObjektGrNad.HasValue ?
                new ObjectParameter("ID_ObjektGrNad", ID_ObjektGrNad) :
                new ObjectParameter("ID_ObjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektGrObjektGr>("USP_ObjektGrObjektGr_UPDATE", mergeOption, iD_ObjektGrObjektGrParameter, iD_ObjektGrParameter, iD_ObjektGrNadParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektTablica_DELETE(int? IDObjektTablica)
        {
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektTablica_DELETE", iDObjektTablicaParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_INSERT(int? IDObjektTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_INSERT", iDObjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_INSERT(int? IDObjektTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_INSERT", mergeOption, iDObjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_SELECT(int? IDObjektTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_SELECT", iDObjektTablicaParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_SELECT(int? IDObjektTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_SELECT", mergeOption, iDObjektTablicaParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_UPDATE(int? IDObjektTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_UPDATE", iDObjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObjektTablica> USP_ObjektTablica_UPDATE(int? IDObjektTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektTablica).Assembly);
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektTablica>("USP_ObjektTablica_UPDATE", mergeOption, iDObjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektVr_DELETE(int? IDObjektVr)
        {
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektVr_DELETE", iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_INSERT(int? IDObjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_INSERT", iDObjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_INSERT(int? IDObjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_INSERT", mergeOption, iDObjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_SELECT(int? IDObjektVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_SELECT", iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_SELECT(int? IDObjektVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_SELECT", mergeOption, iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_UPDATE(int? IDObjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_UPDATE", iDObjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObjektVr> USP_ObjektVr_UPDATE(int? IDObjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVr).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVr>("USP_ObjektVr_UPDATE", mergeOption, iDObjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObjektVrTablica_DELETE(int? IDObjektVr)
        {
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObjektVrTablica_DELETE", iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_INSERT(int? IDObjektVr, int? IDObjektTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_INSERT", iDObjektVrParameter, iDObjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_INSERT(int? IDObjektVr, int? IDObjektTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_INSERT", mergeOption, iDObjektVrParameter, iDObjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_SELECT(int? IDObjektVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_SELECT", iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_SELECT(int? IDObjektVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_SELECT", mergeOption, iDObjektVrParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_UPDATE(int? IDObjektVr, int? IDObjektTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_UPDATE", iDObjektVrParameter, iDObjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<ObjektVrTablica> USP_ObjektVrTablica_UPDATE(int? IDObjektVr, int? IDObjektTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObjektVrTablica).Assembly);
    
            var iDObjektVrParameter = IDObjektVr.HasValue ?
                new ObjectParameter("IDObjektVr", IDObjektVr) :
                new ObjectParameter("IDObjektVr", typeof(int));
    
            var iDObjektTablicaParameter = IDObjektTablica.HasValue ?
                new ObjectParameter("IDObjektTablica", IDObjektTablica) :
                new ObjectParameter("IDObjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObjektVrTablica>("USP_ObjektVrTablica_UPDATE", mergeOption, iDObjektVrParameter, iDObjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<int?> USP_Obrazac_DELETE(long? ID_Obrazac)
        {
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Obrazac_DELETE", iD_ObrazacParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_INSERT(long? ID_ObrazacVr, long? ID_Zapis, long? ID_Poduzece, long? ID_Primatelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_PrimateljParameter = ID_Primatelj.HasValue ?
                new ObjectParameter("ID_Primatelj", ID_Primatelj) :
                new ObjectParameter("ID_Primatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_INSERT", iD_ObrazacVrParameter, iD_ZapisParameter, iD_PoduzeceParameter, iD_PrimateljParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_INSERT(long? ID_ObrazacVr, long? ID_Zapis, long? ID_Poduzece, long? ID_Primatelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_PrimateljParameter = ID_Primatelj.HasValue ?
                new ObjectParameter("ID_Primatelj", ID_Primatelj) :
                new ObjectParameter("ID_Primatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_INSERT", mergeOption, iD_ObrazacVrParameter, iD_ZapisParameter, iD_PoduzeceParameter, iD_PrimateljParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_SELECT(long? ID_Obrazac)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_SELECT", iD_ObrazacParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_SELECT(long? ID_Obrazac, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_SELECT", mergeOption, iD_ObrazacParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_UPDATE(long? ID_Obrazac, long? ID_ObrazacVr, long? ID_Zapis, long? ID_Poduzece, long? ID_Primatelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_PrimateljParameter = ID_Primatelj.HasValue ?
                new ObjectParameter("ID_Primatelj", ID_Primatelj) :
                new ObjectParameter("ID_Primatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_UPDATE", iD_ObrazacParameter, iD_ObrazacVrParameter, iD_ZapisParameter, iD_PoduzeceParameter, iD_PrimateljParameter);
        }
    
        public virtual ObjectResult<Obrazac> USP_Obrazac_UPDATE(long? ID_Obrazac, long? ID_ObrazacVr, long? ID_Zapis, long? ID_Poduzece, long? ID_Primatelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrazac).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_PrimateljParameter = ID_Primatelj.HasValue ?
                new ObjectParameter("ID_Primatelj", ID_Primatelj) :
                new ObjectParameter("ID_Primatelj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrazac>("USP_Obrazac_UPDATE", mergeOption, iD_ObrazacParameter, iD_ObrazacVrParameter, iD_ZapisParameter, iD_PoduzeceParameter, iD_PrimateljParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID_DELETE(long? ID_ObrazacID)
        {
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID_DELETE", iD_ObrazacIDParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? Mjesec, int? IDObrazacIDVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_INSERT", iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, mjesecParameter, iDObrazacIDVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? Mjesec, int? IDObrazacIDVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_INSERT", mergeOption, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, mjesecParameter, iDObrazacIDVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_SELECT(long? ID_ObrazacID)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_SELECT", iD_ObrazacIDParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_SELECT(long? ID_ObrazacID, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_SELECT", mergeOption, iD_ObrazacIDParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_UPDATE(long? ID_ObrazacID, long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? Mjesec, int? IDObrazacIDVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_UPDATE", iD_ObrazacIDParameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, mjesecParameter, iDObrazacIDVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID> USP_ObrazacID_UPDATE(long? ID_ObrazacID, long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? Mjesec, int? IDObrazacIDVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID>("USP_ObrazacID_UPDATE", mergeOption, iD_ObrazacIDParameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, mjesecParameter, iDObrazacIDVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID1_DELETE(long? ID_ObrazacID1)
        {
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID1_DELETE", iD_ObrazacID1Parameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? IDObrazacID1Verzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_INSERT", iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, iDObrazacID1VerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? IDObrazacID1Verzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_INSERT", mergeOption, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, iDObrazacID1VerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_SELECT(long? ID_ObrazacID1)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_SELECT", iD_ObrazacID1Parameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_SELECT(long? ID_ObrazacID1, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_SELECT", mergeOption, iD_ObrazacID1Parameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_UPDATE(long? ID_ObrazacID1, long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? IDObrazacID1Verzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_UPDATE", iD_ObrazacID1Parameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, iDObrazacID1VerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1> USP_ObrazacID1_UPDATE(long? ID_ObrazacID1, long? ID_Zapis, long? ID_DohodakIsplatitelj, int? Godina, int? IDObrazacID1Verzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1>("USP_ObrazacID1_UPDATE", mergeOption, iD_ObrazacID1Parameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, godinaParameter, iDObrazacID1VerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID12010A_DELETE(long? ID_ObrazacID12010A)
        {
            var iD_ObrazacID12010AParameter = ID_ObrazacID12010A.HasValue ?
                new ObjectParameter("ID_ObrazacID12010A", ID_ObrazacID12010A) :
                new ObjectParameter("ID_ObrazacID12010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID12010A_DELETE", iD_ObrazacID12010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_INSERT(long? ID_ObrazacID1, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_INSERT", iD_ObrazacID1Parameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_INSERT(long? ID_ObrazacID1, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_INSERT", mergeOption, iD_ObrazacID1Parameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_SELECT(long? ID_ObrazacID12010A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID12010AParameter = ID_ObrazacID12010A.HasValue ?
                new ObjectParameter("ID_ObrazacID12010A", ID_ObrazacID12010A) :
                new ObjectParameter("ID_ObrazacID12010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_SELECT", iD_ObrazacID12010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_SELECT(long? ID_ObrazacID12010A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID12010AParameter = ID_ObrazacID12010A.HasValue ?
                new ObjectParameter("ID_ObrazacID12010A", ID_ObrazacID12010A) :
                new ObjectParameter("ID_ObrazacID12010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_SELECT", mergeOption, iD_ObrazacID12010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_UPDATE(long? ID_ObrazacID12010A, long? ID_ObrazacID1, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID12010AParameter = ID_ObrazacID12010A.HasValue ?
                new ObjectParameter("ID_ObrazacID12010A", ID_ObrazacID12010A) :
                new ObjectParameter("ID_ObrazacID12010A", typeof(long));
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_UPDATE", iD_ObrazacID12010AParameter, iD_ObrazacID1Parameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID12010A> USP_ObrazacID12010A_UPDATE(long? ID_ObrazacID12010A, long? ID_ObrazacID1, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID12010A).Assembly);
    
            var iD_ObrazacID12010AParameter = ID_ObrazacID12010A.HasValue ?
                new ObjectParameter("ID_ObrazacID12010A", ID_ObrazacID12010A) :
                new ObjectParameter("ID_ObrazacID12010A", typeof(long));
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID12010A>("USP_ObrazacID12010A_UPDATE", mergeOption, iD_ObrazacID12010AParameter, iD_ObrazacID1Parameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID1Potvrda2010A_DELETE(long? ID_ObrazacID1Potvrda2010A)
        {
            var iD_ObrazacID1Potvrda2010AParameter = ID_ObrazacID1Potvrda2010A.HasValue ?
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", ID_ObrazacID1Potvrda2010A) :
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID1Potvrda2010A_DELETE", iD_ObrazacID1Potvrda2010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_INSERT(long? ID_ObrazacID1, long? ID_Osoba, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_INSERT", iD_ObrazacID1Parameter, iD_OsobaParameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_INSERT(long? ID_ObrazacID1, long? ID_Osoba, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_INSERT", mergeOption, iD_ObrazacID1Parameter, iD_OsobaParameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_SELECT(long? ID_ObrazacID1Potvrda2010A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Potvrda2010AParameter = ID_ObrazacID1Potvrda2010A.HasValue ?
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", ID_ObrazacID1Potvrda2010A) :
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_SELECT", iD_ObrazacID1Potvrda2010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_SELECT(long? ID_ObrazacID1Potvrda2010A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Potvrda2010AParameter = ID_ObrazacID1Potvrda2010A.HasValue ?
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", ID_ObrazacID1Potvrda2010A) :
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_SELECT", mergeOption, iD_ObrazacID1Potvrda2010AParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_UPDATE(long? ID_ObrazacID1Potvrda2010A, long? ID_ObrazacID1, long? ID_Osoba, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Potvrda2010AParameter = ID_ObrazacID1Potvrda2010A.HasValue ?
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", ID_ObrazacID1Potvrda2010A) :
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", typeof(long));
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_UPDATE", iD_ObrazacID1Potvrda2010AParameter, iD_ObrazacID1Parameter, iD_OsobaParameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Potvrda2010A> USP_ObrazacID1Potvrda2010A_UPDATE(long? ID_ObrazacID1Potvrda2010A, long? ID_ObrazacID1, long? ID_Osoba, string Naziv, string Adresa, string OIB, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Potvrda2010A).Assembly);
    
            var iD_ObrazacID1Potvrda2010AParameter = ID_ObrazacID1Potvrda2010A.HasValue ?
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", ID_ObrazacID1Potvrda2010A) :
                new ObjectParameter("ID_ObrazacID1Potvrda2010A", typeof(long));
    
            var iD_ObrazacID1Parameter = ID_ObrazacID1.HasValue ?
                new ObjectParameter("ID_ObrazacID1", ID_ObrazacID1) :
                new ObjectParameter("ID_ObrazacID1", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Potvrda2010A>("USP_ObrazacID1Potvrda2010A_UPDATE", mergeOption, iD_ObrazacID1Potvrda2010AParameter, iD_ObrazacID1Parameter, iD_OsobaParameter, nazivParameter, adresaParameter, oIBParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID1Verzija_DELETE(int? IDObrazacID1Verzija)
        {
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID1Verzija_DELETE", iDObrazacID1VerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_INSERT(int? IDObrazacID1Verzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_INSERT", iDObrazacID1VerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_INSERT(int? IDObrazacID1Verzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_INSERT", mergeOption, iDObrazacID1VerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_SELECT(int? IDObrazacID1Verzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_SELECT", iDObrazacID1VerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_SELECT(int? IDObrazacID1Verzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_SELECT", mergeOption, iDObrazacID1VerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_UPDATE(int? IDObrazacID1Verzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_UPDATE", iDObrazacID1VerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacID1Verzija> USP_ObrazacID1Verzija_UPDATE(int? IDObrazacID1Verzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID1Verzija).Assembly);
    
            var iDObrazacID1VerzijaParameter = IDObrazacID1Verzija.HasValue ?
                new ObjectParameter("IDObrazacID1Verzija", IDObrazacID1Verzija) :
                new ObjectParameter("IDObrazacID1Verzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID1Verzija>("USP_ObrazacID1Verzija_UPDATE", mergeOption, iDObrazacID1VerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID2009A_DELETE(long? ID_ObrazacID2009A)
        {
            var iD_ObrazacID2009AParameter = ID_ObrazacID2009A.HasValue ?
                new ObjectParameter("ID_ObrazacID2009A", ID_ObrazacID2009A) :
                new ObjectParameter("ID_ObrazacID2009A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID2009A_DELETE", iD_ObrazacID2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_INSERT(long? ID_ObrazacID, string Naziv, string Adresa, string PorezniBroj, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosIz, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataOsiguranje, decimal? UplataOsiguranjeZivotno, decimal? UplataOsiguranjeZdravstvo, decimal? UplataOsiguranjeMIO, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var porezniBrojParameter = PorezniBroj != null ?
                new ObjectParameter("PorezniBroj", PorezniBroj) :
                new ObjectParameter("PorezniBroj", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosIzParameter = UplataDoprinosIz.HasValue ?
                new ObjectParameter("UplataDoprinosIz", UplataDoprinosIz) :
                new ObjectParameter("UplataDoprinosIz", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataOsiguranjeParameter = UplataOsiguranje.HasValue ?
                new ObjectParameter("UplataOsiguranje", UplataOsiguranje) :
                new ObjectParameter("UplataOsiguranje", typeof(decimal));
    
            var uplataOsiguranjeZivotnoParameter = UplataOsiguranjeZivotno.HasValue ?
                new ObjectParameter("UplataOsiguranjeZivotno", UplataOsiguranjeZivotno) :
                new ObjectParameter("UplataOsiguranjeZivotno", typeof(decimal));
    
            var uplataOsiguranjeZdravstvoParameter = UplataOsiguranjeZdravstvo.HasValue ?
                new ObjectParameter("UplataOsiguranjeZdravstvo", UplataOsiguranjeZdravstvo) :
                new ObjectParameter("UplataOsiguranjeZdravstvo", typeof(decimal));
    
            var uplataOsiguranjeMIOParameter = UplataOsiguranjeMIO.HasValue ?
                new ObjectParameter("UplataOsiguranjeMIO", UplataOsiguranjeMIO) :
                new ObjectParameter("UplataOsiguranjeMIO", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_INSERT", iD_ObrazacIDParameter, nazivParameter, adresaParameter, porezniBrojParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosIzParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataOsiguranjeParameter, uplataOsiguranjeZivotnoParameter, uplataOsiguranjeZdravstvoParameter, uplataOsiguranjeMIOParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_INSERT(long? ID_ObrazacID, string Naziv, string Adresa, string PorezniBroj, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosIz, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataOsiguranje, decimal? UplataOsiguranjeZivotno, decimal? UplataOsiguranjeZdravstvo, decimal? UplataOsiguranjeMIO, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var porezniBrojParameter = PorezniBroj != null ?
                new ObjectParameter("PorezniBroj", PorezniBroj) :
                new ObjectParameter("PorezniBroj", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosIzParameter = UplataDoprinosIz.HasValue ?
                new ObjectParameter("UplataDoprinosIz", UplataDoprinosIz) :
                new ObjectParameter("UplataDoprinosIz", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataOsiguranjeParameter = UplataOsiguranje.HasValue ?
                new ObjectParameter("UplataOsiguranje", UplataOsiguranje) :
                new ObjectParameter("UplataOsiguranje", typeof(decimal));
    
            var uplataOsiguranjeZivotnoParameter = UplataOsiguranjeZivotno.HasValue ?
                new ObjectParameter("UplataOsiguranjeZivotno", UplataOsiguranjeZivotno) :
                new ObjectParameter("UplataOsiguranjeZivotno", typeof(decimal));
    
            var uplataOsiguranjeZdravstvoParameter = UplataOsiguranjeZdravstvo.HasValue ?
                new ObjectParameter("UplataOsiguranjeZdravstvo", UplataOsiguranjeZdravstvo) :
                new ObjectParameter("UplataOsiguranjeZdravstvo", typeof(decimal));
    
            var uplataOsiguranjeMIOParameter = UplataOsiguranjeMIO.HasValue ?
                new ObjectParameter("UplataOsiguranjeMIO", UplataOsiguranjeMIO) :
                new ObjectParameter("UplataOsiguranjeMIO", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_INSERT", mergeOption, iD_ObrazacIDParameter, nazivParameter, adresaParameter, porezniBrojParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosIzParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataOsiguranjeParameter, uplataOsiguranjeZivotnoParameter, uplataOsiguranjeZdravstvoParameter, uplataOsiguranjeMIOParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_SELECT(long? ID_ObrazacID2009A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacID2009AParameter = ID_ObrazacID2009A.HasValue ?
                new ObjectParameter("ID_ObrazacID2009A", ID_ObrazacID2009A) :
                new ObjectParameter("ID_ObrazacID2009A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_SELECT", iD_ObrazacID2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_SELECT(long? ID_ObrazacID2009A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacID2009AParameter = ID_ObrazacID2009A.HasValue ?
                new ObjectParameter("ID_ObrazacID2009A", ID_ObrazacID2009A) :
                new ObjectParameter("ID_ObrazacID2009A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_SELECT", mergeOption, iD_ObrazacID2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_UPDATE(long? ID_ObrazacID2009A, long? ID_ObrazacID, string Naziv, string Adresa, string PorezniBroj, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosIz, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataOsiguranje, decimal? UplataOsiguranjeZivotno, decimal? UplataOsiguranjeZdravstvo, decimal? UplataOsiguranjeMIO, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacID2009AParameter = ID_ObrazacID2009A.HasValue ?
                new ObjectParameter("ID_ObrazacID2009A", ID_ObrazacID2009A) :
                new ObjectParameter("ID_ObrazacID2009A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var porezniBrojParameter = PorezniBroj != null ?
                new ObjectParameter("PorezniBroj", PorezniBroj) :
                new ObjectParameter("PorezniBroj", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosIzParameter = UplataDoprinosIz.HasValue ?
                new ObjectParameter("UplataDoprinosIz", UplataDoprinosIz) :
                new ObjectParameter("UplataDoprinosIz", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataOsiguranjeParameter = UplataOsiguranje.HasValue ?
                new ObjectParameter("UplataOsiguranje", UplataOsiguranje) :
                new ObjectParameter("UplataOsiguranje", typeof(decimal));
    
            var uplataOsiguranjeZivotnoParameter = UplataOsiguranjeZivotno.HasValue ?
                new ObjectParameter("UplataOsiguranjeZivotno", UplataOsiguranjeZivotno) :
                new ObjectParameter("UplataOsiguranjeZivotno", typeof(decimal));
    
            var uplataOsiguranjeZdravstvoParameter = UplataOsiguranjeZdravstvo.HasValue ?
                new ObjectParameter("UplataOsiguranjeZdravstvo", UplataOsiguranjeZdravstvo) :
                new ObjectParameter("UplataOsiguranjeZdravstvo", typeof(decimal));
    
            var uplataOsiguranjeMIOParameter = UplataOsiguranjeMIO.HasValue ?
                new ObjectParameter("UplataOsiguranjeMIO", UplataOsiguranjeMIO) :
                new ObjectParameter("UplataOsiguranjeMIO", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_UPDATE", iD_ObrazacID2009AParameter, iD_ObrazacIDParameter, nazivParameter, adresaParameter, porezniBrojParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosIzParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataOsiguranjeParameter, uplataOsiguranjeZivotnoParameter, uplataOsiguranjeZdravstvoParameter, uplataOsiguranjeMIOParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2009A> USP_ObrazacID2009A_UPDATE(long? ID_ObrazacID2009A, long? ID_ObrazacID, string Naziv, string Adresa, string PorezniBroj, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosIz, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataOsiguranje, decimal? UplataOsiguranjeZivotno, decimal? UplataOsiguranjeZdravstvo, decimal? UplataOsiguranjeMIO, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2009A).Assembly);
    
            var iD_ObrazacID2009AParameter = ID_ObrazacID2009A.HasValue ?
                new ObjectParameter("ID_ObrazacID2009A", ID_ObrazacID2009A) :
                new ObjectParameter("ID_ObrazacID2009A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var porezniBrojParameter = PorezniBroj != null ?
                new ObjectParameter("PorezniBroj", PorezniBroj) :
                new ObjectParameter("PorezniBroj", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosIzParameter = UplataDoprinosIz.HasValue ?
                new ObjectParameter("UplataDoprinosIz", UplataDoprinosIz) :
                new ObjectParameter("UplataDoprinosIz", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataOsiguranjeParameter = UplataOsiguranje.HasValue ?
                new ObjectParameter("UplataOsiguranje", UplataOsiguranje) :
                new ObjectParameter("UplataOsiguranje", typeof(decimal));
    
            var uplataOsiguranjeZivotnoParameter = UplataOsiguranjeZivotno.HasValue ?
                new ObjectParameter("UplataOsiguranjeZivotno", UplataOsiguranjeZivotno) :
                new ObjectParameter("UplataOsiguranjeZivotno", typeof(decimal));
    
            var uplataOsiguranjeZdravstvoParameter = UplataOsiguranjeZdravstvo.HasValue ?
                new ObjectParameter("UplataOsiguranjeZdravstvo", UplataOsiguranjeZdravstvo) :
                new ObjectParameter("UplataOsiguranjeZdravstvo", typeof(decimal));
    
            var uplataOsiguranjeMIOParameter = UplataOsiguranjeMIO.HasValue ?
                new ObjectParameter("UplataOsiguranjeMIO", UplataOsiguranjeMIO) :
                new ObjectParameter("UplataOsiguranjeMIO", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2009A>("USP_ObrazacID2009A_UPDATE", mergeOption, iD_ObrazacID2009AParameter, iD_ObrazacIDParameter, nazivParameter, adresaParameter, porezniBrojParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosIzParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataOsiguranjeParameter, uplataOsiguranjeZivotnoParameter, uplataOsiguranjeZdravstvoParameter, uplataOsiguranjeMIOParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacID2011A_DELETE(long? ID_ObrazacID2011A)
        {
            var iD_ObrazacID2011AParameter = ID_ObrazacID2011A.HasValue ?
                new ObjectParameter("ID_ObrazacID2011A", ID_ObrazacID2011A) :
                new ObjectParameter("ID_ObrazacID2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacID2011A_DELETE", iD_ObrazacID2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_INSERT(long? ID_ObrazacID, string Naziv, string Adresa, string OIB, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_INSERT", iD_ObrazacIDParameter, nazivParameter, adresaParameter, oIBParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_INSERT(long? ID_ObrazacID, string Naziv, string Adresa, string OIB, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_INSERT", mergeOption, iD_ObrazacIDParameter, nazivParameter, adresaParameter, oIBParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_SELECT(long? ID_ObrazacID2011A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacID2011AParameter = ID_ObrazacID2011A.HasValue ?
                new ObjectParameter("ID_ObrazacID2011A", ID_ObrazacID2011A) :
                new ObjectParameter("ID_ObrazacID2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_SELECT", iD_ObrazacID2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_SELECT(long? ID_ObrazacID2011A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacID2011AParameter = ID_ObrazacID2011A.HasValue ?
                new ObjectParameter("ID_ObrazacID2011A", ID_ObrazacID2011A) :
                new ObjectParameter("ID_ObrazacID2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_SELECT", mergeOption, iD_ObrazacID2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_UPDATE(long? ID_ObrazacID2011A, long? ID_ObrazacID, string Naziv, string Adresa, string OIB, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacID2011AParameter = ID_ObrazacID2011A.HasValue ?
                new ObjectParameter("ID_ObrazacID2011A", ID_ObrazacID2011A) :
                new ObjectParameter("ID_ObrazacID2011A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_UPDATE", iD_ObrazacID2011AParameter, iD_ObrazacIDParameter, nazivParameter, adresaParameter, oIBParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<ObrazacID2011A> USP_ObrazacID2011A_UPDATE(long? ID_ObrazacID2011A, long? ID_ObrazacID, string Naziv, string Adresa, string OIB, int? IDObrazacIDIdentifikator2009A, decimal? IsplataPrimitak, decimal? UplataDoprinos, decimal? UplataDoprinosMIO1, decimal? UplataDoprinosMIO2, decimal? UplataDoprinosOstaloIz, decimal? UplataDohodak, decimal? UplataOsobniOdbitak, decimal? UplataPoreznaOsnova, decimal? ObracunPorezPrirez, decimal? ObracunPorez, decimal? ObracunPrirez, decimal? UplataPorezPrirez, int? BrojPrimatelja, decimal? ObracunDoprinosMIO1, decimal? ObracunDoprinosStaz1, decimal? ObracunDoprinosMIO2, decimal? ObracunDoprinosStaz2, decimal? ObracunDoprinosZdravstvo, decimal? ObracunDoprinosZdravstvoRad, decimal? ObracunDoprinosZdravstvoIno, decimal? ObracunDoprinosZaposljavanje, decimal? ObracunDoprinosZaposljavanjeInv, int? BrojOsiguranihOsoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacID2011A).Assembly);
    
            var iD_ObrazacID2011AParameter = ID_ObrazacID2011A.HasValue ?
                new ObjectParameter("ID_ObrazacID2011A", ID_ObrazacID2011A) :
                new ObjectParameter("ID_ObrazacID2011A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = Adresa != null ?
                new ObjectParameter("Adresa", Adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var isplataPrimitakParameter = IsplataPrimitak.HasValue ?
                new ObjectParameter("IsplataPrimitak", IsplataPrimitak) :
                new ObjectParameter("IsplataPrimitak", typeof(decimal));
    
            var uplataDoprinosParameter = UplataDoprinos.HasValue ?
                new ObjectParameter("UplataDoprinos", UplataDoprinos) :
                new ObjectParameter("UplataDoprinos", typeof(decimal));
    
            var uplataDoprinosMIO1Parameter = UplataDoprinosMIO1.HasValue ?
                new ObjectParameter("UplataDoprinosMIO1", UplataDoprinosMIO1) :
                new ObjectParameter("UplataDoprinosMIO1", typeof(decimal));
    
            var uplataDoprinosMIO2Parameter = UplataDoprinosMIO2.HasValue ?
                new ObjectParameter("UplataDoprinosMIO2", UplataDoprinosMIO2) :
                new ObjectParameter("UplataDoprinosMIO2", typeof(decimal));
    
            var uplataDoprinosOstaloIzParameter = UplataDoprinosOstaloIz.HasValue ?
                new ObjectParameter("UplataDoprinosOstaloIz", UplataDoprinosOstaloIz) :
                new ObjectParameter("UplataDoprinosOstaloIz", typeof(decimal));
    
            var uplataDohodakParameter = UplataDohodak.HasValue ?
                new ObjectParameter("UplataDohodak", UplataDohodak) :
                new ObjectParameter("UplataDohodak", typeof(decimal));
    
            var uplataOsobniOdbitakParameter = UplataOsobniOdbitak.HasValue ?
                new ObjectParameter("UplataOsobniOdbitak", UplataOsobniOdbitak) :
                new ObjectParameter("UplataOsobniOdbitak", typeof(decimal));
    
            var uplataPoreznaOsnovaParameter = UplataPoreznaOsnova.HasValue ?
                new ObjectParameter("UplataPoreznaOsnova", UplataPoreznaOsnova) :
                new ObjectParameter("UplataPoreznaOsnova", typeof(decimal));
    
            var obracunPorezPrirezParameter = ObracunPorezPrirez.HasValue ?
                new ObjectParameter("ObracunPorezPrirez", ObracunPorezPrirez) :
                new ObjectParameter("ObracunPorezPrirez", typeof(decimal));
    
            var obracunPorezParameter = ObracunPorez.HasValue ?
                new ObjectParameter("ObracunPorez", ObracunPorez) :
                new ObjectParameter("ObracunPorez", typeof(decimal));
    
            var obracunPrirezParameter = ObracunPrirez.HasValue ?
                new ObjectParameter("ObracunPrirez", ObracunPrirez) :
                new ObjectParameter("ObracunPrirez", typeof(decimal));
    
            var uplataPorezPrirezParameter = UplataPorezPrirez.HasValue ?
                new ObjectParameter("UplataPorezPrirez", UplataPorezPrirez) :
                new ObjectParameter("UplataPorezPrirez", typeof(decimal));
    
            var brojPrimateljaParameter = BrojPrimatelja.HasValue ?
                new ObjectParameter("BrojPrimatelja", BrojPrimatelja) :
                new ObjectParameter("BrojPrimatelja", typeof(int));
    
            var obracunDoprinosMIO1Parameter = ObracunDoprinosMIO1.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO1", ObracunDoprinosMIO1) :
                new ObjectParameter("ObracunDoprinosMIO1", typeof(decimal));
    
            var obracunDoprinosStaz1Parameter = ObracunDoprinosStaz1.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz1", ObracunDoprinosStaz1) :
                new ObjectParameter("ObracunDoprinosStaz1", typeof(decimal));
    
            var obracunDoprinosMIO2Parameter = ObracunDoprinosMIO2.HasValue ?
                new ObjectParameter("ObracunDoprinosMIO2", ObracunDoprinosMIO2) :
                new ObjectParameter("ObracunDoprinosMIO2", typeof(decimal));
    
            var obracunDoprinosStaz2Parameter = ObracunDoprinosStaz2.HasValue ?
                new ObjectParameter("ObracunDoprinosStaz2", ObracunDoprinosStaz2) :
                new ObjectParameter("ObracunDoprinosStaz2", typeof(decimal));
    
            var obracunDoprinosZdravstvoParameter = ObracunDoprinosZdravstvo.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvo", ObracunDoprinosZdravstvo) :
                new ObjectParameter("ObracunDoprinosZdravstvo", typeof(decimal));
    
            var obracunDoprinosZdravstvoRadParameter = ObracunDoprinosZdravstvoRad.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoRad", ObracunDoprinosZdravstvoRad) :
                new ObjectParameter("ObracunDoprinosZdravstvoRad", typeof(decimal));
    
            var obracunDoprinosZdravstvoInoParameter = ObracunDoprinosZdravstvoIno.HasValue ?
                new ObjectParameter("ObracunDoprinosZdravstvoIno", ObracunDoprinosZdravstvoIno) :
                new ObjectParameter("ObracunDoprinosZdravstvoIno", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeParameter = ObracunDoprinosZaposljavanje.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanje", ObracunDoprinosZaposljavanje) :
                new ObjectParameter("ObracunDoprinosZaposljavanje", typeof(decimal));
    
            var obracunDoprinosZaposljavanjeInvParameter = ObracunDoprinosZaposljavanjeInv.HasValue ?
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", ObracunDoprinosZaposljavanjeInv) :
                new ObjectParameter("ObracunDoprinosZaposljavanjeInv", typeof(decimal));
    
            var brojOsiguranihOsobaParameter = BrojOsiguranihOsoba.HasValue ?
                new ObjectParameter("BrojOsiguranihOsoba", BrojOsiguranihOsoba) :
                new ObjectParameter("BrojOsiguranihOsoba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacID2011A>("USP_ObrazacID2011A_UPDATE", mergeOption, iD_ObrazacID2011AParameter, iD_ObrazacIDParameter, nazivParameter, adresaParameter, oIBParameter, iDObrazacIDIdentifikator2009AParameter, isplataPrimitakParameter, uplataDoprinosParameter, uplataDoprinosMIO1Parameter, uplataDoprinosMIO2Parameter, uplataDoprinosOstaloIzParameter, uplataDohodakParameter, uplataOsobniOdbitakParameter, uplataPoreznaOsnovaParameter, obracunPorezPrirezParameter, obracunPorezParameter, obracunPrirezParameter, uplataPorezPrirezParameter, brojPrimateljaParameter, obracunDoprinosMIO1Parameter, obracunDoprinosStaz1Parameter, obracunDoprinosMIO2Parameter, obracunDoprinosStaz2Parameter, obracunDoprinosZdravstvoParameter, obracunDoprinosZdravstvoRadParameter, obracunDoprinosZdravstvoInoParameter, obracunDoprinosZaposljavanjeParameter, obracunDoprinosZaposljavanjeInvParameter, brojOsiguranihOsobaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIDIdentifikator2009A_DELETE(int? IDObrazacIDIdentifikator2009A)
        {
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIDIdentifikator2009A_DELETE", iDObrazacIDIdentifikator2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_INSERT(int? IDObrazacIDIdentifikator2009A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_INSERT", iDObrazacIDIdentifikator2009AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_INSERT(int? IDObrazacIDIdentifikator2009A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_INSERT", mergeOption, iDObrazacIDIdentifikator2009AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_SELECT(int? IDObrazacIDIdentifikator2009A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_SELECT", iDObrazacIDIdentifikator2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_SELECT(int? IDObrazacIDIdentifikator2009A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_SELECT", mergeOption, iDObrazacIDIdentifikator2009AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_UPDATE(int? IDObrazacIDIdentifikator2009A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_UPDATE", iDObrazacIDIdentifikator2009AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDIdentifikator2009A> USP_ObrazacIDIdentifikator2009A_UPDATE(int? IDObrazacIDIdentifikator2009A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDIdentifikator2009A).Assembly);
    
            var iDObrazacIDIdentifikator2009AParameter = IDObrazacIDIdentifikator2009A.HasValue ?
                new ObjectParameter("IDObrazacIDIdentifikator2009A", IDObrazacIDIdentifikator2009A) :
                new ObjectParameter("IDObrazacIDIdentifikator2009A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDIdentifikator2009A>("USP_ObrazacIDIdentifikator2009A_UPDATE", mergeOption, iDObrazacIDIdentifikator2009AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIDOpcina2003A_DELETE(long? ID_ObrazacIDOpcina2003A)
        {
            var iD_ObrazacIDOpcina2003AParameter = ID_ObrazacIDOpcina2003A.HasValue ?
                new ObjectParameter("ID_ObrazacIDOpcina2003A", ID_ObrazacIDOpcina2003A) :
                new ObjectParameter("ID_ObrazacIDOpcina2003A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIDOpcina2003A_DELETE", iD_ObrazacIDOpcina2003AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_INSERT(long? ID_ObrazacID, long? ID_Opcina, int? RedniBroj, string SifraOpcina, string NazivOpcina, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosUkupno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_INSERT", iD_ObrazacIDParameter, iD_OpcinaParameter, redniBrojParameter, sifraOpcinaParameter, nazivOpcinaParameter, iznosPorezParameter, iznosPrirezParameter, iznosUkupnoParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_INSERT(long? ID_ObrazacID, long? ID_Opcina, int? RedniBroj, string SifraOpcina, string NazivOpcina, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosUkupno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_INSERT", mergeOption, iD_ObrazacIDParameter, iD_OpcinaParameter, redniBrojParameter, sifraOpcinaParameter, nazivOpcinaParameter, iznosPorezParameter, iznosPrirezParameter, iznosUkupnoParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_SELECT(long? ID_ObrazacIDOpcina2003A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDOpcina2003AParameter = ID_ObrazacIDOpcina2003A.HasValue ?
                new ObjectParameter("ID_ObrazacIDOpcina2003A", ID_ObrazacIDOpcina2003A) :
                new ObjectParameter("ID_ObrazacIDOpcina2003A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_SELECT", iD_ObrazacIDOpcina2003AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_SELECT(long? ID_ObrazacIDOpcina2003A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDOpcina2003AParameter = ID_ObrazacIDOpcina2003A.HasValue ?
                new ObjectParameter("ID_ObrazacIDOpcina2003A", ID_ObrazacIDOpcina2003A) :
                new ObjectParameter("ID_ObrazacIDOpcina2003A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_SELECT", mergeOption, iD_ObrazacIDOpcina2003AParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_UPDATE(long? ID_ObrazacIDOpcina2003A, long? ID_ObrazacID, long? ID_Opcina, int? RedniBroj, string SifraOpcina, string NazivOpcina, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosUkupno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDOpcina2003AParameter = ID_ObrazacIDOpcina2003A.HasValue ?
                new ObjectParameter("ID_ObrazacIDOpcina2003A", ID_ObrazacIDOpcina2003A) :
                new ObjectParameter("ID_ObrazacIDOpcina2003A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_UPDATE", iD_ObrazacIDOpcina2003AParameter, iD_ObrazacIDParameter, iD_OpcinaParameter, redniBrojParameter, sifraOpcinaParameter, nazivOpcinaParameter, iznosPorezParameter, iznosPrirezParameter, iznosUkupnoParameter);
        }
    
        public virtual ObjectResult<ObrazacIDOpcina2003A> USP_ObrazacIDOpcina2003A_UPDATE(long? ID_ObrazacIDOpcina2003A, long? ID_ObrazacID, long? ID_Opcina, int? RedniBroj, string SifraOpcina, string NazivOpcina, decimal? IznosPorez, decimal? IznosPrirez, decimal? IznosUkupno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDOpcina2003A).Assembly);
    
            var iD_ObrazacIDOpcina2003AParameter = ID_ObrazacIDOpcina2003A.HasValue ?
                new ObjectParameter("ID_ObrazacIDOpcina2003A", ID_ObrazacIDOpcina2003A) :
                new ObjectParameter("ID_ObrazacIDOpcina2003A", typeof(long));
    
            var iD_ObrazacIDParameter = ID_ObrazacID.HasValue ?
                new ObjectParameter("ID_ObrazacID", ID_ObrazacID) :
                new ObjectParameter("ID_ObrazacID", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosPrirezParameter = IznosPrirez.HasValue ?
                new ObjectParameter("IznosPrirez", IznosPrirez) :
                new ObjectParameter("IznosPrirez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDOpcina2003A>("USP_ObrazacIDOpcina2003A_UPDATE", mergeOption, iD_ObrazacIDOpcina2003AParameter, iD_ObrazacIDParameter, iD_OpcinaParameter, redniBrojParameter, sifraOpcinaParameter, nazivOpcinaParameter, iznosPorezParameter, iznosPrirezParameter, iznosUkupnoParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIDVerzija_DELETE(int? IDObrazacIDVerzija)
        {
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIDVerzija_DELETE", iDObrazacIDVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_INSERT(int? IDObrazacIDVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_INSERT", iDObrazacIDVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_INSERT(int? IDObrazacIDVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_INSERT", mergeOption, iDObrazacIDVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_SELECT(int? IDObrazacIDVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_SELECT", iDObrazacIDVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_SELECT(int? IDObrazacIDVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_SELECT", mergeOption, iDObrazacIDVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_UPDATE(int? IDObrazacIDVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_UPDATE", iDObrazacIDVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzija> USP_ObrazacIDVerzija_UPDATE(int? IDObrazacIDVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzija).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzija>("USP_ObrazacIDVerzija_UPDATE", mergeOption, iDObrazacIDVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIDVerzijaTablica_DELETE(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica)
        {
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIDVerzijaTablica_DELETE", iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_INSERT(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_INSERT", iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_INSERT(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_INSERT", mergeOption, iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_SELECT(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_SELECT", iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_SELECT(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_SELECT", mergeOption, iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_UPDATE(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_UPDATE", iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ObrazacIDVerzijaTablica> USP_ObrazacIDVerzijaTablica_UPDATE(int? IDObrazacIDVerzija, int? IDObrazacIDVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIDVerzijaTablica).Assembly);
    
            var iDObrazacIDVerzijaParameter = IDObrazacIDVerzija.HasValue ?
                new ObjectParameter("IDObrazacIDVerzija", IDObrazacIDVerzija) :
                new ObjectParameter("IDObrazacIDVerzija", typeof(int));
    
            var iDObrazacIDVerzijaTablicaParameter = IDObrazacIDVerzijaTablica.HasValue ?
                new ObjectParameter("IDObrazacIDVerzijaTablica", IDObrazacIDVerzijaTablica) :
                new ObjectParameter("IDObrazacIDVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIDVerzijaTablica>("USP_ObrazacIDVerzijaTablica_UPDATE", mergeOption, iDObrazacIDVerzijaParameter, iDObrazacIDVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIP_DELETE(long? ID_ObrazacIP)
        {
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIP_DELETE", iD_ObrazacIPParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, long? ID_Osoba, int? Godina, int? IDObrazacIPVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_INSERT", iD_ZapisParameter, iD_DohodakIsplatiteljParameter, iD_OsobaParameter, godinaParameter, iDObrazacIPVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_INSERT(long? ID_Zapis, long? ID_DohodakIsplatitelj, long? ID_Osoba, int? Godina, int? IDObrazacIPVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_INSERT", mergeOption, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, iD_OsobaParameter, godinaParameter, iDObrazacIPVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_SELECT(long? ID_ObrazacIP)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_SELECT", iD_ObrazacIPParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_SELECT(long? ID_ObrazacIP, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_SELECT", mergeOption, iD_ObrazacIPParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_UPDATE(long? ID_ObrazacIP, long? ID_Zapis, long? ID_DohodakIsplatitelj, long? ID_Osoba, int? Godina, int? IDObrazacIPVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_UPDATE", iD_ObrazacIPParameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, iD_OsobaParameter, godinaParameter, iDObrazacIPVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacIP> USP_ObrazacIP_UPDATE(long? ID_ObrazacIP, long? ID_Zapis, long? ID_DohodakIsplatitelj, long? ID_Osoba, int? Godina, int? IDObrazacIPVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP>("USP_ObrazacIP_UPDATE", mergeOption, iD_ObrazacIPParameter, iD_ZapisParameter, iD_DohodakIsplatiteljParameter, iD_OsobaParameter, godinaParameter, iDObrazacIPVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIP2011A_DELETE(long? ID_ObrazacIP2011A)
        {
            var iD_ObrazacIP2011AParameter = ID_ObrazacIP2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIP2011A", ID_ObrazacIP2011A) :
                new ObjectParameter("ID_ObrazacIP2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIP2011A_DELETE", iD_ObrazacIP2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_INSERT(long? ID_ObrazacIP, int? IDObrazacIPIdentifikator2005A, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_INSERT", iD_ObrazacIPParameter, iDObrazacIPIdentifikator2005AParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_INSERT(long? ID_ObrazacIP, int? IDObrazacIPIdentifikator2005A, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_INSERT", mergeOption, iD_ObrazacIPParameter, iDObrazacIPIdentifikator2005AParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_SELECT(long? ID_ObrazacIP2011A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIP2011AParameter = ID_ObrazacIP2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIP2011A", ID_ObrazacIP2011A) :
                new ObjectParameter("ID_ObrazacIP2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_SELECT", iD_ObrazacIP2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_SELECT(long? ID_ObrazacIP2011A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIP2011AParameter = ID_ObrazacIP2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIP2011A", ID_ObrazacIP2011A) :
                new ObjectParameter("ID_ObrazacIP2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_SELECT", mergeOption, iD_ObrazacIP2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_UPDATE(long? ID_ObrazacIP2011A, long? ID_ObrazacIP, int? IDObrazacIPIdentifikator2005A, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIP2011AParameter = ID_ObrazacIP2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIP2011A", ID_ObrazacIP2011A) :
                new ObjectParameter("ID_ObrazacIP2011A", typeof(long));
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_UPDATE", iD_ObrazacIP2011AParameter, iD_ObrazacIPParameter, iDObrazacIPIdentifikator2005AParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacIP2011A> USP_ObrazacIP2011A_UPDATE(long? ID_ObrazacIP2011A, long? ID_ObrazacIP, int? IDObrazacIPIdentifikator2005A, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIP2011A).Assembly);
    
            var iD_ObrazacIP2011AParameter = ID_ObrazacIP2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIP2011A", ID_ObrazacIP2011A) :
                new ObjectParameter("ID_ObrazacIP2011A", typeof(long));
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIP2011A>("USP_ObrazacIP2011A_UPDATE", mergeOption, iD_ObrazacIP2011AParameter, iD_ObrazacIPParameter, iDObrazacIPIdentifikator2005AParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIPIdentifikator2005A_DELETE(int? IDObrazacIPIdentifikator2005A)
        {
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIPIdentifikator2005A_DELETE", iDObrazacIPIdentifikator2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_INSERT(int? IDObrazacIPIdentifikator2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_INSERT", iDObrazacIPIdentifikator2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_INSERT(int? IDObrazacIPIdentifikator2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_INSERT", mergeOption, iDObrazacIPIdentifikator2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_SELECT(int? IDObrazacIPIdentifikator2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_SELECT", iDObrazacIPIdentifikator2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_SELECT(int? IDObrazacIPIdentifikator2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_SELECT", mergeOption, iDObrazacIPIdentifikator2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_UPDATE(int? IDObrazacIPIdentifikator2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_UPDATE", iDObrazacIPIdentifikator2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ObrazacIPIdentifikator2005A> USP_ObrazacIPIdentifikator2005A_UPDATE(int? IDObrazacIPIdentifikator2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPIdentifikator2005A).Assembly);
    
            var iDObrazacIPIdentifikator2005AParameter = IDObrazacIPIdentifikator2005A.HasValue ?
                new ObjectParameter("IDObrazacIPIdentifikator2005A", IDObrazacIPIdentifikator2005A) :
                new ObjectParameter("IDObrazacIPIdentifikator2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPIdentifikator2005A>("USP_ObrazacIPIdentifikator2005A_UPDATE", mergeOption, iDObrazacIPIdentifikator2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIPMjesec2011A_DELETE(long? ID_ObrazacIPMjesec2011A)
        {
            var iD_ObrazacIPMjesec2011AParameter = ID_ObrazacIPMjesec2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIPMjesec2011A", ID_ObrazacIPMjesec2011A) :
                new ObjectParameter("ID_ObrazacIPMjesec2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIPMjesec2011A_DELETE", iD_ObrazacIPMjesec2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_INSERT(long? ID_ObrazacIP, int? Mjesec, long? ID_Opcina, string SifraOpcina, decimal? IznosIsplata, decimal? IznosUplataDoprinosIz, decimal? IznosDohodak, decimal? IznosOsobniOdbitak, decimal? IznosPorezOsnova, decimal? IznosUplataPorezPrirez, decimal? IznosIsplataNeto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var iznosIsplataParameter = IznosIsplata.HasValue ?
                new ObjectParameter("IznosIsplata", IznosIsplata) :
                new ObjectParameter("IznosIsplata", typeof(decimal));
    
            var iznosUplataDoprinosIzParameter = IznosUplataDoprinosIz.HasValue ?
                new ObjectParameter("IznosUplataDoprinosIz", IznosUplataDoprinosIz) :
                new ObjectParameter("IznosUplataDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosOsobniOdbitakParameter = IznosOsobniOdbitak.HasValue ?
                new ObjectParameter("IznosOsobniOdbitak", IznosOsobniOdbitak) :
                new ObjectParameter("IznosOsobniOdbitak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosUplataPorezPrirezParameter = IznosUplataPorezPrirez.HasValue ?
                new ObjectParameter("IznosUplataPorezPrirez", IznosUplataPorezPrirez) :
                new ObjectParameter("IznosUplataPorezPrirez", typeof(decimal));
    
            var iznosIsplataNetoParameter = IznosIsplataNeto.HasValue ?
                new ObjectParameter("IznosIsplataNeto", IznosIsplataNeto) :
                new ObjectParameter("IznosIsplataNeto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_INSERT", iD_ObrazacIPParameter, mjesecParameter, iD_OpcinaParameter, sifraOpcinaParameter, iznosIsplataParameter, iznosUplataDoprinosIzParameter, iznosDohodakParameter, iznosOsobniOdbitakParameter, iznosPorezOsnovaParameter, iznosUplataPorezPrirezParameter, iznosIsplataNetoParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_INSERT(long? ID_ObrazacIP, int? Mjesec, long? ID_Opcina, string SifraOpcina, decimal? IznosIsplata, decimal? IznosUplataDoprinosIz, decimal? IznosDohodak, decimal? IznosOsobniOdbitak, decimal? IznosPorezOsnova, decimal? IznosUplataPorezPrirez, decimal? IznosIsplataNeto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var iznosIsplataParameter = IznosIsplata.HasValue ?
                new ObjectParameter("IznosIsplata", IznosIsplata) :
                new ObjectParameter("IznosIsplata", typeof(decimal));
    
            var iznosUplataDoprinosIzParameter = IznosUplataDoprinosIz.HasValue ?
                new ObjectParameter("IznosUplataDoprinosIz", IznosUplataDoprinosIz) :
                new ObjectParameter("IznosUplataDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosOsobniOdbitakParameter = IznosOsobniOdbitak.HasValue ?
                new ObjectParameter("IznosOsobniOdbitak", IznosOsobniOdbitak) :
                new ObjectParameter("IznosOsobniOdbitak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosUplataPorezPrirezParameter = IznosUplataPorezPrirez.HasValue ?
                new ObjectParameter("IznosUplataPorezPrirez", IznosUplataPorezPrirez) :
                new ObjectParameter("IznosUplataPorezPrirez", typeof(decimal));
    
            var iznosIsplataNetoParameter = IznosIsplataNeto.HasValue ?
                new ObjectParameter("IznosIsplataNeto", IznosIsplataNeto) :
                new ObjectParameter("IznosIsplataNeto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_INSERT", mergeOption, iD_ObrazacIPParameter, mjesecParameter, iD_OpcinaParameter, sifraOpcinaParameter, iznosIsplataParameter, iznosUplataDoprinosIzParameter, iznosDohodakParameter, iznosOsobniOdbitakParameter, iznosPorezOsnovaParameter, iznosUplataPorezPrirezParameter, iznosIsplataNetoParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_SELECT(long? ID_ObrazacIPMjesec2011A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPMjesec2011AParameter = ID_ObrazacIPMjesec2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIPMjesec2011A", ID_ObrazacIPMjesec2011A) :
                new ObjectParameter("ID_ObrazacIPMjesec2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_SELECT", iD_ObrazacIPMjesec2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_SELECT(long? ID_ObrazacIPMjesec2011A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPMjesec2011AParameter = ID_ObrazacIPMjesec2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIPMjesec2011A", ID_ObrazacIPMjesec2011A) :
                new ObjectParameter("ID_ObrazacIPMjesec2011A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_SELECT", mergeOption, iD_ObrazacIPMjesec2011AParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_UPDATE(long? ID_ObrazacIPMjesec2011A, long? ID_ObrazacIP, int? Mjesec, long? ID_Opcina, string SifraOpcina, decimal? IznosIsplata, decimal? IznosUplataDoprinosIz, decimal? IznosDohodak, decimal? IznosOsobniOdbitak, decimal? IznosPorezOsnova, decimal? IznosUplataPorezPrirez, decimal? IznosIsplataNeto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPMjesec2011AParameter = ID_ObrazacIPMjesec2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIPMjesec2011A", ID_ObrazacIPMjesec2011A) :
                new ObjectParameter("ID_ObrazacIPMjesec2011A", typeof(long));
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var iznosIsplataParameter = IznosIsplata.HasValue ?
                new ObjectParameter("IznosIsplata", IznosIsplata) :
                new ObjectParameter("IznosIsplata", typeof(decimal));
    
            var iznosUplataDoprinosIzParameter = IznosUplataDoprinosIz.HasValue ?
                new ObjectParameter("IznosUplataDoprinosIz", IznosUplataDoprinosIz) :
                new ObjectParameter("IznosUplataDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosOsobniOdbitakParameter = IznosOsobniOdbitak.HasValue ?
                new ObjectParameter("IznosOsobniOdbitak", IznosOsobniOdbitak) :
                new ObjectParameter("IznosOsobniOdbitak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosUplataPorezPrirezParameter = IznosUplataPorezPrirez.HasValue ?
                new ObjectParameter("IznosUplataPorezPrirez", IznosUplataPorezPrirez) :
                new ObjectParameter("IznosUplataPorezPrirez", typeof(decimal));
    
            var iznosIsplataNetoParameter = IznosIsplataNeto.HasValue ?
                new ObjectParameter("IznosIsplataNeto", IznosIsplataNeto) :
                new ObjectParameter("IznosIsplataNeto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_UPDATE", iD_ObrazacIPMjesec2011AParameter, iD_ObrazacIPParameter, mjesecParameter, iD_OpcinaParameter, sifraOpcinaParameter, iznosIsplataParameter, iznosUplataDoprinosIzParameter, iznosDohodakParameter, iznosOsobniOdbitakParameter, iznosPorezOsnovaParameter, iznosUplataPorezPrirezParameter, iznosIsplataNetoParameter);
        }
    
        public virtual ObjectResult<ObrazacIPMjesec2011A> USP_ObrazacIPMjesec2011A_UPDATE(long? ID_ObrazacIPMjesec2011A, long? ID_ObrazacIP, int? Mjesec, long? ID_Opcina, string SifraOpcina, decimal? IznosIsplata, decimal? IznosUplataDoprinosIz, decimal? IznosDohodak, decimal? IznosOsobniOdbitak, decimal? IznosPorezOsnova, decimal? IznosUplataPorezPrirez, decimal? IznosIsplataNeto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPMjesec2011A).Assembly);
    
            var iD_ObrazacIPMjesec2011AParameter = ID_ObrazacIPMjesec2011A.HasValue ?
                new ObjectParameter("ID_ObrazacIPMjesec2011A", ID_ObrazacIPMjesec2011A) :
                new ObjectParameter("ID_ObrazacIPMjesec2011A", typeof(long));
    
            var iD_ObrazacIPParameter = ID_ObrazacIP.HasValue ?
                new ObjectParameter("ID_ObrazacIP", ID_ObrazacIP) :
                new ObjectParameter("ID_ObrazacIP", typeof(long));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var iznosIsplataParameter = IznosIsplata.HasValue ?
                new ObjectParameter("IznosIsplata", IznosIsplata) :
                new ObjectParameter("IznosIsplata", typeof(decimal));
    
            var iznosUplataDoprinosIzParameter = IznosUplataDoprinosIz.HasValue ?
                new ObjectParameter("IznosUplataDoprinosIz", IznosUplataDoprinosIz) :
                new ObjectParameter("IznosUplataDoprinosIz", typeof(decimal));
    
            var iznosDohodakParameter = IznosDohodak.HasValue ?
                new ObjectParameter("IznosDohodak", IznosDohodak) :
                new ObjectParameter("IznosDohodak", typeof(decimal));
    
            var iznosOsobniOdbitakParameter = IznosOsobniOdbitak.HasValue ?
                new ObjectParameter("IznosOsobniOdbitak", IznosOsobniOdbitak) :
                new ObjectParameter("IznosOsobniOdbitak", typeof(decimal));
    
            var iznosPorezOsnovaParameter = IznosPorezOsnova.HasValue ?
                new ObjectParameter("IznosPorezOsnova", IznosPorezOsnova) :
                new ObjectParameter("IznosPorezOsnova", typeof(decimal));
    
            var iznosUplataPorezPrirezParameter = IznosUplataPorezPrirez.HasValue ?
                new ObjectParameter("IznosUplataPorezPrirez", IznosUplataPorezPrirez) :
                new ObjectParameter("IznosUplataPorezPrirez", typeof(decimal));
    
            var iznosIsplataNetoParameter = IznosIsplataNeto.HasValue ?
                new ObjectParameter("IznosIsplataNeto", IznosIsplataNeto) :
                new ObjectParameter("IznosIsplataNeto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPMjesec2011A>("USP_ObrazacIPMjesec2011A_UPDATE", mergeOption, iD_ObrazacIPMjesec2011AParameter, iD_ObrazacIPParameter, mjesecParameter, iD_OpcinaParameter, sifraOpcinaParameter, iznosIsplataParameter, iznosUplataDoprinosIzParameter, iznosDohodakParameter, iznosOsobniOdbitakParameter, iznosPorezOsnovaParameter, iznosUplataPorezPrirezParameter, iznosIsplataNetoParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacIPVerzija_DELETE(int? IDObrazacIPVerzija)
        {
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacIPVerzija_DELETE", iDObrazacIPVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_INSERT(int? IDObrazacIPVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_INSERT", iDObrazacIPVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_INSERT(int? IDObrazacIPVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_INSERT", mergeOption, iDObrazacIPVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_SELECT(int? IDObrazacIPVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_SELECT", iDObrazacIPVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_SELECT(int? IDObrazacIPVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_SELECT", mergeOption, iDObrazacIPVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_UPDATE(int? IDObrazacIPVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_UPDATE", iDObrazacIPVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacIPVerzija> USP_ObrazacIPVerzija_UPDATE(int? IDObrazacIPVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacIPVerzija).Assembly);
    
            var iDObrazacIPVerzijaParameter = IDObrazacIPVerzija.HasValue ?
                new ObjectParameter("IDObrazacIPVerzija", IDObrazacIPVerzija) :
                new ObjectParameter("IDObrazacIPVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacIPVerzija>("USP_ObrazacIPVerzija_UPDATE", mergeOption, iDObrazacIPVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacPDV_DELETE(long? ID_ObrazacPDV)
        {
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacPDV_DELETE", iD_ObrazacPDVParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, int? Period)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var periodParameter = Period.HasValue ?
                new ObjectParameter("Period", Period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_INSERT", iD_ZapisParameter, iD_PoslovnaGodinaParameter, periodParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, int? Period, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var periodParameter = Period.HasValue ?
                new ObjectParameter("Period", Period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovnaGodinaParameter, periodParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_SELECT(long? ID_ObrazacPDV)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_SELECT", iD_ObrazacPDVParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_SELECT(long? ID_ObrazacPDV, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_SELECT", mergeOption, iD_ObrazacPDVParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_UPDATE(long? ID_ObrazacPDV, long? ID_Zapis, long? ID_PoslovnaGodina, int? Period)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var periodParameter = Period.HasValue ?
                new ObjectParameter("Period", Period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_UPDATE", iD_ObrazacPDVParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, periodParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV> USP_ObrazacPDV_UPDATE(long? ID_ObrazacPDV, long? ID_Zapis, long? ID_PoslovnaGodina, int? Period, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var periodParameter = Period.HasValue ?
                new ObjectParameter("Period", Period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV>("USP_ObrazacPDV_UPDATE", mergeOption, iD_ObrazacPDVParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter, periodParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacPDV2012A_DELETE(long? ID_ObrazacPDV2012A)
        {
            var iD_ObrazacPDV2012AParameter = ID_ObrazacPDV2012A.HasValue ?
                new ObjectParameter("ID_ObrazacPDV2012A", ID_ObrazacPDV2012A) :
                new ObjectParameter("ID_ObrazacPDV2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacPDV2012A_DELETE", iD_ObrazacPDV2012AParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_INSERT(long? ID_ObrazacPDV, string PorezniObveznikNaziv, string PorezniObveznikAdresa, decimal? VrijednostNeoporezivo, decimal? VrijednostOslobodenoIzvoz, decimal? VrijednostOslobodenoIsporuka, decimal? VrijednostOslobodenoTuzemstvo, decimal? VrijednostOslobodenoOstalo, decimal? VrijednostPorez0, decimal? VrijednostPorez10, decimal? IznosPorez10, decimal? VrijednostPorez22, decimal? IznosPorez22, decimal? VrijednostPorez23, decimal? IznosPorez23, decimal? VrijednostPorez25, decimal? IznosPorez25, decimal? VrijednostPretporez10, decimal? IznosPretporez10, decimal? VrijednostPretporez22, decimal? IznosPretporez22, decimal? VrijednostPretporez23, decimal? IznosPretporez23, decimal? VrijednostPretporez25, decimal? IznosPretporez25, decimal? VrijednostPretporezUvoz, decimal? IznosPretporezUvoz, decimal? VrijednostPretporez10OdbitakNe, decimal? VrijednostPretporez10OdbitakDa, decimal? IznosPretporez10ObitakDa, decimal? VrijednostPretporez22OdbitakNe, decimal? VrijednostPretporez22OdbitakDa, decimal? IznosPretporez22ObitakDa, decimal? VrijednostPretporez23OdbitakNe, decimal? VrijednostPretporez23OdbitakDa, decimal? IznosPretporez23ObitakDa, decimal? VrijednostPretporez25OdbitakNe, decimal? VrijednostPretporez25OdbitakDa, decimal? IznosPretporez25ObitakDa, decimal? IznosPretporezIspravak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var porezniObveznikNazivParameter = PorezniObveznikNaziv != null ?
                new ObjectParameter("PorezniObveznikNaziv", PorezniObveznikNaziv) :
                new ObjectParameter("PorezniObveznikNaziv", typeof(string));
    
            var porezniObveznikAdresaParameter = PorezniObveznikAdresa != null ?
                new ObjectParameter("PorezniObveznikAdresa", PorezniObveznikAdresa) :
                new ObjectParameter("PorezniObveznikAdresa", typeof(string));
    
            var vrijednostNeoporezivoParameter = VrijednostNeoporezivo.HasValue ?
                new ObjectParameter("VrijednostNeoporezivo", VrijednostNeoporezivo) :
                new ObjectParameter("VrijednostNeoporezivo", typeof(decimal));
    
            var vrijednostOslobodenoIzvozParameter = VrijednostOslobodenoIzvoz.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIzvoz", VrijednostOslobodenoIzvoz) :
                new ObjectParameter("VrijednostOslobodenoIzvoz", typeof(decimal));
    
            var vrijednostOslobodenoIsporukaParameter = VrijednostOslobodenoIsporuka.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIsporuka", VrijednostOslobodenoIsporuka) :
                new ObjectParameter("VrijednostOslobodenoIsporuka", typeof(decimal));
    
            var vrijednostOslobodenoTuzemstvoParameter = VrijednostOslobodenoTuzemstvo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", VrijednostOslobodenoTuzemstvo) :
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", typeof(decimal));
    
            var vrijednostOslobodenoOstaloParameter = VrijednostOslobodenoOstalo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoOstalo", VrijednostOslobodenoOstalo) :
                new ObjectParameter("VrijednostOslobodenoOstalo", typeof(decimal));
    
            var vrijednostPorez0Parameter = VrijednostPorez0.HasValue ?
                new ObjectParameter("VrijednostPorez0", VrijednostPorez0) :
                new ObjectParameter("VrijednostPorez0", typeof(decimal));
    
            var vrijednostPorez10Parameter = VrijednostPorez10.HasValue ?
                new ObjectParameter("VrijednostPorez10", VrijednostPorez10) :
                new ObjectParameter("VrijednostPorez10", typeof(decimal));
    
            var iznosPorez10Parameter = IznosPorez10.HasValue ?
                new ObjectParameter("IznosPorez10", IznosPorez10) :
                new ObjectParameter("IznosPorez10", typeof(decimal));
    
            var vrijednostPorez22Parameter = VrijednostPorez22.HasValue ?
                new ObjectParameter("VrijednostPorez22", VrijednostPorez22) :
                new ObjectParameter("VrijednostPorez22", typeof(decimal));
    
            var iznosPorez22Parameter = IznosPorez22.HasValue ?
                new ObjectParameter("IznosPorez22", IznosPorez22) :
                new ObjectParameter("IznosPorez22", typeof(decimal));
    
            var vrijednostPorez23Parameter = VrijednostPorez23.HasValue ?
                new ObjectParameter("VrijednostPorez23", VrijednostPorez23) :
                new ObjectParameter("VrijednostPorez23", typeof(decimal));
    
            var iznosPorez23Parameter = IznosPorez23.HasValue ?
                new ObjectParameter("IznosPorez23", IznosPorez23) :
                new ObjectParameter("IznosPorez23", typeof(decimal));
    
            var vrijednostPorez25Parameter = VrijednostPorez25.HasValue ?
                new ObjectParameter("VrijednostPorez25", VrijednostPorez25) :
                new ObjectParameter("VrijednostPorez25", typeof(decimal));
    
            var iznosPorez25Parameter = IznosPorez25.HasValue ?
                new ObjectParameter("IznosPorez25", IznosPorez25) :
                new ObjectParameter("IznosPorez25", typeof(decimal));
    
            var vrijednostPretporez10Parameter = VrijednostPretporez10.HasValue ?
                new ObjectParameter("VrijednostPretporez10", VrijednostPretporez10) :
                new ObjectParameter("VrijednostPretporez10", typeof(decimal));
    
            var iznosPretporez10Parameter = IznosPretporez10.HasValue ?
                new ObjectParameter("IznosPretporez10", IznosPretporez10) :
                new ObjectParameter("IznosPretporez10", typeof(decimal));
    
            var vrijednostPretporez22Parameter = VrijednostPretporez22.HasValue ?
                new ObjectParameter("VrijednostPretporez22", VrijednostPretporez22) :
                new ObjectParameter("VrijednostPretporez22", typeof(decimal));
    
            var iznosPretporez22Parameter = IznosPretporez22.HasValue ?
                new ObjectParameter("IznosPretporez22", IznosPretporez22) :
                new ObjectParameter("IznosPretporez22", typeof(decimal));
    
            var vrijednostPretporez23Parameter = VrijednostPretporez23.HasValue ?
                new ObjectParameter("VrijednostPretporez23", VrijednostPretporez23) :
                new ObjectParameter("VrijednostPretporez23", typeof(decimal));
    
            var iznosPretporez23Parameter = IznosPretporez23.HasValue ?
                new ObjectParameter("IznosPretporez23", IznosPretporez23) :
                new ObjectParameter("IznosPretporez23", typeof(decimal));
    
            var vrijednostPretporez25Parameter = VrijednostPretporez25.HasValue ?
                new ObjectParameter("VrijednostPretporez25", VrijednostPretporez25) :
                new ObjectParameter("VrijednostPretporez25", typeof(decimal));
    
            var iznosPretporez25Parameter = IznosPretporez25.HasValue ?
                new ObjectParameter("IznosPretporez25", IznosPretporez25) :
                new ObjectParameter("IznosPretporez25", typeof(decimal));
    
            var vrijednostPretporezUvozParameter = VrijednostPretporezUvoz.HasValue ?
                new ObjectParameter("VrijednostPretporezUvoz", VrijednostPretporezUvoz) :
                new ObjectParameter("VrijednostPretporezUvoz", typeof(decimal));
    
            var iznosPretporezUvozParameter = IznosPretporezUvoz.HasValue ?
                new ObjectParameter("IznosPretporezUvoz", IznosPretporezUvoz) :
                new ObjectParameter("IznosPretporezUvoz", typeof(decimal));
    
            var vrijednostPretporez10OdbitakNeParameter = VrijednostPretporez10OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakNe", VrijednostPretporez10OdbitakNe) :
                new ObjectParameter("VrijednostPretporez10OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez10OdbitakDaParameter = VrijednostPretporez10OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakDa", VrijednostPretporez10OdbitakDa) :
                new ObjectParameter("VrijednostPretporez10OdbitakDa", typeof(decimal));
    
            var iznosPretporez10ObitakDaParameter = IznosPretporez10ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez10ObitakDa", IznosPretporez10ObitakDa) :
                new ObjectParameter("IznosPretporez10ObitakDa", typeof(decimal));
    
            var vrijednostPretporez22OdbitakNeParameter = VrijednostPretporez22OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakNe", VrijednostPretporez22OdbitakNe) :
                new ObjectParameter("VrijednostPretporez22OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez22OdbitakDaParameter = VrijednostPretporez22OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakDa", VrijednostPretporez22OdbitakDa) :
                new ObjectParameter("VrijednostPretporez22OdbitakDa", typeof(decimal));
    
            var iznosPretporez22ObitakDaParameter = IznosPretporez22ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez22ObitakDa", IznosPretporez22ObitakDa) :
                new ObjectParameter("IznosPretporez22ObitakDa", typeof(decimal));
    
            var vrijednostPretporez23OdbitakNeParameter = VrijednostPretporez23OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakNe", VrijednostPretporez23OdbitakNe) :
                new ObjectParameter("VrijednostPretporez23OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez23OdbitakDaParameter = VrijednostPretporez23OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakDa", VrijednostPretporez23OdbitakDa) :
                new ObjectParameter("VrijednostPretporez23OdbitakDa", typeof(decimal));
    
            var iznosPretporez23ObitakDaParameter = IznosPretporez23ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez23ObitakDa", IznosPretporez23ObitakDa) :
                new ObjectParameter("IznosPretporez23ObitakDa", typeof(decimal));
    
            var vrijednostPretporez25OdbitakNeParameter = VrijednostPretporez25OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakNe", VrijednostPretporez25OdbitakNe) :
                new ObjectParameter("VrijednostPretporez25OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez25OdbitakDaParameter = VrijednostPretporez25OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakDa", VrijednostPretporez25OdbitakDa) :
                new ObjectParameter("VrijednostPretporez25OdbitakDa", typeof(decimal));
    
            var iznosPretporez25ObitakDaParameter = IznosPretporez25ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez25ObitakDa", IznosPretporez25ObitakDa) :
                new ObjectParameter("IznosPretporez25ObitakDa", typeof(decimal));
    
            var iznosPretporezIspravakParameter = IznosPretporezIspravak.HasValue ?
                new ObjectParameter("IznosPretporezIspravak", IznosPretporezIspravak) :
                new ObjectParameter("IznosPretporezIspravak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_INSERT", iD_ObrazacPDVParameter, porezniObveznikNazivParameter, porezniObveznikAdresaParameter, vrijednostNeoporezivoParameter, vrijednostOslobodenoIzvozParameter, vrijednostOslobodenoIsporukaParameter, vrijednostOslobodenoTuzemstvoParameter, vrijednostOslobodenoOstaloParameter, vrijednostPorez0Parameter, vrijednostPorez10Parameter, iznosPorez10Parameter, vrijednostPorez22Parameter, iznosPorez22Parameter, vrijednostPorez23Parameter, iznosPorez23Parameter, vrijednostPorez25Parameter, iznosPorez25Parameter, vrijednostPretporez10Parameter, iznosPretporez10Parameter, vrijednostPretporez22Parameter, iznosPretporez22Parameter, vrijednostPretporez23Parameter, iznosPretporez23Parameter, vrijednostPretporez25Parameter, iznosPretporez25Parameter, vrijednostPretporezUvozParameter, iznosPretporezUvozParameter, vrijednostPretporez10OdbitakNeParameter, vrijednostPretporez10OdbitakDaParameter, iznosPretporez10ObitakDaParameter, vrijednostPretporez22OdbitakNeParameter, vrijednostPretporez22OdbitakDaParameter, iznosPretporez22ObitakDaParameter, vrijednostPretporez23OdbitakNeParameter, vrijednostPretporez23OdbitakDaParameter, iznosPretporez23ObitakDaParameter, vrijednostPretporez25OdbitakNeParameter, vrijednostPretporez25OdbitakDaParameter, iznosPretporez25ObitakDaParameter, iznosPretporezIspravakParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_INSERT(long? ID_ObrazacPDV, string PorezniObveznikNaziv, string PorezniObveznikAdresa, decimal? VrijednostNeoporezivo, decimal? VrijednostOslobodenoIzvoz, decimal? VrijednostOslobodenoIsporuka, decimal? VrijednostOslobodenoTuzemstvo, decimal? VrijednostOslobodenoOstalo, decimal? VrijednostPorez0, decimal? VrijednostPorez10, decimal? IznosPorez10, decimal? VrijednostPorez22, decimal? IznosPorez22, decimal? VrijednostPorez23, decimal? IznosPorez23, decimal? VrijednostPorez25, decimal? IznosPorez25, decimal? VrijednostPretporez10, decimal? IznosPretporez10, decimal? VrijednostPretporez22, decimal? IznosPretporez22, decimal? VrijednostPretporez23, decimal? IznosPretporez23, decimal? VrijednostPretporez25, decimal? IznosPretporez25, decimal? VrijednostPretporezUvoz, decimal? IznosPretporezUvoz, decimal? VrijednostPretporez10OdbitakNe, decimal? VrijednostPretporez10OdbitakDa, decimal? IznosPretporez10ObitakDa, decimal? VrijednostPretporez22OdbitakNe, decimal? VrijednostPretporez22OdbitakDa, decimal? IznosPretporez22ObitakDa, decimal? VrijednostPretporez23OdbitakNe, decimal? VrijednostPretporez23OdbitakDa, decimal? IznosPretporez23ObitakDa, decimal? VrijednostPretporez25OdbitakNe, decimal? VrijednostPretporez25OdbitakDa, decimal? IznosPretporez25ObitakDa, decimal? IznosPretporezIspravak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var porezniObveznikNazivParameter = PorezniObveznikNaziv != null ?
                new ObjectParameter("PorezniObveznikNaziv", PorezniObveznikNaziv) :
                new ObjectParameter("PorezniObveznikNaziv", typeof(string));
    
            var porezniObveznikAdresaParameter = PorezniObveznikAdresa != null ?
                new ObjectParameter("PorezniObveznikAdresa", PorezniObveznikAdresa) :
                new ObjectParameter("PorezniObveznikAdresa", typeof(string));
    
            var vrijednostNeoporezivoParameter = VrijednostNeoporezivo.HasValue ?
                new ObjectParameter("VrijednostNeoporezivo", VrijednostNeoporezivo) :
                new ObjectParameter("VrijednostNeoporezivo", typeof(decimal));
    
            var vrijednostOslobodenoIzvozParameter = VrijednostOslobodenoIzvoz.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIzvoz", VrijednostOslobodenoIzvoz) :
                new ObjectParameter("VrijednostOslobodenoIzvoz", typeof(decimal));
    
            var vrijednostOslobodenoIsporukaParameter = VrijednostOslobodenoIsporuka.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIsporuka", VrijednostOslobodenoIsporuka) :
                new ObjectParameter("VrijednostOslobodenoIsporuka", typeof(decimal));
    
            var vrijednostOslobodenoTuzemstvoParameter = VrijednostOslobodenoTuzemstvo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", VrijednostOslobodenoTuzemstvo) :
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", typeof(decimal));
    
            var vrijednostOslobodenoOstaloParameter = VrijednostOslobodenoOstalo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoOstalo", VrijednostOslobodenoOstalo) :
                new ObjectParameter("VrijednostOslobodenoOstalo", typeof(decimal));
    
            var vrijednostPorez0Parameter = VrijednostPorez0.HasValue ?
                new ObjectParameter("VrijednostPorez0", VrijednostPorez0) :
                new ObjectParameter("VrijednostPorez0", typeof(decimal));
    
            var vrijednostPorez10Parameter = VrijednostPorez10.HasValue ?
                new ObjectParameter("VrijednostPorez10", VrijednostPorez10) :
                new ObjectParameter("VrijednostPorez10", typeof(decimal));
    
            var iznosPorez10Parameter = IznosPorez10.HasValue ?
                new ObjectParameter("IznosPorez10", IznosPorez10) :
                new ObjectParameter("IznosPorez10", typeof(decimal));
    
            var vrijednostPorez22Parameter = VrijednostPorez22.HasValue ?
                new ObjectParameter("VrijednostPorez22", VrijednostPorez22) :
                new ObjectParameter("VrijednostPorez22", typeof(decimal));
    
            var iznosPorez22Parameter = IznosPorez22.HasValue ?
                new ObjectParameter("IznosPorez22", IznosPorez22) :
                new ObjectParameter("IznosPorez22", typeof(decimal));
    
            var vrijednostPorez23Parameter = VrijednostPorez23.HasValue ?
                new ObjectParameter("VrijednostPorez23", VrijednostPorez23) :
                new ObjectParameter("VrijednostPorez23", typeof(decimal));
    
            var iznosPorez23Parameter = IznosPorez23.HasValue ?
                new ObjectParameter("IznosPorez23", IznosPorez23) :
                new ObjectParameter("IznosPorez23", typeof(decimal));
    
            var vrijednostPorez25Parameter = VrijednostPorez25.HasValue ?
                new ObjectParameter("VrijednostPorez25", VrijednostPorez25) :
                new ObjectParameter("VrijednostPorez25", typeof(decimal));
    
            var iznosPorez25Parameter = IznosPorez25.HasValue ?
                new ObjectParameter("IznosPorez25", IznosPorez25) :
                new ObjectParameter("IznosPorez25", typeof(decimal));
    
            var vrijednostPretporez10Parameter = VrijednostPretporez10.HasValue ?
                new ObjectParameter("VrijednostPretporez10", VrijednostPretporez10) :
                new ObjectParameter("VrijednostPretporez10", typeof(decimal));
    
            var iznosPretporez10Parameter = IznosPretporez10.HasValue ?
                new ObjectParameter("IznosPretporez10", IznosPretporez10) :
                new ObjectParameter("IznosPretporez10", typeof(decimal));
    
            var vrijednostPretporez22Parameter = VrijednostPretporez22.HasValue ?
                new ObjectParameter("VrijednostPretporez22", VrijednostPretporez22) :
                new ObjectParameter("VrijednostPretporez22", typeof(decimal));
    
            var iznosPretporez22Parameter = IznosPretporez22.HasValue ?
                new ObjectParameter("IznosPretporez22", IznosPretporez22) :
                new ObjectParameter("IznosPretporez22", typeof(decimal));
    
            var vrijednostPretporez23Parameter = VrijednostPretporez23.HasValue ?
                new ObjectParameter("VrijednostPretporez23", VrijednostPretporez23) :
                new ObjectParameter("VrijednostPretporez23", typeof(decimal));
    
            var iznosPretporez23Parameter = IznosPretporez23.HasValue ?
                new ObjectParameter("IznosPretporez23", IznosPretporez23) :
                new ObjectParameter("IznosPretporez23", typeof(decimal));
    
            var vrijednostPretporez25Parameter = VrijednostPretporez25.HasValue ?
                new ObjectParameter("VrijednostPretporez25", VrijednostPretporez25) :
                new ObjectParameter("VrijednostPretporez25", typeof(decimal));
    
            var iznosPretporez25Parameter = IznosPretporez25.HasValue ?
                new ObjectParameter("IznosPretporez25", IznosPretporez25) :
                new ObjectParameter("IznosPretporez25", typeof(decimal));
    
            var vrijednostPretporezUvozParameter = VrijednostPretporezUvoz.HasValue ?
                new ObjectParameter("VrijednostPretporezUvoz", VrijednostPretporezUvoz) :
                new ObjectParameter("VrijednostPretporezUvoz", typeof(decimal));
    
            var iznosPretporezUvozParameter = IznosPretporezUvoz.HasValue ?
                new ObjectParameter("IznosPretporezUvoz", IznosPretporezUvoz) :
                new ObjectParameter("IznosPretporezUvoz", typeof(decimal));
    
            var vrijednostPretporez10OdbitakNeParameter = VrijednostPretporez10OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakNe", VrijednostPretporez10OdbitakNe) :
                new ObjectParameter("VrijednostPretporez10OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez10OdbitakDaParameter = VrijednostPretporez10OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakDa", VrijednostPretporez10OdbitakDa) :
                new ObjectParameter("VrijednostPretporez10OdbitakDa", typeof(decimal));
    
            var iznosPretporez10ObitakDaParameter = IznosPretporez10ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez10ObitakDa", IznosPretporez10ObitakDa) :
                new ObjectParameter("IznosPretporez10ObitakDa", typeof(decimal));
    
            var vrijednostPretporez22OdbitakNeParameter = VrijednostPretporez22OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakNe", VrijednostPretporez22OdbitakNe) :
                new ObjectParameter("VrijednostPretporez22OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez22OdbitakDaParameter = VrijednostPretporez22OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakDa", VrijednostPretporez22OdbitakDa) :
                new ObjectParameter("VrijednostPretporez22OdbitakDa", typeof(decimal));
    
            var iznosPretporez22ObitakDaParameter = IznosPretporez22ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez22ObitakDa", IznosPretporez22ObitakDa) :
                new ObjectParameter("IznosPretporez22ObitakDa", typeof(decimal));
    
            var vrijednostPretporez23OdbitakNeParameter = VrijednostPretporez23OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakNe", VrijednostPretporez23OdbitakNe) :
                new ObjectParameter("VrijednostPretporez23OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez23OdbitakDaParameter = VrijednostPretporez23OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakDa", VrijednostPretporez23OdbitakDa) :
                new ObjectParameter("VrijednostPretporez23OdbitakDa", typeof(decimal));
    
            var iznosPretporez23ObitakDaParameter = IznosPretporez23ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez23ObitakDa", IznosPretporez23ObitakDa) :
                new ObjectParameter("IznosPretporez23ObitakDa", typeof(decimal));
    
            var vrijednostPretporez25OdbitakNeParameter = VrijednostPretporez25OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakNe", VrijednostPretporez25OdbitakNe) :
                new ObjectParameter("VrijednostPretporez25OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez25OdbitakDaParameter = VrijednostPretporez25OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakDa", VrijednostPretporez25OdbitakDa) :
                new ObjectParameter("VrijednostPretporez25OdbitakDa", typeof(decimal));
    
            var iznosPretporez25ObitakDaParameter = IznosPretporez25ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez25ObitakDa", IznosPretporez25ObitakDa) :
                new ObjectParameter("IznosPretporez25ObitakDa", typeof(decimal));
    
            var iznosPretporezIspravakParameter = IznosPretporezIspravak.HasValue ?
                new ObjectParameter("IznosPretporezIspravak", IznosPretporezIspravak) :
                new ObjectParameter("IznosPretporezIspravak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_INSERT", mergeOption, iD_ObrazacPDVParameter, porezniObveznikNazivParameter, porezniObveznikAdresaParameter, vrijednostNeoporezivoParameter, vrijednostOslobodenoIzvozParameter, vrijednostOslobodenoIsporukaParameter, vrijednostOslobodenoTuzemstvoParameter, vrijednostOslobodenoOstaloParameter, vrijednostPorez0Parameter, vrijednostPorez10Parameter, iznosPorez10Parameter, vrijednostPorez22Parameter, iznosPorez22Parameter, vrijednostPorez23Parameter, iznosPorez23Parameter, vrijednostPorez25Parameter, iznosPorez25Parameter, vrijednostPretporez10Parameter, iznosPretporez10Parameter, vrijednostPretporez22Parameter, iznosPretporez22Parameter, vrijednostPretporez23Parameter, iznosPretporez23Parameter, vrijednostPretporez25Parameter, iznosPretporez25Parameter, vrijednostPretporezUvozParameter, iznosPretporezUvozParameter, vrijednostPretporez10OdbitakNeParameter, vrijednostPretporez10OdbitakDaParameter, iznosPretporez10ObitakDaParameter, vrijednostPretporez22OdbitakNeParameter, vrijednostPretporez22OdbitakDaParameter, iznosPretporez22ObitakDaParameter, vrijednostPretporez23OdbitakNeParameter, vrijednostPretporez23OdbitakDaParameter, iznosPretporez23ObitakDaParameter, vrijednostPretporez25OdbitakNeParameter, vrijednostPretporez25OdbitakDaParameter, iznosPretporez25ObitakDaParameter, iznosPretporezIspravakParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_SELECT(long? ID_ObrazacPDV2012A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDV2012AParameter = ID_ObrazacPDV2012A.HasValue ?
                new ObjectParameter("ID_ObrazacPDV2012A", ID_ObrazacPDV2012A) :
                new ObjectParameter("ID_ObrazacPDV2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_SELECT", iD_ObrazacPDV2012AParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_SELECT(long? ID_ObrazacPDV2012A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDV2012AParameter = ID_ObrazacPDV2012A.HasValue ?
                new ObjectParameter("ID_ObrazacPDV2012A", ID_ObrazacPDV2012A) :
                new ObjectParameter("ID_ObrazacPDV2012A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_SELECT", mergeOption, iD_ObrazacPDV2012AParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_UPDATE(long? ID_ObrazacPDV2012A, long? ID_ObrazacPDV, string PorezniObveznikNaziv, string PorezniObveznikAdresa, decimal? VrijednostNeoporezivo, decimal? VrijednostOslobodenoIzvoz, decimal? VrijednostOslobodenoIsporuka, decimal? VrijednostOslobodenoTuzemstvo, decimal? VrijednostOslobodenoOstalo, decimal? VrijednostPorez0, decimal? VrijednostPorez10, decimal? IznosPorez10, decimal? VrijednostPorez22, decimal? IznosPorez22, decimal? VrijednostPorez23, decimal? IznosPorez23, decimal? VrijednostPorez25, decimal? IznosPorez25, decimal? VrijednostPretporez10, decimal? IznosPretporez10, decimal? VrijednostPretporez22, decimal? IznosPretporez22, decimal? VrijednostPretporez23, decimal? IznosPretporez23, decimal? VrijednostPretporez25, decimal? IznosPretporez25, decimal? VrijednostPretporezUvoz, decimal? IznosPretporezUvoz, decimal? VrijednostPretporez10OdbitakNe, decimal? VrijednostPretporez10OdbitakDa, decimal? IznosPretporez10ObitakDa, decimal? VrijednostPretporez22OdbitakNe, decimal? VrijednostPretporez22OdbitakDa, decimal? IznosPretporez22ObitakDa, decimal? VrijednostPretporez23OdbitakNe, decimal? VrijednostPretporez23OdbitakDa, decimal? IznosPretporez23ObitakDa, decimal? VrijednostPretporez25OdbitakNe, decimal? VrijednostPretporez25OdbitakDa, decimal? IznosPretporez25ObitakDa, decimal? IznosPretporezIspravak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDV2012AParameter = ID_ObrazacPDV2012A.HasValue ?
                new ObjectParameter("ID_ObrazacPDV2012A", ID_ObrazacPDV2012A) :
                new ObjectParameter("ID_ObrazacPDV2012A", typeof(long));
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var porezniObveznikNazivParameter = PorezniObveznikNaziv != null ?
                new ObjectParameter("PorezniObveznikNaziv", PorezniObveznikNaziv) :
                new ObjectParameter("PorezniObveznikNaziv", typeof(string));
    
            var porezniObveznikAdresaParameter = PorezniObveznikAdresa != null ?
                new ObjectParameter("PorezniObveznikAdresa", PorezniObveznikAdresa) :
                new ObjectParameter("PorezniObveznikAdresa", typeof(string));
    
            var vrijednostNeoporezivoParameter = VrijednostNeoporezivo.HasValue ?
                new ObjectParameter("VrijednostNeoporezivo", VrijednostNeoporezivo) :
                new ObjectParameter("VrijednostNeoporezivo", typeof(decimal));
    
            var vrijednostOslobodenoIzvozParameter = VrijednostOslobodenoIzvoz.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIzvoz", VrijednostOslobodenoIzvoz) :
                new ObjectParameter("VrijednostOslobodenoIzvoz", typeof(decimal));
    
            var vrijednostOslobodenoIsporukaParameter = VrijednostOslobodenoIsporuka.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIsporuka", VrijednostOslobodenoIsporuka) :
                new ObjectParameter("VrijednostOslobodenoIsporuka", typeof(decimal));
    
            var vrijednostOslobodenoTuzemstvoParameter = VrijednostOslobodenoTuzemstvo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", VrijednostOslobodenoTuzemstvo) :
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", typeof(decimal));
    
            var vrijednostOslobodenoOstaloParameter = VrijednostOslobodenoOstalo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoOstalo", VrijednostOslobodenoOstalo) :
                new ObjectParameter("VrijednostOslobodenoOstalo", typeof(decimal));
    
            var vrijednostPorez0Parameter = VrijednostPorez0.HasValue ?
                new ObjectParameter("VrijednostPorez0", VrijednostPorez0) :
                new ObjectParameter("VrijednostPorez0", typeof(decimal));
    
            var vrijednostPorez10Parameter = VrijednostPorez10.HasValue ?
                new ObjectParameter("VrijednostPorez10", VrijednostPorez10) :
                new ObjectParameter("VrijednostPorez10", typeof(decimal));
    
            var iznosPorez10Parameter = IznosPorez10.HasValue ?
                new ObjectParameter("IznosPorez10", IznosPorez10) :
                new ObjectParameter("IznosPorez10", typeof(decimal));
    
            var vrijednostPorez22Parameter = VrijednostPorez22.HasValue ?
                new ObjectParameter("VrijednostPorez22", VrijednostPorez22) :
                new ObjectParameter("VrijednostPorez22", typeof(decimal));
    
            var iznosPorez22Parameter = IznosPorez22.HasValue ?
                new ObjectParameter("IznosPorez22", IznosPorez22) :
                new ObjectParameter("IznosPorez22", typeof(decimal));
    
            var vrijednostPorez23Parameter = VrijednostPorez23.HasValue ?
                new ObjectParameter("VrijednostPorez23", VrijednostPorez23) :
                new ObjectParameter("VrijednostPorez23", typeof(decimal));
    
            var iznosPorez23Parameter = IznosPorez23.HasValue ?
                new ObjectParameter("IznosPorez23", IznosPorez23) :
                new ObjectParameter("IznosPorez23", typeof(decimal));
    
            var vrijednostPorez25Parameter = VrijednostPorez25.HasValue ?
                new ObjectParameter("VrijednostPorez25", VrijednostPorez25) :
                new ObjectParameter("VrijednostPorez25", typeof(decimal));
    
            var iznosPorez25Parameter = IznosPorez25.HasValue ?
                new ObjectParameter("IznosPorez25", IznosPorez25) :
                new ObjectParameter("IznosPorez25", typeof(decimal));
    
            var vrijednostPretporez10Parameter = VrijednostPretporez10.HasValue ?
                new ObjectParameter("VrijednostPretporez10", VrijednostPretporez10) :
                new ObjectParameter("VrijednostPretporez10", typeof(decimal));
    
            var iznosPretporez10Parameter = IznosPretporez10.HasValue ?
                new ObjectParameter("IznosPretporez10", IznosPretporez10) :
                new ObjectParameter("IznosPretporez10", typeof(decimal));
    
            var vrijednostPretporez22Parameter = VrijednostPretporez22.HasValue ?
                new ObjectParameter("VrijednostPretporez22", VrijednostPretporez22) :
                new ObjectParameter("VrijednostPretporez22", typeof(decimal));
    
            var iznosPretporez22Parameter = IznosPretporez22.HasValue ?
                new ObjectParameter("IznosPretporez22", IznosPretporez22) :
                new ObjectParameter("IznosPretporez22", typeof(decimal));
    
            var vrijednostPretporez23Parameter = VrijednostPretporez23.HasValue ?
                new ObjectParameter("VrijednostPretporez23", VrijednostPretporez23) :
                new ObjectParameter("VrijednostPretporez23", typeof(decimal));
    
            var iznosPretporez23Parameter = IznosPretporez23.HasValue ?
                new ObjectParameter("IznosPretporez23", IznosPretporez23) :
                new ObjectParameter("IznosPretporez23", typeof(decimal));
    
            var vrijednostPretporez25Parameter = VrijednostPretporez25.HasValue ?
                new ObjectParameter("VrijednostPretporez25", VrijednostPretporez25) :
                new ObjectParameter("VrijednostPretporez25", typeof(decimal));
    
            var iznosPretporez25Parameter = IznosPretporez25.HasValue ?
                new ObjectParameter("IznosPretporez25", IznosPretporez25) :
                new ObjectParameter("IznosPretporez25", typeof(decimal));
    
            var vrijednostPretporezUvozParameter = VrijednostPretporezUvoz.HasValue ?
                new ObjectParameter("VrijednostPretporezUvoz", VrijednostPretporezUvoz) :
                new ObjectParameter("VrijednostPretporezUvoz", typeof(decimal));
    
            var iznosPretporezUvozParameter = IznosPretporezUvoz.HasValue ?
                new ObjectParameter("IznosPretporezUvoz", IznosPretporezUvoz) :
                new ObjectParameter("IznosPretporezUvoz", typeof(decimal));
    
            var vrijednostPretporez10OdbitakNeParameter = VrijednostPretporez10OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakNe", VrijednostPretporez10OdbitakNe) :
                new ObjectParameter("VrijednostPretporez10OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez10OdbitakDaParameter = VrijednostPretporez10OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakDa", VrijednostPretporez10OdbitakDa) :
                new ObjectParameter("VrijednostPretporez10OdbitakDa", typeof(decimal));
    
            var iznosPretporez10ObitakDaParameter = IznosPretporez10ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez10ObitakDa", IznosPretporez10ObitakDa) :
                new ObjectParameter("IznosPretporez10ObitakDa", typeof(decimal));
    
            var vrijednostPretporez22OdbitakNeParameter = VrijednostPretporez22OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakNe", VrijednostPretporez22OdbitakNe) :
                new ObjectParameter("VrijednostPretporez22OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez22OdbitakDaParameter = VrijednostPretporez22OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakDa", VrijednostPretporez22OdbitakDa) :
                new ObjectParameter("VrijednostPretporez22OdbitakDa", typeof(decimal));
    
            var iznosPretporez22ObitakDaParameter = IznosPretporez22ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez22ObitakDa", IznosPretporez22ObitakDa) :
                new ObjectParameter("IznosPretporez22ObitakDa", typeof(decimal));
    
            var vrijednostPretporez23OdbitakNeParameter = VrijednostPretporez23OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakNe", VrijednostPretporez23OdbitakNe) :
                new ObjectParameter("VrijednostPretporez23OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez23OdbitakDaParameter = VrijednostPretporez23OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakDa", VrijednostPretporez23OdbitakDa) :
                new ObjectParameter("VrijednostPretporez23OdbitakDa", typeof(decimal));
    
            var iznosPretporez23ObitakDaParameter = IznosPretporez23ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez23ObitakDa", IznosPretporez23ObitakDa) :
                new ObjectParameter("IznosPretporez23ObitakDa", typeof(decimal));
    
            var vrijednostPretporez25OdbitakNeParameter = VrijednostPretporez25OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakNe", VrijednostPretporez25OdbitakNe) :
                new ObjectParameter("VrijednostPretporez25OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez25OdbitakDaParameter = VrijednostPretporez25OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakDa", VrijednostPretporez25OdbitakDa) :
                new ObjectParameter("VrijednostPretporez25OdbitakDa", typeof(decimal));
    
            var iznosPretporez25ObitakDaParameter = IznosPretporez25ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez25ObitakDa", IznosPretporez25ObitakDa) :
                new ObjectParameter("IznosPretporez25ObitakDa", typeof(decimal));
    
            var iznosPretporezIspravakParameter = IznosPretporezIspravak.HasValue ?
                new ObjectParameter("IznosPretporezIspravak", IznosPretporezIspravak) :
                new ObjectParameter("IznosPretporezIspravak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_UPDATE", iD_ObrazacPDV2012AParameter, iD_ObrazacPDVParameter, porezniObveznikNazivParameter, porezniObveznikAdresaParameter, vrijednostNeoporezivoParameter, vrijednostOslobodenoIzvozParameter, vrijednostOslobodenoIsporukaParameter, vrijednostOslobodenoTuzemstvoParameter, vrijednostOslobodenoOstaloParameter, vrijednostPorez0Parameter, vrijednostPorez10Parameter, iznosPorez10Parameter, vrijednostPorez22Parameter, iznosPorez22Parameter, vrijednostPorez23Parameter, iznosPorez23Parameter, vrijednostPorez25Parameter, iznosPorez25Parameter, vrijednostPretporez10Parameter, iznosPretporez10Parameter, vrijednostPretporez22Parameter, iznosPretporez22Parameter, vrijednostPretporez23Parameter, iznosPretporez23Parameter, vrijednostPretporez25Parameter, iznosPretporez25Parameter, vrijednostPretporezUvozParameter, iznosPretporezUvozParameter, vrijednostPretporez10OdbitakNeParameter, vrijednostPretporez10OdbitakDaParameter, iznosPretporez10ObitakDaParameter, vrijednostPretporez22OdbitakNeParameter, vrijednostPretporez22OdbitakDaParameter, iznosPretporez22ObitakDaParameter, vrijednostPretporez23OdbitakNeParameter, vrijednostPretporez23OdbitakDaParameter, iznosPretporez23ObitakDaParameter, vrijednostPretporez25OdbitakNeParameter, vrijednostPretporez25OdbitakDaParameter, iznosPretporez25ObitakDaParameter, iznosPretporezIspravakParameter);
        }
    
        public virtual ObjectResult<ObrazacPDV2012A> USP_ObrazacPDV2012A_UPDATE(long? ID_ObrazacPDV2012A, long? ID_ObrazacPDV, string PorezniObveznikNaziv, string PorezniObveznikAdresa, decimal? VrijednostNeoporezivo, decimal? VrijednostOslobodenoIzvoz, decimal? VrijednostOslobodenoIsporuka, decimal? VrijednostOslobodenoTuzemstvo, decimal? VrijednostOslobodenoOstalo, decimal? VrijednostPorez0, decimal? VrijednostPorez10, decimal? IznosPorez10, decimal? VrijednostPorez22, decimal? IznosPorez22, decimal? VrijednostPorez23, decimal? IznosPorez23, decimal? VrijednostPorez25, decimal? IznosPorez25, decimal? VrijednostPretporez10, decimal? IznosPretporez10, decimal? VrijednostPretporez22, decimal? IznosPretporez22, decimal? VrijednostPretporez23, decimal? IznosPretporez23, decimal? VrijednostPretporez25, decimal? IznosPretporez25, decimal? VrijednostPretporezUvoz, decimal? IznosPretporezUvoz, decimal? VrijednostPretporez10OdbitakNe, decimal? VrijednostPretporez10OdbitakDa, decimal? IznosPretporez10ObitakDa, decimal? VrijednostPretporez22OdbitakNe, decimal? VrijednostPretporez22OdbitakDa, decimal? IznosPretporez22ObitakDa, decimal? VrijednostPretporez23OdbitakNe, decimal? VrijednostPretporez23OdbitakDa, decimal? IznosPretporez23ObitakDa, decimal? VrijednostPretporez25OdbitakNe, decimal? VrijednostPretporez25OdbitakDa, decimal? IznosPretporez25ObitakDa, decimal? IznosPretporezIspravak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDV2012A).Assembly);
    
            var iD_ObrazacPDV2012AParameter = ID_ObrazacPDV2012A.HasValue ?
                new ObjectParameter("ID_ObrazacPDV2012A", ID_ObrazacPDV2012A) :
                new ObjectParameter("ID_ObrazacPDV2012A", typeof(long));
    
            var iD_ObrazacPDVParameter = ID_ObrazacPDV.HasValue ?
                new ObjectParameter("ID_ObrazacPDV", ID_ObrazacPDV) :
                new ObjectParameter("ID_ObrazacPDV", typeof(long));
    
            var porezniObveznikNazivParameter = PorezniObveznikNaziv != null ?
                new ObjectParameter("PorezniObveznikNaziv", PorezniObveznikNaziv) :
                new ObjectParameter("PorezniObveznikNaziv", typeof(string));
    
            var porezniObveznikAdresaParameter = PorezniObveznikAdresa != null ?
                new ObjectParameter("PorezniObveznikAdresa", PorezniObveznikAdresa) :
                new ObjectParameter("PorezniObveznikAdresa", typeof(string));
    
            var vrijednostNeoporezivoParameter = VrijednostNeoporezivo.HasValue ?
                new ObjectParameter("VrijednostNeoporezivo", VrijednostNeoporezivo) :
                new ObjectParameter("VrijednostNeoporezivo", typeof(decimal));
    
            var vrijednostOslobodenoIzvozParameter = VrijednostOslobodenoIzvoz.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIzvoz", VrijednostOslobodenoIzvoz) :
                new ObjectParameter("VrijednostOslobodenoIzvoz", typeof(decimal));
    
            var vrijednostOslobodenoIsporukaParameter = VrijednostOslobodenoIsporuka.HasValue ?
                new ObjectParameter("VrijednostOslobodenoIsporuka", VrijednostOslobodenoIsporuka) :
                new ObjectParameter("VrijednostOslobodenoIsporuka", typeof(decimal));
    
            var vrijednostOslobodenoTuzemstvoParameter = VrijednostOslobodenoTuzemstvo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", VrijednostOslobodenoTuzemstvo) :
                new ObjectParameter("VrijednostOslobodenoTuzemstvo", typeof(decimal));
    
            var vrijednostOslobodenoOstaloParameter = VrijednostOslobodenoOstalo.HasValue ?
                new ObjectParameter("VrijednostOslobodenoOstalo", VrijednostOslobodenoOstalo) :
                new ObjectParameter("VrijednostOslobodenoOstalo", typeof(decimal));
    
            var vrijednostPorez0Parameter = VrijednostPorez0.HasValue ?
                new ObjectParameter("VrijednostPorez0", VrijednostPorez0) :
                new ObjectParameter("VrijednostPorez0", typeof(decimal));
    
            var vrijednostPorez10Parameter = VrijednostPorez10.HasValue ?
                new ObjectParameter("VrijednostPorez10", VrijednostPorez10) :
                new ObjectParameter("VrijednostPorez10", typeof(decimal));
    
            var iznosPorez10Parameter = IznosPorez10.HasValue ?
                new ObjectParameter("IznosPorez10", IznosPorez10) :
                new ObjectParameter("IznosPorez10", typeof(decimal));
    
            var vrijednostPorez22Parameter = VrijednostPorez22.HasValue ?
                new ObjectParameter("VrijednostPorez22", VrijednostPorez22) :
                new ObjectParameter("VrijednostPorez22", typeof(decimal));
    
            var iznosPorez22Parameter = IznosPorez22.HasValue ?
                new ObjectParameter("IznosPorez22", IznosPorez22) :
                new ObjectParameter("IznosPorez22", typeof(decimal));
    
            var vrijednostPorez23Parameter = VrijednostPorez23.HasValue ?
                new ObjectParameter("VrijednostPorez23", VrijednostPorez23) :
                new ObjectParameter("VrijednostPorez23", typeof(decimal));
    
            var iznosPorez23Parameter = IznosPorez23.HasValue ?
                new ObjectParameter("IznosPorez23", IznosPorez23) :
                new ObjectParameter("IznosPorez23", typeof(decimal));
    
            var vrijednostPorez25Parameter = VrijednostPorez25.HasValue ?
                new ObjectParameter("VrijednostPorez25", VrijednostPorez25) :
                new ObjectParameter("VrijednostPorez25", typeof(decimal));
    
            var iznosPorez25Parameter = IznosPorez25.HasValue ?
                new ObjectParameter("IznosPorez25", IznosPorez25) :
                new ObjectParameter("IznosPorez25", typeof(decimal));
    
            var vrijednostPretporez10Parameter = VrijednostPretporez10.HasValue ?
                new ObjectParameter("VrijednostPretporez10", VrijednostPretporez10) :
                new ObjectParameter("VrijednostPretporez10", typeof(decimal));
    
            var iznosPretporez10Parameter = IznosPretporez10.HasValue ?
                new ObjectParameter("IznosPretporez10", IznosPretporez10) :
                new ObjectParameter("IznosPretporez10", typeof(decimal));
    
            var vrijednostPretporez22Parameter = VrijednostPretporez22.HasValue ?
                new ObjectParameter("VrijednostPretporez22", VrijednostPretporez22) :
                new ObjectParameter("VrijednostPretporez22", typeof(decimal));
    
            var iznosPretporez22Parameter = IznosPretporez22.HasValue ?
                new ObjectParameter("IznosPretporez22", IznosPretporez22) :
                new ObjectParameter("IznosPretporez22", typeof(decimal));
    
            var vrijednostPretporez23Parameter = VrijednostPretporez23.HasValue ?
                new ObjectParameter("VrijednostPretporez23", VrijednostPretporez23) :
                new ObjectParameter("VrijednostPretporez23", typeof(decimal));
    
            var iznosPretporez23Parameter = IznosPretporez23.HasValue ?
                new ObjectParameter("IznosPretporez23", IznosPretporez23) :
                new ObjectParameter("IznosPretporez23", typeof(decimal));
    
            var vrijednostPretporez25Parameter = VrijednostPretporez25.HasValue ?
                new ObjectParameter("VrijednostPretporez25", VrijednostPretporez25) :
                new ObjectParameter("VrijednostPretporez25", typeof(decimal));
    
            var iznosPretporez25Parameter = IznosPretporez25.HasValue ?
                new ObjectParameter("IznosPretporez25", IznosPretporez25) :
                new ObjectParameter("IznosPretporez25", typeof(decimal));
    
            var vrijednostPretporezUvozParameter = VrijednostPretporezUvoz.HasValue ?
                new ObjectParameter("VrijednostPretporezUvoz", VrijednostPretporezUvoz) :
                new ObjectParameter("VrijednostPretporezUvoz", typeof(decimal));
    
            var iznosPretporezUvozParameter = IznosPretporezUvoz.HasValue ?
                new ObjectParameter("IznosPretporezUvoz", IznosPretporezUvoz) :
                new ObjectParameter("IznosPretporezUvoz", typeof(decimal));
    
            var vrijednostPretporez10OdbitakNeParameter = VrijednostPretporez10OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakNe", VrijednostPretporez10OdbitakNe) :
                new ObjectParameter("VrijednostPretporez10OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez10OdbitakDaParameter = VrijednostPretporez10OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez10OdbitakDa", VrijednostPretporez10OdbitakDa) :
                new ObjectParameter("VrijednostPretporez10OdbitakDa", typeof(decimal));
    
            var iznosPretporez10ObitakDaParameter = IznosPretporez10ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez10ObitakDa", IznosPretporez10ObitakDa) :
                new ObjectParameter("IznosPretporez10ObitakDa", typeof(decimal));
    
            var vrijednostPretporez22OdbitakNeParameter = VrijednostPretporez22OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakNe", VrijednostPretporez22OdbitakNe) :
                new ObjectParameter("VrijednostPretporez22OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez22OdbitakDaParameter = VrijednostPretporez22OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez22OdbitakDa", VrijednostPretporez22OdbitakDa) :
                new ObjectParameter("VrijednostPretporez22OdbitakDa", typeof(decimal));
    
            var iznosPretporez22ObitakDaParameter = IznosPretporez22ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez22ObitakDa", IznosPretporez22ObitakDa) :
                new ObjectParameter("IznosPretporez22ObitakDa", typeof(decimal));
    
            var vrijednostPretporez23OdbitakNeParameter = VrijednostPretporez23OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakNe", VrijednostPretporez23OdbitakNe) :
                new ObjectParameter("VrijednostPretporez23OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez23OdbitakDaParameter = VrijednostPretporez23OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez23OdbitakDa", VrijednostPretporez23OdbitakDa) :
                new ObjectParameter("VrijednostPretporez23OdbitakDa", typeof(decimal));
    
            var iznosPretporez23ObitakDaParameter = IznosPretporez23ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez23ObitakDa", IznosPretporez23ObitakDa) :
                new ObjectParameter("IznosPretporez23ObitakDa", typeof(decimal));
    
            var vrijednostPretporez25OdbitakNeParameter = VrijednostPretporez25OdbitakNe.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakNe", VrijednostPretporez25OdbitakNe) :
                new ObjectParameter("VrijednostPretporez25OdbitakNe", typeof(decimal));
    
            var vrijednostPretporez25OdbitakDaParameter = VrijednostPretporez25OdbitakDa.HasValue ?
                new ObjectParameter("VrijednostPretporez25OdbitakDa", VrijednostPretporez25OdbitakDa) :
                new ObjectParameter("VrijednostPretporez25OdbitakDa", typeof(decimal));
    
            var iznosPretporez25ObitakDaParameter = IznosPretporez25ObitakDa.HasValue ?
                new ObjectParameter("IznosPretporez25ObitakDa", IznosPretporez25ObitakDa) :
                new ObjectParameter("IznosPretporez25ObitakDa", typeof(decimal));
    
            var iznosPretporezIspravakParameter = IznosPretporezIspravak.HasValue ?
                new ObjectParameter("IznosPretporezIspravak", IznosPretporezIspravak) :
                new ObjectParameter("IznosPretporezIspravak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDV2012A>("USP_ObrazacPDV2012A_UPDATE", mergeOption, iD_ObrazacPDV2012AParameter, iD_ObrazacPDVParameter, porezniObveznikNazivParameter, porezniObveznikAdresaParameter, vrijednostNeoporezivoParameter, vrijednostOslobodenoIzvozParameter, vrijednostOslobodenoIsporukaParameter, vrijednostOslobodenoTuzemstvoParameter, vrijednostOslobodenoOstaloParameter, vrijednostPorez0Parameter, vrijednostPorez10Parameter, iznosPorez10Parameter, vrijednostPorez22Parameter, iznosPorez22Parameter, vrijednostPorez23Parameter, iznosPorez23Parameter, vrijednostPorez25Parameter, iznosPorez25Parameter, vrijednostPretporez10Parameter, iznosPretporez10Parameter, vrijednostPretporez22Parameter, iznosPretporez22Parameter, vrijednostPretporez23Parameter, iznosPretporez23Parameter, vrijednostPretporez25Parameter, iznosPretporez25Parameter, vrijednostPretporezUvozParameter, iznosPretporezUvozParameter, vrijednostPretporez10OdbitakNeParameter, vrijednostPretporez10OdbitakDaParameter, iznosPretporez10ObitakDaParameter, vrijednostPretporez22OdbitakNeParameter, vrijednostPretporez22OdbitakDaParameter, iznosPretporez22ObitakDaParameter, vrijednostPretporez23OdbitakNeParameter, vrijednostPretporez23OdbitakDaParameter, iznosPretporez23ObitakDaParameter, vrijednostPretporez25OdbitakNeParameter, vrijednostPretporez25OdbitakDaParameter, iznosPretporez25ObitakDaParameter, iznosPretporezIspravakParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacPDVK_DELETE(long? ID_ObrazacPDVK)
        {
            var iD_ObrazacPDVKParameter = ID_ObrazacPDVK.HasValue ?
                new ObjectParameter("ID_ObrazacPDVK", ID_ObrazacPDVK) :
                new ObjectParameter("ID_ObrazacPDVK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacPDVK_DELETE", iD_ObrazacPDVKParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_INSERT", iD_ZapisParameter, iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_INSERT(long? ID_Zapis, long? ID_PoslovnaGodina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_SELECT(long? ID_ObrazacPDVK)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ObrazacPDVKParameter = ID_ObrazacPDVK.HasValue ?
                new ObjectParameter("ID_ObrazacPDVK", ID_ObrazacPDVK) :
                new ObjectParameter("ID_ObrazacPDVK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_SELECT", iD_ObrazacPDVKParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_SELECT(long? ID_ObrazacPDVK, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ObrazacPDVKParameter = ID_ObrazacPDVK.HasValue ?
                new ObjectParameter("ID_ObrazacPDVK", ID_ObrazacPDVK) :
                new ObjectParameter("ID_ObrazacPDVK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_SELECT", mergeOption, iD_ObrazacPDVKParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_UPDATE(long? ID_ObrazacPDVK, long? ID_Zapis, long? ID_PoslovnaGodina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ObrazacPDVKParameter = ID_ObrazacPDVK.HasValue ?
                new ObjectParameter("ID_ObrazacPDVK", ID_ObrazacPDVK) :
                new ObjectParameter("ID_ObrazacPDVK", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_UPDATE", iD_ObrazacPDVKParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<ObrazacPDVK> USP_ObrazacPDVK_UPDATE(long? ID_ObrazacPDVK, long? ID_Zapis, long? ID_PoslovnaGodina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPDVK).Assembly);
    
            var iD_ObrazacPDVKParameter = ID_ObrazacPDVK.HasValue ?
                new ObjectParameter("ID_ObrazacPDVK", ID_ObrazacPDVK) :
                new ObjectParameter("ID_ObrazacPDVK", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPDVK>("USP_ObrazacPDVK_UPDATE", mergeOption, iD_ObrazacPDVKParameter, iD_ZapisParameter, iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacPolje_DELETE(long? ID_ObrazacPolje)
        {
            var iD_ObrazacPoljeParameter = ID_ObrazacPolje.HasValue ?
                new ObjectParameter("ID_ObrazacPolje", ID_ObrazacPolje) :
                new ObjectParameter("ID_ObrazacPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacPolje_DELETE", iD_ObrazacPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_INSERT(long? ID_Obrazac, int? Redak, long? ID_ObrazacVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var redakParameter = Redak.HasValue ?
                new ObjectParameter("Redak", Redak) :
                new ObjectParameter("Redak", typeof(int));
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_INSERT", iD_ObrazacParameter, redakParameter, iD_ObrazacVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_INSERT(long? ID_Obrazac, int? Redak, long? ID_ObrazacVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var redakParameter = Redak.HasValue ?
                new ObjectParameter("Redak", Redak) :
                new ObjectParameter("Redak", typeof(int));
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_INSERT", mergeOption, iD_ObrazacParameter, redakParameter, iD_ObrazacVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_SELECT(long? ID_ObrazacPolje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacPoljeParameter = ID_ObrazacPolje.HasValue ?
                new ObjectParameter("ID_ObrazacPolje", ID_ObrazacPolje) :
                new ObjectParameter("ID_ObrazacPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_SELECT", iD_ObrazacPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_SELECT(long? ID_ObrazacPolje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacPoljeParameter = ID_ObrazacPolje.HasValue ?
                new ObjectParameter("ID_ObrazacPolje", ID_ObrazacPolje) :
                new ObjectParameter("ID_ObrazacPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_SELECT", mergeOption, iD_ObrazacPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_UPDATE(long? ID_ObrazacPolje, long? ID_Obrazac, int? Redak, long? ID_ObrazacVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacPoljeParameter = ID_ObrazacPolje.HasValue ?
                new ObjectParameter("ID_ObrazacPolje", ID_ObrazacPolje) :
                new ObjectParameter("ID_ObrazacPolje", typeof(long));
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var redakParameter = Redak.HasValue ?
                new ObjectParameter("Redak", Redak) :
                new ObjectParameter("Redak", typeof(int));
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_UPDATE", iD_ObrazacPoljeParameter, iD_ObrazacParameter, redakParameter, iD_ObrazacVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter);
        }
    
        public virtual ObjectResult<ObrazacPolje> USP_ObrazacPolje_UPDATE(long? ID_ObrazacPolje, long? ID_Obrazac, int? Redak, long? ID_ObrazacVrPolje, bool? ValueBit, string ValueString, int? ValueInt, decimal? ValueMoney, DateTime? ValueDate, TimeSpan? ValueTime, DateTime? ValueDateTime, decimal? ValueDecimal, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacPolje).Assembly);
    
            var iD_ObrazacPoljeParameter = ID_ObrazacPolje.HasValue ?
                new ObjectParameter("ID_ObrazacPolje", ID_ObrazacPolje) :
                new ObjectParameter("ID_ObrazacPolje", typeof(long));
    
            var iD_ObrazacParameter = ID_Obrazac.HasValue ?
                new ObjectParameter("ID_Obrazac", ID_Obrazac) :
                new ObjectParameter("ID_Obrazac", typeof(long));
    
            var redakParameter = Redak.HasValue ?
                new ObjectParameter("Redak", Redak) :
                new ObjectParameter("Redak", typeof(int));
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var valueBitParameter = ValueBit.HasValue ?
                new ObjectParameter("ValueBit", ValueBit) :
                new ObjectParameter("ValueBit", typeof(bool));
    
            var valueStringParameter = ValueString != null ?
                new ObjectParameter("ValueString", ValueString) :
                new ObjectParameter("ValueString", typeof(string));
    
            var valueIntParameter = ValueInt.HasValue ?
                new ObjectParameter("ValueInt", ValueInt) :
                new ObjectParameter("ValueInt", typeof(int));
    
            var valueMoneyParameter = ValueMoney.HasValue ?
                new ObjectParameter("ValueMoney", ValueMoney) :
                new ObjectParameter("ValueMoney", typeof(decimal));
    
            var valueDateParameter = ValueDate.HasValue ?
                new ObjectParameter("ValueDate", ValueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var valueTimeParameter = ValueTime.HasValue ?
                new ObjectParameter("ValueTime", ValueTime) :
                new ObjectParameter("ValueTime", typeof(System.TimeSpan));
    
            var valueDateTimeParameter = ValueDateTime.HasValue ?
                new ObjectParameter("ValueDateTime", ValueDateTime) :
                new ObjectParameter("ValueDateTime", typeof(System.DateTime));
    
            var valueDecimalParameter = ValueDecimal.HasValue ?
                new ObjectParameter("ValueDecimal", ValueDecimal) :
                new ObjectParameter("ValueDecimal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacPolje>("USP_ObrazacPolje_UPDATE", mergeOption, iD_ObrazacPoljeParameter, iD_ObrazacParameter, redakParameter, iD_ObrazacVrPoljeParameter, valueBitParameter, valueStringParameter, valueIntParameter, valueMoneyParameter, valueDateParameter, valueTimeParameter, valueDateTimeParameter, valueDecimalParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSm_DELETE(long? ID_ObrazacRSm)
        {
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSm_DELETE", iD_ObrazacRSmParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_INSERT(long? ID_Zapis, long? ID_Dohodak, int? IDObrazacRSmVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_INSERT", iD_ZapisParameter, iD_DohodakParameter, iDObrazacRSmVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_INSERT(long? ID_Zapis, long? ID_Dohodak, int? IDObrazacRSmVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_INSERT", mergeOption, iD_ZapisParameter, iD_DohodakParameter, iDObrazacRSmVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_SELECT(long? ID_ObrazacRSm)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_SELECT", iD_ObrazacRSmParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_SELECT(long? ID_ObrazacRSm, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_SELECT", mergeOption, iD_ObrazacRSmParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_UPDATE(long? ID_ObrazacRSm, long? ID_Zapis, long? ID_Dohodak, int? IDObrazacRSmVerzija, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_UPDATE", iD_ObrazacRSmParameter, iD_ZapisParameter, iD_DohodakParameter, iDObrazacRSmVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSm> USP_ObrazacRSm_UPDATE(long? ID_ObrazacRSm, long? ID_Zapis, long? ID_Dohodak, int? IDObrazacRSmVerzija, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSm).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DohodakParameter = ID_Dohodak.HasValue ?
                new ObjectParameter("ID_Dohodak", ID_Dohodak) :
                new ObjectParameter("ID_Dohodak", typeof(long));
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSm>("USP_ObrazacRSm_UPDATE", mergeOption, iD_ObrazacRSmParameter, iD_ZapisParameter, iD_DohodakParameter, iDObrazacRSmVerzijaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmA2005A_DELETE(long? ID_ObrazacRSmA2005A)
        {
            var iD_ObrazacRSmA2005AParameter = ID_ObrazacRSmA2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmA2005A", ID_ObrazacRSmA2005A) :
                new ObjectParameter("ID_ObrazacRSmA2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmA2005A_DELETE", iD_ObrazacRSmA2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_INSERT(long? ID_ObrazacRSm, string Identifikator, string Mjesec, string Godina, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var identifikatorParameter = Identifikator != null ?
                new ObjectParameter("Identifikator", Identifikator) :
                new ObjectParameter("Identifikator", typeof(string));
    
            var mjesecParameter = Mjesec != null ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(string));
    
            var godinaParameter = Godina != null ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(string));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_INSERT", iD_ObrazacRSmParameter, identifikatorParameter, mjesecParameter, godinaParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_INSERT(long? ID_ObrazacRSm, string Identifikator, string Mjesec, string Godina, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var identifikatorParameter = Identifikator != null ?
                new ObjectParameter("Identifikator", Identifikator) :
                new ObjectParameter("Identifikator", typeof(string));
    
            var mjesecParameter = Mjesec != null ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(string));
    
            var godinaParameter = Godina != null ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(string));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_INSERT", mergeOption, iD_ObrazacRSmParameter, identifikatorParameter, mjesecParameter, godinaParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_SELECT(long? ID_ObrazacRSmA2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmA2005AParameter = ID_ObrazacRSmA2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmA2005A", ID_ObrazacRSmA2005A) :
                new ObjectParameter("ID_ObrazacRSmA2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_SELECT", iD_ObrazacRSmA2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_SELECT(long? ID_ObrazacRSmA2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmA2005AParameter = ID_ObrazacRSmA2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmA2005A", ID_ObrazacRSmA2005A) :
                new ObjectParameter("ID_ObrazacRSmA2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_SELECT", mergeOption, iD_ObrazacRSmA2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_UPDATE(long? ID_ObrazacRSmA2005A, long? ID_ObrazacRSm, string Identifikator, string Mjesec, string Godina, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmA2005AParameter = ID_ObrazacRSmA2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmA2005A", ID_ObrazacRSmA2005A) :
                new ObjectParameter("ID_ObrazacRSmA2005A", typeof(long));
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var identifikatorParameter = Identifikator != null ?
                new ObjectParameter("Identifikator", Identifikator) :
                new ObjectParameter("Identifikator", typeof(string));
    
            var mjesecParameter = Mjesec != null ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(string));
    
            var godinaParameter = Godina != null ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(string));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_UPDATE", iD_ObrazacRSmA2005AParameter, iD_ObrazacRSmParameter, identifikatorParameter, mjesecParameter, godinaParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmA2005A> USP_ObrazacRSmA2005A_UPDATE(long? ID_ObrazacRSmA2005A, long? ID_ObrazacRSm, string Identifikator, string Mjesec, string Godina, int? BrojOsiguranika, string ObveznikNaziv, string ObveznikAdresa, string ObveznikIdentifikacijskiBroj, string ObveznikVrsta, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, string GodinaIsplataDohodak, string MjesecIsplataDohodak, string Hash, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmA2005A).Assembly);
    
            var iD_ObrazacRSmA2005AParameter = ID_ObrazacRSmA2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmA2005A", ID_ObrazacRSmA2005A) :
                new ObjectParameter("ID_ObrazacRSmA2005A", typeof(long));
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var identifikatorParameter = Identifikator != null ?
                new ObjectParameter("Identifikator", Identifikator) :
                new ObjectParameter("Identifikator", typeof(string));
    
            var mjesecParameter = Mjesec != null ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(string));
    
            var godinaParameter = Godina != null ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(string));
    
            var brojOsiguranikaParameter = BrojOsiguranika.HasValue ?
                new ObjectParameter("BrojOsiguranika", BrojOsiguranika) :
                new ObjectParameter("BrojOsiguranika", typeof(int));
    
            var obveznikNazivParameter = ObveznikNaziv != null ?
                new ObjectParameter("ObveznikNaziv", ObveznikNaziv) :
                new ObjectParameter("ObveznikNaziv", typeof(string));
    
            var obveznikAdresaParameter = ObveznikAdresa != null ?
                new ObjectParameter("ObveznikAdresa", ObveznikAdresa) :
                new ObjectParameter("ObveznikAdresa", typeof(string));
    
            var obveznikIdentifikacijskiBrojParameter = ObveznikIdentifikacijskiBroj != null ?
                new ObjectParameter("ObveznikIdentifikacijskiBroj", ObveznikIdentifikacijskiBroj) :
                new ObjectParameter("ObveznikIdentifikacijskiBroj", typeof(string));
    
            var obveznikVrstaParameter = ObveznikVrsta != null ?
                new ObjectParameter("ObveznikVrsta", ObveznikVrsta) :
                new ObjectParameter("ObveznikVrsta", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            var godinaIsplataDohodakParameter = GodinaIsplataDohodak != null ?
                new ObjectParameter("GodinaIsplataDohodak", GodinaIsplataDohodak) :
                new ObjectParameter("GodinaIsplataDohodak", typeof(string));
    
            var mjesecIsplataDohodakParameter = MjesecIsplataDohodak != null ?
                new ObjectParameter("MjesecIsplataDohodak", MjesecIsplataDohodak) :
                new ObjectParameter("MjesecIsplataDohodak", typeof(string));
    
            var hashParameter = Hash != null ?
                new ObjectParameter("Hash", Hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmA2005A>("USP_ObrazacRSmA2005A_UPDATE", mergeOption, iD_ObrazacRSmA2005AParameter, iD_ObrazacRSmParameter, identifikatorParameter, mjesecParameter, godinaParameter, brojOsiguranikaParameter, obveznikNazivParameter, obveznikAdresaParameter, obveznikIdentifikacijskiBrojParameter, obveznikVrstaParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter, godinaIsplataDohodakParameter, mjesecIsplataDohodakParameter, hashParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmB2005A_DELETE(long? ID_ObrazacRSmB2005A)
        {
            var iD_ObrazacRSmB2005AParameter = ID_ObrazacRSmB2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmB2005A", ID_ObrazacRSmB2005A) :
                new ObjectParameter("ID_ObrazacRSmB2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmB2005A_DELETE", iD_ObrazacRSmB2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_INSERT(long? ID_ObrazacRSm, int? RedniBroj, long? ID_Osoba, string OsiguranikIdentifikacijskiBroj, string OsiguranikPrezime, string OsiguranikIme, long? ID_Opcina, string SifraOpcina, int? ObrazacRSm2005OsnovaOsiguranja, string OsnovaOsiguranja, int? ObrazacRSm2005StazSPovecanimTrajanjem, string StazSPovecanimTrajanjem, string RazdobljeOd, string RazdobljeDo, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var osiguranikIdentifikacijskiBrojParameter = OsiguranikIdentifikacijskiBroj != null ?
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", OsiguranikIdentifikacijskiBroj) :
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", typeof(string));
    
            var osiguranikPrezimeParameter = OsiguranikPrezime != null ?
                new ObjectParameter("OsiguranikPrezime", OsiguranikPrezime) :
                new ObjectParameter("OsiguranikPrezime", typeof(string));
    
            var osiguranikImeParameter = OsiguranikIme != null ?
                new ObjectParameter("OsiguranikIme", OsiguranikIme) :
                new ObjectParameter("OsiguranikIme", typeof(string));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var obrazacRSm2005OsnovaOsiguranjaParameter = ObrazacRSm2005OsnovaOsiguranja.HasValue ?
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", ObrazacRSm2005OsnovaOsiguranja) :
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", typeof(int));
    
            var osnovaOsiguranjaParameter = OsnovaOsiguranja != null ?
                new ObjectParameter("OsnovaOsiguranja", OsnovaOsiguranja) :
                new ObjectParameter("OsnovaOsiguranja", typeof(string));
    
            var obrazacRSm2005StazSPovecanimTrajanjemParameter = ObrazacRSm2005StazSPovecanimTrajanjem.HasValue ?
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", ObrazacRSm2005StazSPovecanimTrajanjem) :
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", typeof(int));
    
            var stazSPovecanimTrajanjemParameter = StazSPovecanimTrajanjem != null ?
                new ObjectParameter("StazSPovecanimTrajanjem", StazSPovecanimTrajanjem) :
                new ObjectParameter("StazSPovecanimTrajanjem", typeof(string));
    
            var razdobljeOdParameter = RazdobljeOd != null ?
                new ObjectParameter("RazdobljeOd", RazdobljeOd) :
                new ObjectParameter("RazdobljeOd", typeof(string));
    
            var razdobljeDoParameter = RazdobljeDo != null ?
                new ObjectParameter("RazdobljeDo", RazdobljeDo) :
                new ObjectParameter("RazdobljeDo", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_INSERT", iD_ObrazacRSmParameter, redniBrojParameter, iD_OsobaParameter, osiguranikIdentifikacijskiBrojParameter, osiguranikPrezimeParameter, osiguranikImeParameter, iD_OpcinaParameter, sifraOpcinaParameter, obrazacRSm2005OsnovaOsiguranjaParameter, osnovaOsiguranjaParameter, obrazacRSm2005StazSPovecanimTrajanjemParameter, stazSPovecanimTrajanjemParameter, razdobljeOdParameter, razdobljeDoParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_INSERT(long? ID_ObrazacRSm, int? RedniBroj, long? ID_Osoba, string OsiguranikIdentifikacijskiBroj, string OsiguranikPrezime, string OsiguranikIme, long? ID_Opcina, string SifraOpcina, int? ObrazacRSm2005OsnovaOsiguranja, string OsnovaOsiguranja, int? ObrazacRSm2005StazSPovecanimTrajanjem, string StazSPovecanimTrajanjem, string RazdobljeOd, string RazdobljeDo, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var osiguranikIdentifikacijskiBrojParameter = OsiguranikIdentifikacijskiBroj != null ?
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", OsiguranikIdentifikacijskiBroj) :
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", typeof(string));
    
            var osiguranikPrezimeParameter = OsiguranikPrezime != null ?
                new ObjectParameter("OsiguranikPrezime", OsiguranikPrezime) :
                new ObjectParameter("OsiguranikPrezime", typeof(string));
    
            var osiguranikImeParameter = OsiguranikIme != null ?
                new ObjectParameter("OsiguranikIme", OsiguranikIme) :
                new ObjectParameter("OsiguranikIme", typeof(string));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var obrazacRSm2005OsnovaOsiguranjaParameter = ObrazacRSm2005OsnovaOsiguranja.HasValue ?
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", ObrazacRSm2005OsnovaOsiguranja) :
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", typeof(int));
    
            var osnovaOsiguranjaParameter = OsnovaOsiguranja != null ?
                new ObjectParameter("OsnovaOsiguranja", OsnovaOsiguranja) :
                new ObjectParameter("OsnovaOsiguranja", typeof(string));
    
            var obrazacRSm2005StazSPovecanimTrajanjemParameter = ObrazacRSm2005StazSPovecanimTrajanjem.HasValue ?
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", ObrazacRSm2005StazSPovecanimTrajanjem) :
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", typeof(int));
    
            var stazSPovecanimTrajanjemParameter = StazSPovecanimTrajanjem != null ?
                new ObjectParameter("StazSPovecanimTrajanjem", StazSPovecanimTrajanjem) :
                new ObjectParameter("StazSPovecanimTrajanjem", typeof(string));
    
            var razdobljeOdParameter = RazdobljeOd != null ?
                new ObjectParameter("RazdobljeOd", RazdobljeOd) :
                new ObjectParameter("RazdobljeOd", typeof(string));
    
            var razdobljeDoParameter = RazdobljeDo != null ?
                new ObjectParameter("RazdobljeDo", RazdobljeDo) :
                new ObjectParameter("RazdobljeDo", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_INSERT", mergeOption, iD_ObrazacRSmParameter, redniBrojParameter, iD_OsobaParameter, osiguranikIdentifikacijskiBrojParameter, osiguranikPrezimeParameter, osiguranikImeParameter, iD_OpcinaParameter, sifraOpcinaParameter, obrazacRSm2005OsnovaOsiguranjaParameter, osnovaOsiguranjaParameter, obrazacRSm2005StazSPovecanimTrajanjemParameter, stazSPovecanimTrajanjemParameter, razdobljeOdParameter, razdobljeDoParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_SELECT(long? ID_ObrazacRSmB2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmB2005AParameter = ID_ObrazacRSmB2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmB2005A", ID_ObrazacRSmB2005A) :
                new ObjectParameter("ID_ObrazacRSmB2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_SELECT", iD_ObrazacRSmB2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_SELECT(long? ID_ObrazacRSmB2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmB2005AParameter = ID_ObrazacRSmB2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmB2005A", ID_ObrazacRSmB2005A) :
                new ObjectParameter("ID_ObrazacRSmB2005A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_SELECT", mergeOption, iD_ObrazacRSmB2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_UPDATE(long? ID_ObrazacRSmB2005A, long? ID_ObrazacRSm, int? RedniBroj, long? ID_Osoba, string OsiguranikIdentifikacijskiBroj, string OsiguranikPrezime, string OsiguranikIme, long? ID_Opcina, string SifraOpcina, int? ObrazacRSm2005OsnovaOsiguranja, string OsnovaOsiguranja, int? ObrazacRSm2005StazSPovecanimTrajanjem, string StazSPovecanimTrajanjem, string RazdobljeOd, string RazdobljeDo, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmB2005AParameter = ID_ObrazacRSmB2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmB2005A", ID_ObrazacRSmB2005A) :
                new ObjectParameter("ID_ObrazacRSmB2005A", typeof(long));
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var osiguranikIdentifikacijskiBrojParameter = OsiguranikIdentifikacijskiBroj != null ?
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", OsiguranikIdentifikacijskiBroj) :
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", typeof(string));
    
            var osiguranikPrezimeParameter = OsiguranikPrezime != null ?
                new ObjectParameter("OsiguranikPrezime", OsiguranikPrezime) :
                new ObjectParameter("OsiguranikPrezime", typeof(string));
    
            var osiguranikImeParameter = OsiguranikIme != null ?
                new ObjectParameter("OsiguranikIme", OsiguranikIme) :
                new ObjectParameter("OsiguranikIme", typeof(string));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var obrazacRSm2005OsnovaOsiguranjaParameter = ObrazacRSm2005OsnovaOsiguranja.HasValue ?
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", ObrazacRSm2005OsnovaOsiguranja) :
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", typeof(int));
    
            var osnovaOsiguranjaParameter = OsnovaOsiguranja != null ?
                new ObjectParameter("OsnovaOsiguranja", OsnovaOsiguranja) :
                new ObjectParameter("OsnovaOsiguranja", typeof(string));
    
            var obrazacRSm2005StazSPovecanimTrajanjemParameter = ObrazacRSm2005StazSPovecanimTrajanjem.HasValue ?
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", ObrazacRSm2005StazSPovecanimTrajanjem) :
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", typeof(int));
    
            var stazSPovecanimTrajanjemParameter = StazSPovecanimTrajanjem != null ?
                new ObjectParameter("StazSPovecanimTrajanjem", StazSPovecanimTrajanjem) :
                new ObjectParameter("StazSPovecanimTrajanjem", typeof(string));
    
            var razdobljeOdParameter = RazdobljeOd != null ?
                new ObjectParameter("RazdobljeOd", RazdobljeOd) :
                new ObjectParameter("RazdobljeOd", typeof(string));
    
            var razdobljeDoParameter = RazdobljeDo != null ?
                new ObjectParameter("RazdobljeDo", RazdobljeDo) :
                new ObjectParameter("RazdobljeDo", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_UPDATE", iD_ObrazacRSmB2005AParameter, iD_ObrazacRSmParameter, redniBrojParameter, iD_OsobaParameter, osiguranikIdentifikacijskiBrojParameter, osiguranikPrezimeParameter, osiguranikImeParameter, iD_OpcinaParameter, sifraOpcinaParameter, obrazacRSm2005OsnovaOsiguranjaParameter, osnovaOsiguranjaParameter, obrazacRSm2005StazSPovecanimTrajanjemParameter, stazSPovecanimTrajanjemParameter, razdobljeOdParameter, razdobljeDoParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmB2005A> USP_ObrazacRSmB2005A_UPDATE(long? ID_ObrazacRSmB2005A, long? ID_ObrazacRSm, int? RedniBroj, long? ID_Osoba, string OsiguranikIdentifikacijskiBroj, string OsiguranikPrezime, string OsiguranikIme, long? ID_Opcina, string SifraOpcina, int? ObrazacRSm2005OsnovaOsiguranja, string OsnovaOsiguranja, int? ObrazacRSm2005StazSPovecanimTrajanjem, string StazSPovecanimTrajanjem, string RazdobljeOd, string RazdobljeDo, decimal? IznosObracunDohodak, decimal? IznosDoprinosOsnova, decimal? IznosDoprinosMIO1, decimal? IznosDoprinosMIO2, decimal? IznosIsplataDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmB2005A).Assembly);
    
            var iD_ObrazacRSmB2005AParameter = ID_ObrazacRSmB2005A.HasValue ?
                new ObjectParameter("ID_ObrazacRSmB2005A", ID_ObrazacRSmB2005A) :
                new ObjectParameter("ID_ObrazacRSmB2005A", typeof(long));
    
            var iD_ObrazacRSmParameter = ID_ObrazacRSm.HasValue ?
                new ObjectParameter("ID_ObrazacRSm", ID_ObrazacRSm) :
                new ObjectParameter("ID_ObrazacRSm", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var osiguranikIdentifikacijskiBrojParameter = OsiguranikIdentifikacijskiBroj != null ?
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", OsiguranikIdentifikacijskiBroj) :
                new ObjectParameter("OsiguranikIdentifikacijskiBroj", typeof(string));
    
            var osiguranikPrezimeParameter = OsiguranikPrezime != null ?
                new ObjectParameter("OsiguranikPrezime", OsiguranikPrezime) :
                new ObjectParameter("OsiguranikPrezime", typeof(string));
    
            var osiguranikImeParameter = OsiguranikIme != null ?
                new ObjectParameter("OsiguranikIme", OsiguranikIme) :
                new ObjectParameter("OsiguranikIme", typeof(string));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var sifraOpcinaParameter = SifraOpcina != null ?
                new ObjectParameter("SifraOpcina", SifraOpcina) :
                new ObjectParameter("SifraOpcina", typeof(string));
    
            var obrazacRSm2005OsnovaOsiguranjaParameter = ObrazacRSm2005OsnovaOsiguranja.HasValue ?
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", ObrazacRSm2005OsnovaOsiguranja) :
                new ObjectParameter("ObrazacRSm2005OsnovaOsiguranja", typeof(int));
    
            var osnovaOsiguranjaParameter = OsnovaOsiguranja != null ?
                new ObjectParameter("OsnovaOsiguranja", OsnovaOsiguranja) :
                new ObjectParameter("OsnovaOsiguranja", typeof(string));
    
            var obrazacRSm2005StazSPovecanimTrajanjemParameter = ObrazacRSm2005StazSPovecanimTrajanjem.HasValue ?
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", ObrazacRSm2005StazSPovecanimTrajanjem) :
                new ObjectParameter("ObrazacRSm2005StazSPovecanimTrajanjem", typeof(int));
    
            var stazSPovecanimTrajanjemParameter = StazSPovecanimTrajanjem != null ?
                new ObjectParameter("StazSPovecanimTrajanjem", StazSPovecanimTrajanjem) :
                new ObjectParameter("StazSPovecanimTrajanjem", typeof(string));
    
            var razdobljeOdParameter = RazdobljeOd != null ?
                new ObjectParameter("RazdobljeOd", RazdobljeOd) :
                new ObjectParameter("RazdobljeOd", typeof(string));
    
            var razdobljeDoParameter = RazdobljeDo != null ?
                new ObjectParameter("RazdobljeDo", RazdobljeDo) :
                new ObjectParameter("RazdobljeDo", typeof(string));
    
            var iznosObracunDohodakParameter = IznosObracunDohodak.HasValue ?
                new ObjectParameter("IznosObracunDohodak", IznosObracunDohodak) :
                new ObjectParameter("IznosObracunDohodak", typeof(decimal));
    
            var iznosDoprinosOsnovaParameter = IznosDoprinosOsnova.HasValue ?
                new ObjectParameter("IznosDoprinosOsnova", IznosDoprinosOsnova) :
                new ObjectParameter("IznosDoprinosOsnova", typeof(decimal));
    
            var iznosDoprinosMIO1Parameter = IznosDoprinosMIO1.HasValue ?
                new ObjectParameter("IznosDoprinosMIO1", IznosDoprinosMIO1) :
                new ObjectParameter("IznosDoprinosMIO1", typeof(decimal));
    
            var iznosDoprinosMIO2Parameter = IznosDoprinosMIO2.HasValue ?
                new ObjectParameter("IznosDoprinosMIO2", IznosDoprinosMIO2) :
                new ObjectParameter("IznosDoprinosMIO2", typeof(decimal));
    
            var iznosIsplataDohodakParameter = IznosIsplataDohodak.HasValue ?
                new ObjectParameter("IznosIsplataDohodak", IznosIsplataDohodak) :
                new ObjectParameter("IznosIsplataDohodak", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmB2005A>("USP_ObrazacRSmB2005A_UPDATE", mergeOption, iD_ObrazacRSmB2005AParameter, iD_ObrazacRSmParameter, redniBrojParameter, iD_OsobaParameter, osiguranikIdentifikacijskiBrojParameter, osiguranikPrezimeParameter, osiguranikImeParameter, iD_OpcinaParameter, sifraOpcinaParameter, obrazacRSm2005OsnovaOsiguranjaParameter, osnovaOsiguranjaParameter, obrazacRSm2005StazSPovecanimTrajanjemParameter, stazSPovecanimTrajanjemParameter, razdobljeOdParameter, razdobljeDoParameter, iznosObracunDohodakParameter, iznosDoprinosOsnovaParameter, iznosDoprinosMIO1Parameter, iznosDoprinosMIO2Parameter, iznosIsplataDohodakParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmDopusteno2005A_DELETE(int? IDObrazacRSmObveznikVr2005A)
        {
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmDopusteno2005A_DELETE", iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_INSERT(int? IDObrazacRSmObveznikVr2005A, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmOsiguranjeOsnova2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_INSERT", iDObrazacRSmObveznikVr2005AParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_INSERT(int? IDObrazacRSmObveznikVr2005A, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmOsiguranjeOsnova2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_INSERT", mergeOption, iDObrazacRSmObveznikVr2005AParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_SELECT(int? IDObrazacRSmObveznikVr2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_SELECT", iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_SELECT(int? IDObrazacRSmObveznikVr2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_SELECT", mergeOption, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_UPDATE(int? IDObrazacRSmObveznikVr2005A, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmOsiguranjeOsnova2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_UPDATE", iDObrazacRSmObveznikVr2005AParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmDopusteno2005A> USP_ObrazacRSmDopusteno2005A_UPDATE(int? IDObrazacRSmObveznikVr2005A, int? IDObrazacRSmObracunVr2005A, int? IDObrazacRSmOsiguranjeOsnova2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmDopusteno2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmDopusteno2005A>("USP_ObrazacRSmDopusteno2005A_UPDATE", mergeOption, iDObrazacRSmObveznikVr2005AParameter, iDObrazacRSmObracunVr2005AParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmObracunVr2005A_DELETE(int? IDObrazacRSmObracunVr2005A)
        {
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmObracunVr2005A_DELETE", iDObrazacRSmObracunVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_INSERT(int? IDObrazacRSmObracunVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_INSERT", iDObrazacRSmObracunVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_INSERT(int? IDObrazacRSmObracunVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_INSERT", mergeOption, iDObrazacRSmObracunVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_SELECT(int? IDObrazacRSmObracunVr2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_SELECT", iDObrazacRSmObracunVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_SELECT(int? IDObrazacRSmObracunVr2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_SELECT", mergeOption, iDObrazacRSmObracunVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_UPDATE(int? IDObrazacRSmObracunVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_UPDATE", iDObrazacRSmObracunVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObracunVr2005A> USP_ObrazacRSmObracunVr2005A_UPDATE(int? IDObrazacRSmObracunVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObracunVr2005A).Assembly);
    
            var iDObrazacRSmObracunVr2005AParameter = IDObrazacRSmObracunVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObracunVr2005A", IDObrazacRSmObracunVr2005A) :
                new ObjectParameter("IDObrazacRSmObracunVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObracunVr2005A>("USP_ObrazacRSmObracunVr2005A_UPDATE", mergeOption, iDObrazacRSmObracunVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmObveznikVr2005A_DELETE(int? IDObrazacRSmObveznikVr2005A)
        {
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmObveznikVr2005A_DELETE", iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_INSERT(int? IDObrazacRSmObveznikVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_INSERT", iDObrazacRSmObveznikVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_INSERT(int? IDObrazacRSmObveznikVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_INSERT", mergeOption, iDObrazacRSmObveznikVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_SELECT(int? IDObrazacRSmObveznikVr2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_SELECT", iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_SELECT(int? IDObrazacRSmObveznikVr2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_SELECT", mergeOption, iDObrazacRSmObveznikVr2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_UPDATE(int? IDObrazacRSmObveznikVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_UPDATE", iDObrazacRSmObveznikVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmObveznikVr2005A> USP_ObrazacRSmObveznikVr2005A_UPDATE(int? IDObrazacRSmObveznikVr2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmObveznikVr2005A).Assembly);
    
            var iDObrazacRSmObveznikVr2005AParameter = IDObrazacRSmObveznikVr2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", IDObrazacRSmObveznikVr2005A) :
                new ObjectParameter("IDObrazacRSmObveznikVr2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmObveznikVr2005A>("USP_ObrazacRSmObveznikVr2005A_UPDATE", mergeOption, iDObrazacRSmObveznikVr2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmOsiguranjeOsnova2005A_DELETE(int? IDObrazacRSmOsiguranjeOsnova2005A)
        {
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmOsiguranjeOsnova2005A_DELETE", iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_INSERT(int? IDObrazacRSmOsiguranjeOsnova2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_INSERT", iDObrazacRSmOsiguranjeOsnova2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_INSERT(int? IDObrazacRSmOsiguranjeOsnova2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_INSERT", mergeOption, iDObrazacRSmOsiguranjeOsnova2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_SELECT(int? IDObrazacRSmOsiguranjeOsnova2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_SELECT", iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_SELECT(int? IDObrazacRSmOsiguranjeOsnova2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_SELECT", mergeOption, iDObrazacRSmOsiguranjeOsnova2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_UPDATE(int? IDObrazacRSmOsiguranjeOsnova2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_UPDATE", iDObrazacRSmOsiguranjeOsnova2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmOsiguranjeOsnova2005A> USP_ObrazacRSmOsiguranjeOsnova2005A_UPDATE(int? IDObrazacRSmOsiguranjeOsnova2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmOsiguranjeOsnova2005A).Assembly);
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmOsiguranjeOsnova2005A>("USP_ObrazacRSmOsiguranjeOsnova2005A_UPDATE", mergeOption, iDObrazacRSmOsiguranjeOsnova2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmStaz2005A_DELETE(int? IDObrazacRSmStaz2005A)
        {
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmStaz2005A_DELETE", iDObrazacRSmStaz2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_INSERT(int? IDObrazacRSmStaz2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_INSERT", iDObrazacRSmStaz2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_INSERT(int? IDObrazacRSmStaz2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_INSERT", mergeOption, iDObrazacRSmStaz2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_SELECT(int? IDObrazacRSmStaz2005A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_SELECT", iDObrazacRSmStaz2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_SELECT(int? IDObrazacRSmStaz2005A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_SELECT", mergeOption, iDObrazacRSmStaz2005AParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_UPDATE(int? IDObrazacRSmStaz2005A, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_UPDATE", iDObrazacRSmStaz2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmStaz2005A> USP_ObrazacRSmStaz2005A_UPDATE(int? IDObrazacRSmStaz2005A, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmStaz2005A).Assembly);
    
            var iDObrazacRSmStaz2005AParameter = IDObrazacRSmStaz2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmStaz2005A", IDObrazacRSmStaz2005A) :
                new ObjectParameter("IDObrazacRSmStaz2005A", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmStaz2005A>("USP_ObrazacRSmStaz2005A_UPDATE", mergeOption, iDObrazacRSmStaz2005AParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacRSmVerzija_DELETE(int? IDObrazacRSmVerzija)
        {
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacRSmVerzija_DELETE", iDObrazacRSmVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_INSERT(int? IDObrazacRSmVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_INSERT", iDObrazacRSmVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_INSERT(int? IDObrazacRSmVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_INSERT", mergeOption, iDObrazacRSmVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_SELECT(int? IDObrazacRSmVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_SELECT", iDObrazacRSmVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_SELECT(int? IDObrazacRSmVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_SELECT", mergeOption, iDObrazacRSmVerzijaParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_UPDATE(int? IDObrazacRSmVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_UPDATE", iDObrazacRSmVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ObrazacRSmVerzija> USP_ObrazacRSmVerzija_UPDATE(int? IDObrazacRSmVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacRSmVerzija).Assembly);
    
            var iDObrazacRSmVerzijaParameter = IDObrazacRSmVerzija.HasValue ?
                new ObjectParameter("IDObrazacRSmVerzija", IDObrazacRSmVerzija) :
                new ObjectParameter("IDObrazacRSmVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacRSmVerzija>("USP_ObrazacRSmVerzija_UPDATE", mergeOption, iDObrazacRSmVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacVr_DELETE(long? ID_ObrazacVr)
        {
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacVr_DELETE", iD_ObrazacVrParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_SELECT(long? ID_ObrazacVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_SELECT", iD_ObrazacVrParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_SELECT(long? ID_ObrazacVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_SELECT", mergeOption, iD_ObrazacVrParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_UPDATE(long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_UPDATE", iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ObrazacVr> USP_ObrazacVr_UPDATE(long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVr).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVr>("USP_ObrazacVr_UPDATE", mergeOption, iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacVrPolje_DELETE(long? ID_ObrazacVrPolje)
        {
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacVrPolje_DELETE", iD_ObrazacVrPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_INSERT(long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, long? ID_ObrazacVrPoljeTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_INSERT", iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_INSERT(long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, long? ID_ObrazacVrPoljeTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_INSERT", mergeOption, iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_SELECT(long? ID_ObrazacVrPolje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_SELECT", iD_ObrazacVrPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_SELECT(long? ID_ObrazacVrPolje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_SELECT", mergeOption, iD_ObrazacVrPoljeParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_UPDATE(long? ID_ObrazacVrPolje, long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, long? ID_ObrazacVrPoljeTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_UPDATE", iD_ObrazacVrPoljeParameter, iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPolje> USP_ObrazacVrPolje_UPDATE(long? ID_ObrazacVrPolje, long? ID_ObrazacVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, long? ID_ObrazacVrPoljeTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPolje).Assembly);
    
            var iD_ObrazacVrPoljeParameter = ID_ObrazacVrPolje.HasValue ?
                new ObjectParameter("ID_ObrazacVrPolje", ID_ObrazacVrPolje) :
                new ObjectParameter("ID_ObrazacVrPolje", typeof(long));
    
            var iD_ObrazacVrParameter = ID_ObrazacVr.HasValue ?
                new ObjectParameter("ID_ObrazacVr", ID_ObrazacVr) :
                new ObjectParameter("ID_ObrazacVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPolje>("USP_ObrazacVrPolje_UPDATE", mergeOption, iD_ObrazacVrPoljeParameter, iD_ObrazacVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObrazacVrPoljeTip_DELETE(long? ID_ObrazacVrPoljeTip)
        {
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObrazacVrPoljeTip_DELETE", iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_SELECT(long? ID_ObrazacVrPoljeTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_SELECT", iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_SELECT(long? ID_ObrazacVrPoljeTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_SELECT", mergeOption, iD_ObrazacVrPoljeTipParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_UPDATE(long? ID_ObrazacVrPoljeTip, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_UPDATE", iD_ObrazacVrPoljeTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<ObrazacVrPoljeTip> USP_ObrazacVrPoljeTip_UPDATE(long? ID_ObrazacVrPoljeTip, string Oznaka, string Naziv, string NazivKr, string Kratica, int? Velicina, decimal? ValueMin, decimal? ValueMax, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObrazacVrPoljeTip).Assembly);
    
            var iD_ObrazacVrPoljeTipParameter = ID_ObrazacVrPoljeTip.HasValue ?
                new ObjectParameter("ID_ObrazacVrPoljeTip", ID_ObrazacVrPoljeTip) :
                new ObjectParameter("ID_ObrazacVrPoljeTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var velicinaParameter = Velicina.HasValue ?
                new ObjectParameter("Velicina", Velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var valueMinParameter = ValueMin.HasValue ?
                new ObjectParameter("ValueMin", ValueMin) :
                new ObjectParameter("ValueMin", typeof(decimal));
    
            var valueMaxParameter = ValueMax.HasValue ?
                new ObjectParameter("ValueMax", ValueMax) :
                new ObjectParameter("ValueMax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObrazacVrPoljeTip>("USP_ObrazacVrPoljeTip_UPDATE", mergeOption, iD_ObrazacVrPoljeTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, velicinaParameter, valueMinParameter, valueMaxParameter);
        }
    
        public virtual ObjectResult<int?> USP_Obrt_DELETE(long? ID_Obrt)
        {
            var iD_ObrtParameter = ID_Obrt.HasValue ?
                new ObjectParameter("ID_Obrt", ID_Obrt) :
                new ObjectParameter("ID_Obrt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Obrt_DELETE", iD_ObrtParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_SELECT(long? ID_Obrt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_ObrtParameter = ID_Obrt.HasValue ?
                new ObjectParameter("ID_Obrt", ID_Obrt) :
                new ObjectParameter("ID_Obrt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_SELECT", iD_ObrtParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_SELECT(long? ID_Obrt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_ObrtParameter = ID_Obrt.HasValue ?
                new ObjectParameter("ID_Obrt", ID_Obrt) :
                new ObjectParameter("ID_Obrt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_SELECT", mergeOption, iD_ObrtParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_UPDATE(long? ID_Obrt, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_ObrtParameter = ID_Obrt.HasValue ?
                new ObjectParameter("ID_Obrt", ID_Obrt) :
                new ObjectParameter("ID_Obrt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_UPDATE", iD_ObrtParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Obrt> USP_Obrt_UPDATE(long? ID_Obrt, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Obrt).Assembly);
    
            var iD_ObrtParameter = ID_Obrt.HasValue ?
                new ObjectParameter("ID_Obrt", ID_Obrt) :
                new ObjectParameter("ID_Obrt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obrt>("USP_Obrt_UPDATE", mergeOption, iD_ObrtParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_Odbitak_DELETE(long? ID_Odbitak)
        {
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Odbitak_DELETE", iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_SELECT(long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_SELECT", iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_SELECT(long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_SELECT", mergeOption, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_UPDATE(long? ID_Odbitak, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_UPDATE", iD_OdbitakParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Odbitak> USP_Odbitak_UPDATE(long? ID_Odbitak, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Odbitak).Assembly);
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Odbitak>("USP_Odbitak_UPDATE", mergeOption, iD_OdbitakParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_OdbitakGr_DELETE(long? ID_OdbitakGr)
        {
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OdbitakGr_DELETE", iD_OdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_SELECT(long? ID_OdbitakGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_SELECT", iD_OdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_SELECT(long? ID_OdbitakGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_SELECT", mergeOption, iD_OdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_UPDATE(long? ID_OdbitakGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_UPDATE", iD_OdbitakGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OdbitakGr> USP_OdbitakGr_UPDATE(long? ID_OdbitakGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGr>("USP_OdbitakGr_UPDATE", mergeOption, iD_OdbitakGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_OdbitakGrOdbitak_DELETE(long? ID_OdbitakGrOdbitak)
        {
            var iD_OdbitakGrOdbitakParameter = ID_OdbitakGrOdbitak.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitak", ID_OdbitakGrOdbitak) :
                new ObjectParameter("ID_OdbitakGrOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OdbitakGrOdbitak_DELETE", iD_OdbitakGrOdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_INSERT(long? ID_OdbitakGr, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_INSERT", iD_OdbitakGrParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_INSERT(long? ID_OdbitakGr, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_INSERT", mergeOption, iD_OdbitakGrParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_SELECT(long? ID_OdbitakGrOdbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrOdbitakParameter = ID_OdbitakGrOdbitak.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitak", ID_OdbitakGrOdbitak) :
                new ObjectParameter("ID_OdbitakGrOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_SELECT", iD_OdbitakGrOdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_SELECT(long? ID_OdbitakGrOdbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrOdbitakParameter = ID_OdbitakGrOdbitak.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitak", ID_OdbitakGrOdbitak) :
                new ObjectParameter("ID_OdbitakGrOdbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_SELECT", mergeOption, iD_OdbitakGrOdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_UPDATE(long? ID_OdbitakGrOdbitak, long? ID_OdbitakGr, long? ID_Odbitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrOdbitakParameter = ID_OdbitakGrOdbitak.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitak", ID_OdbitakGrOdbitak) :
                new ObjectParameter("ID_OdbitakGrOdbitak", typeof(long));
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_UPDATE", iD_OdbitakGrOdbitakParameter, iD_OdbitakGrParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitak> USP_OdbitakGrOdbitak_UPDATE(long? ID_OdbitakGrOdbitak, long? ID_OdbitakGr, long? ID_Odbitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitak).Assembly);
    
            var iD_OdbitakGrOdbitakParameter = ID_OdbitakGrOdbitak.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitak", ID_OdbitakGrOdbitak) :
                new ObjectParameter("ID_OdbitakGrOdbitak", typeof(long));
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakParameter = ID_Odbitak.HasValue ?
                new ObjectParameter("ID_Odbitak", ID_Odbitak) :
                new ObjectParameter("ID_Odbitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitak>("USP_OdbitakGrOdbitak_UPDATE", mergeOption, iD_OdbitakGrOdbitakParameter, iD_OdbitakGrParameter, iD_OdbitakParameter);
        }
    
        public virtual ObjectResult<int?> USP_OdbitakGrOdbitakGr_DELETE(long? ID_OdbitakGrOdbitakGr)
        {
            var iD_OdbitakGrOdbitakGrParameter = ID_OdbitakGrOdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitakGr", ID_OdbitakGrOdbitakGr) :
                new ObjectParameter("ID_OdbitakGrOdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OdbitakGrOdbitakGr_DELETE", iD_OdbitakGrOdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_INSERT(long? ID_OdbitakGr, long? ID_OdbitakGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakGrNadParameter = ID_OdbitakGrNad.HasValue ?
                new ObjectParameter("ID_OdbitakGrNad", ID_OdbitakGrNad) :
                new ObjectParameter("ID_OdbitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_INSERT", iD_OdbitakGrParameter, iD_OdbitakGrNadParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_INSERT(long? ID_OdbitakGr, long? ID_OdbitakGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakGrNadParameter = ID_OdbitakGrNad.HasValue ?
                new ObjectParameter("ID_OdbitakGrNad", ID_OdbitakGrNad) :
                new ObjectParameter("ID_OdbitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_INSERT", mergeOption, iD_OdbitakGrParameter, iD_OdbitakGrNadParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_SELECT(long? ID_OdbitakGrOdbitakGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrOdbitakGrParameter = ID_OdbitakGrOdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitakGr", ID_OdbitakGrOdbitakGr) :
                new ObjectParameter("ID_OdbitakGrOdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_SELECT", iD_OdbitakGrOdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_SELECT(long? ID_OdbitakGrOdbitakGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrOdbitakGrParameter = ID_OdbitakGrOdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitakGr", ID_OdbitakGrOdbitakGr) :
                new ObjectParameter("ID_OdbitakGrOdbitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_SELECT", mergeOption, iD_OdbitakGrOdbitakGrParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_UPDATE(long? ID_OdbitakGrOdbitakGr, long? ID_OdbitakGr, long? ID_OdbitakGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrOdbitakGrParameter = ID_OdbitakGrOdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitakGr", ID_OdbitakGrOdbitakGr) :
                new ObjectParameter("ID_OdbitakGrOdbitakGr", typeof(long));
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakGrNadParameter = ID_OdbitakGrNad.HasValue ?
                new ObjectParameter("ID_OdbitakGrNad", ID_OdbitakGrNad) :
                new ObjectParameter("ID_OdbitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_UPDATE", iD_OdbitakGrOdbitakGrParameter, iD_OdbitakGrParameter, iD_OdbitakGrNadParameter);
        }
    
        public virtual ObjectResult<OdbitakGrOdbitakGr> USP_OdbitakGrOdbitakGr_UPDATE(long? ID_OdbitakGrOdbitakGr, long? ID_OdbitakGr, long? ID_OdbitakGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OdbitakGrOdbitakGr).Assembly);
    
            var iD_OdbitakGrOdbitakGrParameter = ID_OdbitakGrOdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGrOdbitakGr", ID_OdbitakGrOdbitakGr) :
                new ObjectParameter("ID_OdbitakGrOdbitakGr", typeof(long));
    
            var iD_OdbitakGrParameter = ID_OdbitakGr.HasValue ?
                new ObjectParameter("ID_OdbitakGr", ID_OdbitakGr) :
                new ObjectParameter("ID_OdbitakGr", typeof(long));
    
            var iD_OdbitakGrNadParameter = ID_OdbitakGrNad.HasValue ?
                new ObjectParameter("ID_OdbitakGrNad", ID_OdbitakGrNad) :
                new ObjectParameter("ID_OdbitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OdbitakGrOdbitakGr>("USP_OdbitakGrOdbitakGr_UPDATE", mergeOption, iD_OdbitakGrOdbitakGrParameter, iD_OdbitakGrParameter, iD_OdbitakGrNadParameter);
        }
    
        public virtual ObjectResult<int?> USP_Opcina_DELETE(long? ID_Opcina)
        {
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Opcina_DELETE", iD_OpcinaParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? RBrNN, string OznakaNN, long? ID_Zupanija, long? ID_OpcinaTip, string TIP, string SjedOpc, long? ID_MjestoPosta, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var rBrNNParameter = RBrNN.HasValue ?
                new ObjectParameter("RBrNN", RBrNN) :
                new ObjectParameter("RBrNN", typeof(int));
    
            var oznakaNNParameter = OznakaNN != null ?
                new ObjectParameter("OznakaNN", OznakaNN) :
                new ObjectParameter("OznakaNN", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            var sjedOpcParameter = SjedOpc != null ?
                new ObjectParameter("SjedOpc", SjedOpc) :
                new ObjectParameter("SjedOpc", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, rBrNNParameter, oznakaNNParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, tIPParameter, sjedOpcParameter, iD_MjestoPostaParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? RBrNN, string OznakaNN, long? ID_Zupanija, long? ID_OpcinaTip, string TIP, string SjedOpc, long? ID_MjestoPosta, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var rBrNNParameter = RBrNN.HasValue ?
                new ObjectParameter("RBrNN", RBrNN) :
                new ObjectParameter("RBrNN", typeof(int));
    
            var oznakaNNParameter = OznakaNN != null ?
                new ObjectParameter("OznakaNN", OznakaNN) :
                new ObjectParameter("OznakaNN", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            var sjedOpcParameter = SjedOpc != null ?
                new ObjectParameter("SjedOpc", SjedOpc) :
                new ObjectParameter("SjedOpc", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, rBrNNParameter, oznakaNNParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, tIPParameter, sjedOpcParameter, iD_MjestoPostaParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_SELECT(long? ID_Opcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_SELECT", iD_OpcinaParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_SELECT(long? ID_Opcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_SELECT", mergeOption, iD_OpcinaParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_UPDATE(long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? RBrNN, string OznakaNN, long? ID_Zupanija, long? ID_OpcinaTip, string TIP, string SjedOpc, long? ID_MjestoPosta, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var rBrNNParameter = RBrNN.HasValue ?
                new ObjectParameter("RBrNN", RBrNN) :
                new ObjectParameter("RBrNN", typeof(int));
    
            var oznakaNNParameter = OznakaNN != null ?
                new ObjectParameter("OznakaNN", OznakaNN) :
                new ObjectParameter("OznakaNN", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            var sjedOpcParameter = SjedOpc != null ?
                new ObjectParameter("SjedOpc", SjedOpc) :
                new ObjectParameter("SjedOpc", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_UPDATE", iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, rBrNNParameter, oznakaNNParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, tIPParameter, sjedOpcParameter, iD_MjestoPostaParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Opcina> USP_Opcina_UPDATE(long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? RBrNN, string OznakaNN, long? ID_Zupanija, long? ID_OpcinaTip, string TIP, string SjedOpc, long? ID_MjestoPosta, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opcina).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var rBrNNParameter = RBrNN.HasValue ?
                new ObjectParameter("RBrNN", RBrNN) :
                new ObjectParameter("RBrNN", typeof(int));
    
            var oznakaNNParameter = OznakaNN != null ?
                new ObjectParameter("OznakaNN", OznakaNN) :
                new ObjectParameter("OznakaNN", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            var sjedOpcParameter = SjedOpc != null ?
                new ObjectParameter("SjedOpc", SjedOpc) :
                new ObjectParameter("SjedOpc", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opcina>("USP_Opcina_UPDATE", mergeOption, iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, rBrNNParameter, oznakaNNParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, tIPParameter, sjedOpcParameter, iD_MjestoPostaParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaGr_DELETE(long? ID_OpcinaGr)
        {
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaGr_DELETE", iD_OpcinaGrParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_OpcinaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_OpcinaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_SELECT(long? ID_OpcinaGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_SELECT", iD_OpcinaGrParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_SELECT(long? ID_OpcinaGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_SELECT", mergeOption, iD_OpcinaGrParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_UPDATE(long? ID_OpcinaGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_OpcinaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_UPDATE", iD_OpcinaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGr> USP_OpcinaGr_UPDATE(long? ID_OpcinaGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_OpcinaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGr).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGr>("USP_OpcinaGr_UPDATE", mergeOption, iD_OpcinaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaGrOpcina_DELETE(long? ID_OpcinaGrOpcina)
        {
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaGrOpcina_DELETE", iD_OpcinaGrOpcinaParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_INSERT(long? ID_OpcinaGr, long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_INSERT", iD_OpcinaGrParameter, iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_INSERT(long? ID_OpcinaGr, long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_INSERT", mergeOption, iD_OpcinaGrParameter, iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_SELECT(long? ID_OpcinaGrOpcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_SELECT", iD_OpcinaGrOpcinaParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_SELECT(long? ID_OpcinaGrOpcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_SELECT", mergeOption, iD_OpcinaGrOpcinaParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_UPDATE(long? ID_OpcinaGrOpcina, long? ID_OpcinaGr, long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_UPDATE", iD_OpcinaGrOpcinaParameter, iD_OpcinaGrParameter, iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcina> USP_OpcinaGrOpcina_UPDATE(long? ID_OpcinaGrOpcina, long? ID_OpcinaGr, long? ID_Opcina, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcina).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var iD_OpcinaGrParameter = ID_OpcinaGr.HasValue ?
                new ObjectParameter("ID_OpcinaGr", ID_OpcinaGr) :
                new ObjectParameter("ID_OpcinaGr", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcina>("USP_OpcinaGrOpcina_UPDATE", mergeOption, iD_OpcinaGrOpcinaParameter, iD_OpcinaGrParameter, iD_OpcinaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaGrOpcinaDatum_DELETE(long? ID_OpcinaGrOpcinaDatum)
        {
            var iD_OpcinaGrOpcinaDatumParameter = ID_OpcinaGrOpcinaDatum.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", ID_OpcinaGrOpcinaDatum) :
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaGrOpcinaDatum_DELETE", iD_OpcinaGrOpcinaDatumParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_INSERT(long? ID_OpcinaGrOpcina, DateTime? DatumOd, DateTime? DatumDo, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_INSERT", iD_OpcinaGrOpcinaParameter, datumOdParameter, datumDoParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_INSERT(long? ID_OpcinaGrOpcina, DateTime? DatumOd, DateTime? DatumDo, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_INSERT", mergeOption, iD_OpcinaGrOpcinaParameter, datumOdParameter, datumDoParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_SELECT(long? ID_OpcinaGrOpcinaDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaDatumParameter = ID_OpcinaGrOpcinaDatum.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", ID_OpcinaGrOpcinaDatum) :
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_SELECT", iD_OpcinaGrOpcinaDatumParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_SELECT(long? ID_OpcinaGrOpcinaDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaDatumParameter = ID_OpcinaGrOpcinaDatum.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", ID_OpcinaGrOpcinaDatum) :
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_SELECT", mergeOption, iD_OpcinaGrOpcinaDatumParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_UPDATE(long? ID_OpcinaGrOpcinaDatum, long? ID_OpcinaGrOpcina, DateTime? DatumOd, DateTime? DatumDo, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaDatumParameter = ID_OpcinaGrOpcinaDatum.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", ID_OpcinaGrOpcinaDatum) :
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", typeof(long));
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_UPDATE", iD_OpcinaGrOpcinaDatumParameter, iD_OpcinaGrOpcinaParameter, datumOdParameter, datumDoParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaGrOpcinaDatum> USP_OpcinaGrOpcinaDatum_UPDATE(long? ID_OpcinaGrOpcinaDatum, long? ID_OpcinaGrOpcina, DateTime? DatumOd, DateTime? DatumDo, string Naziv, string Oznaka, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrOpcinaDatum).Assembly);
    
            var iD_OpcinaGrOpcinaDatumParameter = ID_OpcinaGrOpcinaDatum.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", ID_OpcinaGrOpcinaDatum) :
                new ObjectParameter("ID_OpcinaGrOpcinaDatum", typeof(long));
    
            var iD_OpcinaGrOpcinaParameter = ID_OpcinaGrOpcina.HasValue ?
                new ObjectParameter("ID_OpcinaGrOpcina", ID_OpcinaGrOpcina) :
                new ObjectParameter("ID_OpcinaGrOpcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrOpcinaDatum>("USP_OpcinaGrOpcinaDatum_UPDATE", mergeOption, iD_OpcinaGrOpcinaDatumParameter, iD_OpcinaGrOpcinaParameter, datumOdParameter, datumDoParameter, nazivParameter, oznakaParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaGrTip_DELETE(long? ID_OpcinaGrTip)
        {
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaGrTip_DELETE", iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaGrTipParameter = StsOpcinaGrTip != null ?
                new ObjectParameter("StsOpcinaGrTip", StsOpcinaGrTip) :
                new ObjectParameter("StsOpcinaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaGrTipParameter = StsOpcinaGrTip != null ?
                new ObjectParameter("StsOpcinaGrTip", StsOpcinaGrTip) :
                new ObjectParameter("StsOpcinaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_SELECT(long? ID_OpcinaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_SELECT", iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_SELECT(long? ID_OpcinaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_SELECT", mergeOption, iD_OpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_UPDATE(long? ID_OpcinaGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaGrTipParameter = StsOpcinaGrTip != null ?
                new ObjectParameter("StsOpcinaGrTip", StsOpcinaGrTip) :
                new ObjectParameter("StsOpcinaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_UPDATE", iD_OpcinaGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<OpcinaGrTip> USP_OpcinaGrTip_UPDATE(long? ID_OpcinaGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaGrTip).Assembly);
    
            var iD_OpcinaGrTipParameter = ID_OpcinaGrTip.HasValue ?
                new ObjectParameter("ID_OpcinaGrTip", ID_OpcinaGrTip) :
                new ObjectParameter("ID_OpcinaGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaGrTipParameter = StsOpcinaGrTip != null ?
                new ObjectParameter("StsOpcinaGrTip", StsOpcinaGrTip) :
                new ObjectParameter("StsOpcinaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaGrTip>("USP_OpcinaGrTip_UPDATE", mergeOption, iD_OpcinaGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaOpcinaTip_DELETE(long? ID_OpcinaOpcinaTip)
        {
            var iD_OpcinaOpcinaTipParameter = ID_OpcinaOpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaOpcinaTip", ID_OpcinaOpcinaTip) :
                new ObjectParameter("ID_OpcinaOpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaOpcinaTip_DELETE", iD_OpcinaOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_INSERT(long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_OpcinaTip, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_INSERT", iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_OpcinaTipParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_INSERT(long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_OpcinaTip, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_INSERT", mergeOption, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_OpcinaTipParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_SELECT(long? ID_OpcinaOpcinaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaOpcinaTipParameter = ID_OpcinaOpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaOpcinaTip", ID_OpcinaOpcinaTip) :
                new ObjectParameter("ID_OpcinaOpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_SELECT", iD_OpcinaOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_SELECT(long? ID_OpcinaOpcinaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaOpcinaTipParameter = ID_OpcinaOpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaOpcinaTip", ID_OpcinaOpcinaTip) :
                new ObjectParameter("ID_OpcinaOpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_SELECT", mergeOption, iD_OpcinaOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_UPDATE(long? ID_OpcinaOpcinaTip, long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_OpcinaTip, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaOpcinaTipParameter = ID_OpcinaOpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaOpcinaTip", ID_OpcinaOpcinaTip) :
                new ObjectParameter("ID_OpcinaOpcinaTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_UPDATE", iD_OpcinaOpcinaTipParameter, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_OpcinaTipParameter, opisParameter);
        }
    
        public virtual ObjectResult<OpcinaOpcinaTip> USP_OpcinaOpcinaTip_UPDATE(long? ID_OpcinaOpcinaTip, long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_OpcinaTip, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaOpcinaTip).Assembly);
    
            var iD_OpcinaOpcinaTipParameter = ID_OpcinaOpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaOpcinaTip", ID_OpcinaOpcinaTip) :
                new ObjectParameter("ID_OpcinaOpcinaTip", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaOpcinaTip>("USP_OpcinaOpcinaTip_UPDATE", mergeOption, iD_OpcinaOpcinaTipParameter, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_OpcinaTipParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaTip_DELETE(long? ID_OpcinaTip)
        {
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaTip_DELETE", iD_OpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaTipParameter = StsOpcinaTip != null ?
                new ObjectParameter("StsOpcinaTip", StsOpcinaTip) :
                new ObjectParameter("StsOpcinaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaTipParameter = StsOpcinaTip != null ?
                new ObjectParameter("StsOpcinaTip", StsOpcinaTip) :
                new ObjectParameter("StsOpcinaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_SELECT(long? ID_OpcinaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_SELECT", iD_OpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_SELECT(long? ID_OpcinaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_SELECT", mergeOption, iD_OpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_UPDATE(long? ID_OpcinaTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaTipParameter = StsOpcinaTip != null ?
                new ObjectParameter("StsOpcinaTip", StsOpcinaTip) :
                new ObjectParameter("StsOpcinaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_UPDATE", iD_OpcinaTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaTipParameter);
        }
    
        public virtual ObjectResult<OpcinaTip> USP_OpcinaTip_UPDATE(long? ID_OpcinaTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsOpcinaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaTip).Assembly);
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsOpcinaTipParameter = StsOpcinaTip != null ?
                new ObjectParameter("StsOpcinaTip", StsOpcinaTip) :
                new ObjectParameter("StsOpcinaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaTip>("USP_OpcinaTip_UPDATE", mergeOption, iD_OpcinaTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsOpcinaTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_OpcinaZupanija_DELETE(long? ID_OpcinaZupanija)
        {
            var iD_OpcinaZupanijaParameter = ID_OpcinaZupanija.HasValue ?
                new ObjectParameter("ID_OpcinaZupanija", ID_OpcinaZupanija) :
                new ObjectParameter("ID_OpcinaZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OpcinaZupanija_DELETE", iD_OpcinaZupanijaParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_INSERT(long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_Zupanija, long? ID_OpcinaTip, string Opis, byte[] GrbSlika, string PathGrb, string SjedOpcina, long? ID_MjestoPosta, string NazivOpcina, string TIP)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var sjedOpcinaParameter = SjedOpcina != null ?
                new ObjectParameter("SjedOpcina", SjedOpcina) :
                new ObjectParameter("SjedOpcina", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_INSERT", iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, opisParameter, grbSlikaParameter, pathGrbParameter, sjedOpcinaParameter, iD_MjestoPostaParameter, nazivOpcinaParameter, tIPParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_INSERT(long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_Zupanija, long? ID_OpcinaTip, string Opis, byte[] GrbSlika, string PathGrb, string SjedOpcina, long? ID_MjestoPosta, string NazivOpcina, string TIP, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var sjedOpcinaParameter = SjedOpcina != null ?
                new ObjectParameter("SjedOpcina", SjedOpcina) :
                new ObjectParameter("SjedOpcina", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_INSERT", mergeOption, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, opisParameter, grbSlikaParameter, pathGrbParameter, sjedOpcinaParameter, iD_MjestoPostaParameter, nazivOpcinaParameter, tIPParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_SELECT(long? ID_OpcinaZupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaZupanijaParameter = ID_OpcinaZupanija.HasValue ?
                new ObjectParameter("ID_OpcinaZupanija", ID_OpcinaZupanija) :
                new ObjectParameter("ID_OpcinaZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_SELECT", iD_OpcinaZupanijaParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_SELECT(long? ID_OpcinaZupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaZupanijaParameter = ID_OpcinaZupanija.HasValue ?
                new ObjectParameter("ID_OpcinaZupanija", ID_OpcinaZupanija) :
                new ObjectParameter("ID_OpcinaZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_SELECT", mergeOption, iD_OpcinaZupanijaParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_UPDATE(long? ID_OpcinaZupanija, long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_Zupanija, long? ID_OpcinaTip, string Opis, byte[] GrbSlika, string PathGrb, string SjedOpcina, long? ID_MjestoPosta, string NazivOpcina, string TIP)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaZupanijaParameter = ID_OpcinaZupanija.HasValue ?
                new ObjectParameter("ID_OpcinaZupanija", ID_OpcinaZupanija) :
                new ObjectParameter("ID_OpcinaZupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var sjedOpcinaParameter = SjedOpcina != null ?
                new ObjectParameter("SjedOpcina", SjedOpcina) :
                new ObjectParameter("SjedOpcina", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_UPDATE", iD_OpcinaZupanijaParameter, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, opisParameter, grbSlikaParameter, pathGrbParameter, sjedOpcinaParameter, iD_MjestoPostaParameter, nazivOpcinaParameter, tIPParameter);
        }
    
        public virtual ObjectResult<OpcinaZupanija> USP_OpcinaZupanija_UPDATE(long? ID_OpcinaZupanija, long? ID_Opcina, DateTime? DatOd, DateTime? DatDo, bool? AktivU, long? ID_Zupanija, long? ID_OpcinaTip, string Opis, byte[] GrbSlika, string PathGrb, string SjedOpcina, long? ID_MjestoPosta, string NazivOpcina, string TIP, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OpcinaZupanija).Assembly);
    
            var iD_OpcinaZupanijaParameter = ID_OpcinaZupanija.HasValue ?
                new ObjectParameter("ID_OpcinaZupanija", ID_OpcinaZupanija) :
                new ObjectParameter("ID_OpcinaZupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datOdParameter = DatOd.HasValue ?
                new ObjectParameter("DatOd", DatOd) :
                new ObjectParameter("DatOd", typeof(System.DateTime));
    
            var datDoParameter = DatDo.HasValue ?
                new ObjectParameter("DatDo", DatDo) :
                new ObjectParameter("DatDo", typeof(System.DateTime));
    
            var aktivUParameter = AktivU.HasValue ?
                new ObjectParameter("AktivU", AktivU) :
                new ObjectParameter("AktivU", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaTipParameter = ID_OpcinaTip.HasValue ?
                new ObjectParameter("ID_OpcinaTip", ID_OpcinaTip) :
                new ObjectParameter("ID_OpcinaTip", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var sjedOpcinaParameter = SjedOpcina != null ?
                new ObjectParameter("SjedOpcina", SjedOpcina) :
                new ObjectParameter("SjedOpcina", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var nazivOpcinaParameter = NazivOpcina != null ?
                new ObjectParameter("NazivOpcina", NazivOpcina) :
                new ObjectParameter("NazivOpcina", typeof(string));
    
            var tIPParameter = TIP != null ?
                new ObjectParameter("TIP", TIP) :
                new ObjectParameter("TIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpcinaZupanija>("USP_OpcinaZupanija_UPDATE", mergeOption, iD_OpcinaZupanijaParameter, iD_OpcinaParameter, datOdParameter, datDoParameter, aktivUParameter, iD_ZupanijaParameter, iD_OpcinaTipParameter, opisParameter, grbSlikaParameter, pathGrbParameter, sjedOpcinaParameter, iD_MjestoPostaParameter, nazivOpcinaParameter, tIPParameter);
        }
    
        public virtual ObjectResult<int?> USP_OperatorAritmeticki_DELETE(string AritmetickiOperator)
        {
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OperatorAritmeticki_DELETE", aritmetickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_INSERT(string AritmetickiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_INSERT", aritmetickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_INSERT(string AritmetickiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_INSERT", mergeOption, aritmetickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_SELECT(string AritmetickiOperator)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_SELECT", aritmetickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_SELECT(string AritmetickiOperator, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_SELECT", mergeOption, aritmetickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_UPDATE(string AritmetickiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_UPDATE", aritmetickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorAritmeticki> USP_OperatorAritmeticki_UPDATE(string AritmetickiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorAritmeticki).Assembly);
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorAritmeticki>("USP_OperatorAritmeticki_UPDATE", mergeOption, aritmetickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_OperatorLogicki_DELETE(string LogickiOperator)
        {
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OperatorLogicki_DELETE", logickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_INSERT(string LogickiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_INSERT", logickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_INSERT(string LogickiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_INSERT", mergeOption, logickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_SELECT(string LogickiOperator)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_SELECT", logickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_SELECT(string LogickiOperator, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_SELECT", mergeOption, logickiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_UPDATE(string LogickiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_UPDATE", logickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorLogicki> USP_OperatorLogicki_UPDATE(string LogickiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorLogicki).Assembly);
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorLogicki>("USP_OperatorLogicki_UPDATE", mergeOption, logickiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_OperatorVremenski_DELETE(string VremenskiOperator)
        {
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OperatorVremenski_DELETE", vremenskiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_INSERT(string VremenskiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_INSERT", vremenskiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_INSERT(string VremenskiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_INSERT", mergeOption, vremenskiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_SELECT(string VremenskiOperator)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_SELECT", vremenskiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_SELECT(string VremenskiOperator, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_SELECT", mergeOption, vremenskiOperatorParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_UPDATE(string VremenskiOperator, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_UPDATE", vremenskiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OperatorVremenski> USP_OperatorVremenski_UPDATE(string VremenskiOperator, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OperatorVremenski).Assembly);
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorVremenski>("USP_OperatorVremenski_UPDATE", mergeOption, vremenskiOperatorParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Opomena_DELETE(long? ID_Opomena)
        {
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Opomena_DELETE", iD_OpomenaParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_INSERT(long? ID_Zapis, int? BrojOpomena, DateTime? Datum, int? BrojNeplaceniObrokMin, DateTime? DatumDospijeceDo, DateTime? DatumDospijeceOd, DateTime? DatumInsert, DateTime? DatumUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? OpomenaIznosMin, string OsobaInsert, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojNeplaceniObrokMinParameter = BrojNeplaceniObrokMin.HasValue ?
                new ObjectParameter("BrojNeplaceniObrokMin", BrojNeplaceniObrokMin) :
                new ObjectParameter("BrojNeplaceniObrokMin", typeof(int));
    
            var datumDospijeceDoParameter = DatumDospijeceDo.HasValue ?
                new ObjectParameter("DatumDospijeceDo", DatumDospijeceDo) :
                new ObjectParameter("DatumDospijeceDo", typeof(System.DateTime));
    
            var datumDospijeceOdParameter = DatumDospijeceOd.HasValue ?
                new ObjectParameter("DatumDospijeceOd", DatumDospijeceOd) :
                new ObjectParameter("DatumDospijeceOd", typeof(System.DateTime));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var opomenaIznosMinParameter = OpomenaIznosMin.HasValue ?
                new ObjectParameter("OpomenaIznosMin", OpomenaIznosMin) :
                new ObjectParameter("OpomenaIznosMin", typeof(decimal));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_INSERT", iD_ZapisParameter, brojOpomenaParameter, datumParameter, brojNeplaceniObrokMinParameter, datumDospijeceDoParameter, datumDospijeceOdParameter, datumInsertParameter, datumUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, opomenaIznosMinParameter, osobaInsertParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_INSERT(long? ID_Zapis, int? BrojOpomena, DateTime? Datum, int? BrojNeplaceniObrokMin, DateTime? DatumDospijeceDo, DateTime? DatumDospijeceOd, DateTime? DatumInsert, DateTime? DatumUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? OpomenaIznosMin, string OsobaInsert, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojNeplaceniObrokMinParameter = BrojNeplaceniObrokMin.HasValue ?
                new ObjectParameter("BrojNeplaceniObrokMin", BrojNeplaceniObrokMin) :
                new ObjectParameter("BrojNeplaceniObrokMin", typeof(int));
    
            var datumDospijeceDoParameter = DatumDospijeceDo.HasValue ?
                new ObjectParameter("DatumDospijeceDo", DatumDospijeceDo) :
                new ObjectParameter("DatumDospijeceDo", typeof(System.DateTime));
    
            var datumDospijeceOdParameter = DatumDospijeceOd.HasValue ?
                new ObjectParameter("DatumDospijeceOd", DatumDospijeceOd) :
                new ObjectParameter("DatumDospijeceOd", typeof(System.DateTime));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var opomenaIznosMinParameter = OpomenaIznosMin.HasValue ?
                new ObjectParameter("OpomenaIznosMin", OpomenaIznosMin) :
                new ObjectParameter("OpomenaIznosMin", typeof(decimal));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_INSERT", mergeOption, iD_ZapisParameter, brojOpomenaParameter, datumParameter, brojNeplaceniObrokMinParameter, datumDospijeceDoParameter, datumDospijeceOdParameter, datumInsertParameter, datumUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, opomenaIznosMinParameter, osobaInsertParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_SELECT(long? ID_Opomena)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_SELECT", iD_OpomenaParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_SELECT(long? ID_Opomena, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_SELECT", mergeOption, iD_OpomenaParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_UPDATE(long? ID_Opomena, long? ID_Zapis, int? BrojOpomena, DateTime? Datum, int? BrojNeplaceniObrokMin, DateTime? DatumDospijeceDo, DateTime? DatumDospijeceOd, DateTime? DatumInsert, DateTime? DatumUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? OpomenaIznosMin, string OsobaInsert, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojNeplaceniObrokMinParameter = BrojNeplaceniObrokMin.HasValue ?
                new ObjectParameter("BrojNeplaceniObrokMin", BrojNeplaceniObrokMin) :
                new ObjectParameter("BrojNeplaceniObrokMin", typeof(int));
    
            var datumDospijeceDoParameter = DatumDospijeceDo.HasValue ?
                new ObjectParameter("DatumDospijeceDo", DatumDospijeceDo) :
                new ObjectParameter("DatumDospijeceDo", typeof(System.DateTime));
    
            var datumDospijeceOdParameter = DatumDospijeceOd.HasValue ?
                new ObjectParameter("DatumDospijeceOd", DatumDospijeceOd) :
                new ObjectParameter("DatumDospijeceOd", typeof(System.DateTime));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var opomenaIznosMinParameter = OpomenaIznosMin.HasValue ?
                new ObjectParameter("OpomenaIznosMin", OpomenaIznosMin) :
                new ObjectParameter("OpomenaIznosMin", typeof(decimal));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_UPDATE", iD_OpomenaParameter, iD_ZapisParameter, brojOpomenaParameter, datumParameter, brojNeplaceniObrokMinParameter, datumDospijeceDoParameter, datumDospijeceOdParameter, datumInsertParameter, datumUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, opomenaIznosMinParameter, osobaInsertParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<Opomena> USP_Opomena_UPDATE(long? ID_Opomena, long? ID_Zapis, int? BrojOpomena, DateTime? Datum, int? BrojNeplaceniObrokMin, DateTime? DatumDospijeceDo, DateTime? DatumDospijeceOd, DateTime? DatumInsert, DateTime? DatumUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? OpomenaIznosMin, string OsobaInsert, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Opomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojNeplaceniObrokMinParameter = BrojNeplaceniObrokMin.HasValue ?
                new ObjectParameter("BrojNeplaceniObrokMin", BrojNeplaceniObrokMin) :
                new ObjectParameter("BrojNeplaceniObrokMin", typeof(int));
    
            var datumDospijeceDoParameter = DatumDospijeceDo.HasValue ?
                new ObjectParameter("DatumDospijeceDo", DatumDospijeceDo) :
                new ObjectParameter("DatumDospijeceDo", typeof(System.DateTime));
    
            var datumDospijeceOdParameter = DatumDospijeceOd.HasValue ?
                new ObjectParameter("DatumDospijeceOd", DatumDospijeceOd) :
                new ObjectParameter("DatumDospijeceOd", typeof(System.DateTime));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var opomenaIznosMinParameter = OpomenaIznosMin.HasValue ?
                new ObjectParameter("OpomenaIznosMin", OpomenaIznosMin) :
                new ObjectParameter("OpomenaIznosMin", typeof(decimal));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Opomena>("USP_Opomena_UPDATE", mergeOption, iD_OpomenaParameter, iD_ZapisParameter, brojOpomenaParameter, datumParameter, brojNeplaceniObrokMinParameter, datumDospijeceDoParameter, datumDospijeceOdParameter, datumInsertParameter, datumUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, opomenaIznosMinParameter, osobaInsertParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsnovnoSredstvo_DELETE(long? ID_OsnovnoSredstvo)
        {
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsnovnoSredstvo_DELETE", iD_OsnovnoSredstvoParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_INSERT(long? ID_KnjigaOS, long? ID_Objekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_INSERT", iD_KnjigaOSParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_INSERT(long? ID_KnjigaOS, long? ID_Objekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_INSERT", mergeOption, iD_KnjigaOSParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_SELECT(long? ID_OsnovnoSredstvo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_SELECT", iD_OsnovnoSredstvoParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_SELECT(long? ID_OsnovnoSredstvo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_SELECT", mergeOption, iD_OsnovnoSredstvoParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_UPDATE(long? ID_OsnovnoSredstvo, long? ID_KnjigaOS, long? ID_Objekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_UPDATE", iD_OsnovnoSredstvoParameter, iD_KnjigaOSParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvo> USP_OsnovnoSredstvo_UPDATE(long? ID_OsnovnoSredstvo, long? ID_KnjigaOS, long? ID_Objekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvo).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iD_KnjigaOSParameter = ID_KnjigaOS.HasValue ?
                new ObjectParameter("ID_KnjigaOS", ID_KnjigaOS) :
                new ObjectParameter("ID_KnjigaOS", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvo>("USP_OsnovnoSredstvo_UPDATE", mergeOption, iD_OsnovnoSredstvoParameter, iD_KnjigaOSParameter, iD_ObjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsnovnoSredstvoDnevnik_DELETE(long? ID_OsnovnoSredstvoDnevnik)
        {
            var iD_OsnovnoSredstvoDnevnikParameter = ID_OsnovnoSredstvoDnevnik.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", ID_OsnovnoSredstvoDnevnik) :
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsnovnoSredstvoDnevnik_DELETE", iD_OsnovnoSredstvoDnevnikParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_INSERT(long? ID_OsnovnoSredstvo, int? IDOsnovnoSredstvoDogadaj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_INSERT", iD_OsnovnoSredstvoParameter, iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_INSERT(long? ID_OsnovnoSredstvo, int? IDOsnovnoSredstvoDogadaj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_INSERT", mergeOption, iD_OsnovnoSredstvoParameter, iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_SELECT(long? ID_OsnovnoSredstvoDnevnik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoDnevnikParameter = ID_OsnovnoSredstvoDnevnik.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", ID_OsnovnoSredstvoDnevnik) :
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_SELECT", iD_OsnovnoSredstvoDnevnikParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_SELECT(long? ID_OsnovnoSredstvoDnevnik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoDnevnikParameter = ID_OsnovnoSredstvoDnevnik.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", ID_OsnovnoSredstvoDnevnik) :
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_SELECT", mergeOption, iD_OsnovnoSredstvoDnevnikParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_UPDATE(long? ID_OsnovnoSredstvoDnevnik, long? ID_OsnovnoSredstvo, int? IDOsnovnoSredstvoDogadaj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoDnevnikParameter = ID_OsnovnoSredstvoDnevnik.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", ID_OsnovnoSredstvoDnevnik) :
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", typeof(long));
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_UPDATE", iD_OsnovnoSredstvoDnevnikParameter, iD_OsnovnoSredstvoParameter, iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDnevnik> USP_OsnovnoSredstvoDnevnik_UPDATE(long? ID_OsnovnoSredstvoDnevnik, long? ID_OsnovnoSredstvo, int? IDOsnovnoSredstvoDogadaj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDnevnik).Assembly);
    
            var iD_OsnovnoSredstvoDnevnikParameter = ID_OsnovnoSredstvoDnevnik.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", ID_OsnovnoSredstvoDnevnik) :
                new ObjectParameter("ID_OsnovnoSredstvoDnevnik", typeof(long));
    
            var iD_OsnovnoSredstvoParameter = ID_OsnovnoSredstvo.HasValue ?
                new ObjectParameter("ID_OsnovnoSredstvo", ID_OsnovnoSredstvo) :
                new ObjectParameter("ID_OsnovnoSredstvo", typeof(long));
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDnevnik>("USP_OsnovnoSredstvoDnevnik_UPDATE", mergeOption, iD_OsnovnoSredstvoDnevnikParameter, iD_OsnovnoSredstvoParameter, iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsnovnoSredstvoDogadaj_DELETE(int? IDOsnovnoSredstvoDogadaj)
        {
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsnovnoSredstvoDogadaj_DELETE", iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_INSERT(int? IDOsnovnoSredstvoDogadaj, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_INSERT", iDOsnovnoSredstvoDogadajParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_INSERT(int? IDOsnovnoSredstvoDogadaj, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_INSERT", mergeOption, iDOsnovnoSredstvoDogadajParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_SELECT(int? IDOsnovnoSredstvoDogadaj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_SELECT", iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_SELECT(int? IDOsnovnoSredstvoDogadaj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_SELECT", mergeOption, iDOsnovnoSredstvoDogadajParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_UPDATE(int? IDOsnovnoSredstvoDogadaj, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_UPDATE", iDOsnovnoSredstvoDogadajParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<OsnovnoSredstvoDogadaj> USP_OsnovnoSredstvoDogadaj_UPDATE(int? IDOsnovnoSredstvoDogadaj, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsnovnoSredstvoDogadaj).Assembly);
    
            var iDOsnovnoSredstvoDogadajParameter = IDOsnovnoSredstvoDogadaj.HasValue ?
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", IDOsnovnoSredstvoDogadaj) :
                new ObjectParameter("IDOsnovnoSredstvoDogadaj", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsnovnoSredstvoDogadaj>("USP_OsnovnoSredstvoDogadaj_UPDATE", mergeOption, iDOsnovnoSredstvoDogadajParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Osoba_DELETE(long? ID_Osoba)
        {
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Osoba_DELETE", iD_OsobaParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_INSERT(long? ID_Subjekt, string Oznaka, string Prezime, string Ime, DateTime? DatumRodenja, string MjestoRodenja, string OtacPrezime, string OtacIme, DateTime? OtacDatumRodenja, string OtacMjestoRodenja, string MajkaPrezime, string MajkaIme, string MajkaPrezimeDjevojacko, DateTime? MajkaDatumRodenja, string MajkaMjestoRodenja, long? ID_Narodnost, long? ID_Drzavljanstvo, DateTime? DatumSmrti, string OIB, string JMBG)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var imeParameter = Ime != null ?
                new ObjectParameter("Ime", Ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var datumRodenjaParameter = DatumRodenja.HasValue ?
                new ObjectParameter("DatumRodenja", DatumRodenja) :
                new ObjectParameter("DatumRodenja", typeof(System.DateTime));
    
            var mjestoRodenjaParameter = MjestoRodenja != null ?
                new ObjectParameter("MjestoRodenja", MjestoRodenja) :
                new ObjectParameter("MjestoRodenja", typeof(string));
    
            var otacPrezimeParameter = OtacPrezime != null ?
                new ObjectParameter("OtacPrezime", OtacPrezime) :
                new ObjectParameter("OtacPrezime", typeof(string));
    
            var otacImeParameter = OtacIme != null ?
                new ObjectParameter("OtacIme", OtacIme) :
                new ObjectParameter("OtacIme", typeof(string));
    
            var otacDatumRodenjaParameter = OtacDatumRodenja.HasValue ?
                new ObjectParameter("OtacDatumRodenja", OtacDatumRodenja) :
                new ObjectParameter("OtacDatumRodenja", typeof(System.DateTime));
    
            var otacMjestoRodenjaParameter = OtacMjestoRodenja != null ?
                new ObjectParameter("OtacMjestoRodenja", OtacMjestoRodenja) :
                new ObjectParameter("OtacMjestoRodenja", typeof(string));
    
            var majkaPrezimeParameter = MajkaPrezime != null ?
                new ObjectParameter("MajkaPrezime", MajkaPrezime) :
                new ObjectParameter("MajkaPrezime", typeof(string));
    
            var majkaImeParameter = MajkaIme != null ?
                new ObjectParameter("MajkaIme", MajkaIme) :
                new ObjectParameter("MajkaIme", typeof(string));
    
            var majkaPrezimeDjevojackoParameter = MajkaPrezimeDjevojacko != null ?
                new ObjectParameter("MajkaPrezimeDjevojacko", MajkaPrezimeDjevojacko) :
                new ObjectParameter("MajkaPrezimeDjevojacko", typeof(string));
    
            var majkaDatumRodenjaParameter = MajkaDatumRodenja.HasValue ?
                new ObjectParameter("MajkaDatumRodenja", MajkaDatumRodenja) :
                new ObjectParameter("MajkaDatumRodenja", typeof(System.DateTime));
    
            var majkaMjestoRodenjaParameter = MajkaMjestoRodenja != null ?
                new ObjectParameter("MajkaMjestoRodenja", MajkaMjestoRodenja) :
                new ObjectParameter("MajkaMjestoRodenja", typeof(string));
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var datumSmrtiParameter = DatumSmrti.HasValue ?
                new ObjectParameter("DatumSmrti", DatumSmrti) :
                new ObjectParameter("DatumSmrti", typeof(System.DateTime));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_INSERT", iD_SubjektParameter, oznakaParameter, prezimeParameter, imeParameter, datumRodenjaParameter, mjestoRodenjaParameter, otacPrezimeParameter, otacImeParameter, otacDatumRodenjaParameter, otacMjestoRodenjaParameter, majkaPrezimeParameter, majkaImeParameter, majkaPrezimeDjevojackoParameter, majkaDatumRodenjaParameter, majkaMjestoRodenjaParameter, iD_NarodnostParameter, iD_DrzavljanstvoParameter, datumSmrtiParameter, oIBParameter, jMBGParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_INSERT(long? ID_Subjekt, string Oznaka, string Prezime, string Ime, DateTime? DatumRodenja, string MjestoRodenja, string OtacPrezime, string OtacIme, DateTime? OtacDatumRodenja, string OtacMjestoRodenja, string MajkaPrezime, string MajkaIme, string MajkaPrezimeDjevojacko, DateTime? MajkaDatumRodenja, string MajkaMjestoRodenja, long? ID_Narodnost, long? ID_Drzavljanstvo, DateTime? DatumSmrti, string OIB, string JMBG, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var imeParameter = Ime != null ?
                new ObjectParameter("Ime", Ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var datumRodenjaParameter = DatumRodenja.HasValue ?
                new ObjectParameter("DatumRodenja", DatumRodenja) :
                new ObjectParameter("DatumRodenja", typeof(System.DateTime));
    
            var mjestoRodenjaParameter = MjestoRodenja != null ?
                new ObjectParameter("MjestoRodenja", MjestoRodenja) :
                new ObjectParameter("MjestoRodenja", typeof(string));
    
            var otacPrezimeParameter = OtacPrezime != null ?
                new ObjectParameter("OtacPrezime", OtacPrezime) :
                new ObjectParameter("OtacPrezime", typeof(string));
    
            var otacImeParameter = OtacIme != null ?
                new ObjectParameter("OtacIme", OtacIme) :
                new ObjectParameter("OtacIme", typeof(string));
    
            var otacDatumRodenjaParameter = OtacDatumRodenja.HasValue ?
                new ObjectParameter("OtacDatumRodenja", OtacDatumRodenja) :
                new ObjectParameter("OtacDatumRodenja", typeof(System.DateTime));
    
            var otacMjestoRodenjaParameter = OtacMjestoRodenja != null ?
                new ObjectParameter("OtacMjestoRodenja", OtacMjestoRodenja) :
                new ObjectParameter("OtacMjestoRodenja", typeof(string));
    
            var majkaPrezimeParameter = MajkaPrezime != null ?
                new ObjectParameter("MajkaPrezime", MajkaPrezime) :
                new ObjectParameter("MajkaPrezime", typeof(string));
    
            var majkaImeParameter = MajkaIme != null ?
                new ObjectParameter("MajkaIme", MajkaIme) :
                new ObjectParameter("MajkaIme", typeof(string));
    
            var majkaPrezimeDjevojackoParameter = MajkaPrezimeDjevojacko != null ?
                new ObjectParameter("MajkaPrezimeDjevojacko", MajkaPrezimeDjevojacko) :
                new ObjectParameter("MajkaPrezimeDjevojacko", typeof(string));
    
            var majkaDatumRodenjaParameter = MajkaDatumRodenja.HasValue ?
                new ObjectParameter("MajkaDatumRodenja", MajkaDatumRodenja) :
                new ObjectParameter("MajkaDatumRodenja", typeof(System.DateTime));
    
            var majkaMjestoRodenjaParameter = MajkaMjestoRodenja != null ?
                new ObjectParameter("MajkaMjestoRodenja", MajkaMjestoRodenja) :
                new ObjectParameter("MajkaMjestoRodenja", typeof(string));
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var datumSmrtiParameter = DatumSmrti.HasValue ?
                new ObjectParameter("DatumSmrti", DatumSmrti) :
                new ObjectParameter("DatumSmrti", typeof(System.DateTime));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, prezimeParameter, imeParameter, datumRodenjaParameter, mjestoRodenjaParameter, otacPrezimeParameter, otacImeParameter, otacDatumRodenjaParameter, otacMjestoRodenjaParameter, majkaPrezimeParameter, majkaImeParameter, majkaPrezimeDjevojackoParameter, majkaDatumRodenjaParameter, majkaMjestoRodenjaParameter, iD_NarodnostParameter, iD_DrzavljanstvoParameter, datumSmrtiParameter, oIBParameter, jMBGParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_SELECT(long? ID_Osoba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_SELECT", iD_OsobaParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_SELECT(long? ID_Osoba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_SELECT", mergeOption, iD_OsobaParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_UPDATE(long? ID_Osoba, long? ID_Subjekt, string Oznaka, string Prezime, string Ime, DateTime? DatumRodenja, string MjestoRodenja, string OtacPrezime, string OtacIme, DateTime? OtacDatumRodenja, string OtacMjestoRodenja, string MajkaPrezime, string MajkaIme, string MajkaPrezimeDjevojacko, DateTime? MajkaDatumRodenja, string MajkaMjestoRodenja, long? ID_Narodnost, long? ID_Drzavljanstvo, DateTime? DatumSmrti, string OIB, string JMBG)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var imeParameter = Ime != null ?
                new ObjectParameter("Ime", Ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var datumRodenjaParameter = DatumRodenja.HasValue ?
                new ObjectParameter("DatumRodenja", DatumRodenja) :
                new ObjectParameter("DatumRodenja", typeof(System.DateTime));
    
            var mjestoRodenjaParameter = MjestoRodenja != null ?
                new ObjectParameter("MjestoRodenja", MjestoRodenja) :
                new ObjectParameter("MjestoRodenja", typeof(string));
    
            var otacPrezimeParameter = OtacPrezime != null ?
                new ObjectParameter("OtacPrezime", OtacPrezime) :
                new ObjectParameter("OtacPrezime", typeof(string));
    
            var otacImeParameter = OtacIme != null ?
                new ObjectParameter("OtacIme", OtacIme) :
                new ObjectParameter("OtacIme", typeof(string));
    
            var otacDatumRodenjaParameter = OtacDatumRodenja.HasValue ?
                new ObjectParameter("OtacDatumRodenja", OtacDatumRodenja) :
                new ObjectParameter("OtacDatumRodenja", typeof(System.DateTime));
    
            var otacMjestoRodenjaParameter = OtacMjestoRodenja != null ?
                new ObjectParameter("OtacMjestoRodenja", OtacMjestoRodenja) :
                new ObjectParameter("OtacMjestoRodenja", typeof(string));
    
            var majkaPrezimeParameter = MajkaPrezime != null ?
                new ObjectParameter("MajkaPrezime", MajkaPrezime) :
                new ObjectParameter("MajkaPrezime", typeof(string));
    
            var majkaImeParameter = MajkaIme != null ?
                new ObjectParameter("MajkaIme", MajkaIme) :
                new ObjectParameter("MajkaIme", typeof(string));
    
            var majkaPrezimeDjevojackoParameter = MajkaPrezimeDjevojacko != null ?
                new ObjectParameter("MajkaPrezimeDjevojacko", MajkaPrezimeDjevojacko) :
                new ObjectParameter("MajkaPrezimeDjevojacko", typeof(string));
    
            var majkaDatumRodenjaParameter = MajkaDatumRodenja.HasValue ?
                new ObjectParameter("MajkaDatumRodenja", MajkaDatumRodenja) :
                new ObjectParameter("MajkaDatumRodenja", typeof(System.DateTime));
    
            var majkaMjestoRodenjaParameter = MajkaMjestoRodenja != null ?
                new ObjectParameter("MajkaMjestoRodenja", MajkaMjestoRodenja) :
                new ObjectParameter("MajkaMjestoRodenja", typeof(string));
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var datumSmrtiParameter = DatumSmrti.HasValue ?
                new ObjectParameter("DatumSmrti", DatumSmrti) :
                new ObjectParameter("DatumSmrti", typeof(System.DateTime));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_UPDATE", iD_OsobaParameter, iD_SubjektParameter, oznakaParameter, prezimeParameter, imeParameter, datumRodenjaParameter, mjestoRodenjaParameter, otacPrezimeParameter, otacImeParameter, otacDatumRodenjaParameter, otacMjestoRodenjaParameter, majkaPrezimeParameter, majkaImeParameter, majkaPrezimeDjevojackoParameter, majkaDatumRodenjaParameter, majkaMjestoRodenjaParameter, iD_NarodnostParameter, iD_DrzavljanstvoParameter, datumSmrtiParameter, oIBParameter, jMBGParameter);
        }
    
        public virtual ObjectResult<Osoba> USP_Osoba_UPDATE(long? ID_Osoba, long? ID_Subjekt, string Oznaka, string Prezime, string Ime, DateTime? DatumRodenja, string MjestoRodenja, string OtacPrezime, string OtacIme, DateTime? OtacDatumRodenja, string OtacMjestoRodenja, string MajkaPrezime, string MajkaIme, string MajkaPrezimeDjevojacko, DateTime? MajkaDatumRodenja, string MajkaMjestoRodenja, long? ID_Narodnost, long? ID_Drzavljanstvo, DateTime? DatumSmrti, string OIB, string JMBG, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Osoba).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var imeParameter = Ime != null ?
                new ObjectParameter("Ime", Ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var datumRodenjaParameter = DatumRodenja.HasValue ?
                new ObjectParameter("DatumRodenja", DatumRodenja) :
                new ObjectParameter("DatumRodenja", typeof(System.DateTime));
    
            var mjestoRodenjaParameter = MjestoRodenja != null ?
                new ObjectParameter("MjestoRodenja", MjestoRodenja) :
                new ObjectParameter("MjestoRodenja", typeof(string));
    
            var otacPrezimeParameter = OtacPrezime != null ?
                new ObjectParameter("OtacPrezime", OtacPrezime) :
                new ObjectParameter("OtacPrezime", typeof(string));
    
            var otacImeParameter = OtacIme != null ?
                new ObjectParameter("OtacIme", OtacIme) :
                new ObjectParameter("OtacIme", typeof(string));
    
            var otacDatumRodenjaParameter = OtacDatumRodenja.HasValue ?
                new ObjectParameter("OtacDatumRodenja", OtacDatumRodenja) :
                new ObjectParameter("OtacDatumRodenja", typeof(System.DateTime));
    
            var otacMjestoRodenjaParameter = OtacMjestoRodenja != null ?
                new ObjectParameter("OtacMjestoRodenja", OtacMjestoRodenja) :
                new ObjectParameter("OtacMjestoRodenja", typeof(string));
    
            var majkaPrezimeParameter = MajkaPrezime != null ?
                new ObjectParameter("MajkaPrezime", MajkaPrezime) :
                new ObjectParameter("MajkaPrezime", typeof(string));
    
            var majkaImeParameter = MajkaIme != null ?
                new ObjectParameter("MajkaIme", MajkaIme) :
                new ObjectParameter("MajkaIme", typeof(string));
    
            var majkaPrezimeDjevojackoParameter = MajkaPrezimeDjevojacko != null ?
                new ObjectParameter("MajkaPrezimeDjevojacko", MajkaPrezimeDjevojacko) :
                new ObjectParameter("MajkaPrezimeDjevojacko", typeof(string));
    
            var majkaDatumRodenjaParameter = MajkaDatumRodenja.HasValue ?
                new ObjectParameter("MajkaDatumRodenja", MajkaDatumRodenja) :
                new ObjectParameter("MajkaDatumRodenja", typeof(System.DateTime));
    
            var majkaMjestoRodenjaParameter = MajkaMjestoRodenja != null ?
                new ObjectParameter("MajkaMjestoRodenja", MajkaMjestoRodenja) :
                new ObjectParameter("MajkaMjestoRodenja", typeof(string));
    
            var iD_NarodnostParameter = ID_Narodnost.HasValue ?
                new ObjectParameter("ID_Narodnost", ID_Narodnost) :
                new ObjectParameter("ID_Narodnost", typeof(long));
    
            var iD_DrzavljanstvoParameter = ID_Drzavljanstvo.HasValue ?
                new ObjectParameter("ID_Drzavljanstvo", ID_Drzavljanstvo) :
                new ObjectParameter("ID_Drzavljanstvo", typeof(long));
    
            var datumSmrtiParameter = DatumSmrti.HasValue ?
                new ObjectParameter("DatumSmrti", DatumSmrti) :
                new ObjectParameter("DatumSmrti", typeof(System.DateTime));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            var jMBGParameter = JMBG != null ?
                new ObjectParameter("JMBG", JMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Osoba>("USP_Osoba_UPDATE", mergeOption, iD_OsobaParameter, iD_SubjektParameter, oznakaParameter, prezimeParameter, imeParameter, datumRodenjaParameter, mjestoRodenjaParameter, otacPrezimeParameter, otacImeParameter, otacDatumRodenjaParameter, otacMjestoRodenjaParameter, majkaPrezimeParameter, majkaImeParameter, majkaPrezimeDjevojackoParameter, majkaDatumRodenjaParameter, majkaMjestoRodenjaParameter, iD_NarodnostParameter, iD_DrzavljanstvoParameter, datumSmrtiParameter, oIBParameter, jMBGParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsobaBoraviste_DELETE(long? ID_OsobaBoraviste)
        {
            var iD_OsobaBoravisteParameter = ID_OsobaBoraviste.HasValue ?
                new ObjectParameter("ID_OsobaBoraviste", ID_OsobaBoraviste) :
                new ObjectParameter("ID_OsobaBoraviste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsobaBoraviste_DELETE", iD_OsobaBoravisteParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_INSERT(long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_INSERT", iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_INSERT(long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_INSERT", mergeOption, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_SELECT(long? ID_OsobaBoraviste)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaBoravisteParameter = ID_OsobaBoraviste.HasValue ?
                new ObjectParameter("ID_OsobaBoraviste", ID_OsobaBoraviste) :
                new ObjectParameter("ID_OsobaBoraviste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_SELECT", iD_OsobaBoravisteParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_SELECT(long? ID_OsobaBoraviste, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaBoravisteParameter = ID_OsobaBoraviste.HasValue ?
                new ObjectParameter("ID_OsobaBoraviste", ID_OsobaBoraviste) :
                new ObjectParameter("ID_OsobaBoraviste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_SELECT", mergeOption, iD_OsobaBoravisteParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_UPDATE(long? ID_OsobaBoraviste, long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaBoravisteParameter = ID_OsobaBoraviste.HasValue ?
                new ObjectParameter("ID_OsobaBoraviste", ID_OsobaBoraviste) :
                new ObjectParameter("ID_OsobaBoraviste", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_UPDATE", iD_OsobaBoravisteParameter, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaBoraviste> USP_OsobaBoraviste_UPDATE(long? ID_OsobaBoraviste, long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaBoraviste).Assembly);
    
            var iD_OsobaBoravisteParameter = ID_OsobaBoraviste.HasValue ?
                new ObjectParameter("ID_OsobaBoraviste", ID_OsobaBoraviste) :
                new ObjectParameter("ID_OsobaBoraviste", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaBoraviste>("USP_OsobaBoraviste_UPDATE", mergeOption, iD_OsobaBoravisteParameter, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsobaPrebivaliste_DELETE(long? ID_OsobaPrebivaliste)
        {
            var iD_OsobaPrebivalisteParameter = ID_OsobaPrebivaliste.HasValue ?
                new ObjectParameter("ID_OsobaPrebivaliste", ID_OsobaPrebivaliste) :
                new ObjectParameter("ID_OsobaPrebivaliste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsobaPrebivaliste_DELETE", iD_OsobaPrebivalisteParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_INSERT(long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_INSERT", iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_INSERT(long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_INSERT", mergeOption, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_SELECT(long? ID_OsobaPrebivaliste)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaPrebivalisteParameter = ID_OsobaPrebivaliste.HasValue ?
                new ObjectParameter("ID_OsobaPrebivaliste", ID_OsobaPrebivaliste) :
                new ObjectParameter("ID_OsobaPrebivaliste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_SELECT", iD_OsobaPrebivalisteParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_SELECT(long? ID_OsobaPrebivaliste, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaPrebivalisteParameter = ID_OsobaPrebivaliste.HasValue ?
                new ObjectParameter("ID_OsobaPrebivaliste", ID_OsobaPrebivaliste) :
                new ObjectParameter("ID_OsobaPrebivaliste", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_SELECT", mergeOption, iD_OsobaPrebivalisteParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_UPDATE(long? ID_OsobaPrebivaliste, long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaPrebivalisteParameter = ID_OsobaPrebivaliste.HasValue ?
                new ObjectParameter("ID_OsobaPrebivaliste", ID_OsobaPrebivaliste) :
                new ObjectParameter("ID_OsobaPrebivaliste", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_UPDATE", iD_OsobaPrebivalisteParameter, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<OsobaPrebivaliste> USP_OsobaPrebivaliste_UPDATE(long? ID_OsobaPrebivaliste, long? ID_Osoba, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrebivaliste).Assembly);
    
            var iD_OsobaPrebivalisteParameter = ID_OsobaPrebivaliste.HasValue ?
                new ObjectParameter("ID_OsobaPrebivaliste", ID_OsobaPrebivaliste) :
                new ObjectParameter("ID_OsobaPrebivaliste", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrebivaliste>("USP_OsobaPrebivaliste_UPDATE", mergeOption, iD_OsobaPrebivalisteParameter, iD_OsobaParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_OsobaPrezime_DELETE(long? ID_OsobaPrezime)
        {
            var iD_OsobaPrezimeParameter = ID_OsobaPrezime.HasValue ?
                new ObjectParameter("ID_OsobaPrezime", ID_OsobaPrezime) :
                new ObjectParameter("ID_OsobaPrezime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_OsobaPrezime_DELETE", iD_OsobaPrezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_INSERT(long? ID_Osoba, int? RedniBroj, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, string Prezime)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_INSERT", iD_OsobaParameter, redniBrojParameter, aktivnoParameter, datumOdParameter, datumDoParameter, prezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_INSERT(long? ID_Osoba, int? RedniBroj, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, string Prezime, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_INSERT", mergeOption, iD_OsobaParameter, redniBrojParameter, aktivnoParameter, datumOdParameter, datumDoParameter, prezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_SELECT(long? ID_OsobaPrezime)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaPrezimeParameter = ID_OsobaPrezime.HasValue ?
                new ObjectParameter("ID_OsobaPrezime", ID_OsobaPrezime) :
                new ObjectParameter("ID_OsobaPrezime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_SELECT", iD_OsobaPrezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_SELECT(long? ID_OsobaPrezime, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaPrezimeParameter = ID_OsobaPrezime.HasValue ?
                new ObjectParameter("ID_OsobaPrezime", ID_OsobaPrezime) :
                new ObjectParameter("ID_OsobaPrezime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_SELECT", mergeOption, iD_OsobaPrezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_UPDATE(long? ID_OsobaPrezime, long? ID_Osoba, int? RedniBroj, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, string Prezime)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaPrezimeParameter = ID_OsobaPrezime.HasValue ?
                new ObjectParameter("ID_OsobaPrezime", ID_OsobaPrezime) :
                new ObjectParameter("ID_OsobaPrezime", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_UPDATE", iD_OsobaPrezimeParameter, iD_OsobaParameter, redniBrojParameter, aktivnoParameter, datumOdParameter, datumDoParameter, prezimeParameter);
        }
    
        public virtual ObjectResult<OsobaPrezime> USP_OsobaPrezime_UPDATE(long? ID_OsobaPrezime, long? ID_Osoba, int? RedniBroj, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, string Prezime, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(OsobaPrezime).Assembly);
    
            var iD_OsobaPrezimeParameter = ID_OsobaPrezime.HasValue ?
                new ObjectParameter("ID_OsobaPrezime", ID_OsobaPrezime) :
                new ObjectParameter("ID_OsobaPrezime", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var prezimeParameter = Prezime != null ?
                new ObjectParameter("Prezime", Prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OsobaPrezime>("USP_OsobaPrezime_UPDATE", mergeOption, iD_OsobaPrezimeParameter, iD_OsobaParameter, redniBrojParameter, aktivnoParameter, datumOdParameter, datumDoParameter, prezimeParameter);
        }
    
        public virtual ObjectResult<int?> USP_PDV_DELETE(long? ID_PDV)
        {
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PDV_DELETE", iD_PDVParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_INSERT(long? ID_PDVVr, long? ID_Davanje, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_INSERT", iD_PDVVrParameter, iD_DavanjeParameter, stopaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_INSERT(long? ID_PDVVr, long? ID_Davanje, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_INSERT", mergeOption, iD_PDVVrParameter, iD_DavanjeParameter, stopaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_SELECT(long? ID_PDV)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_SELECT", iD_PDVParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_SELECT(long? ID_PDV, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_SELECT", mergeOption, iD_PDVParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_UPDATE(long? ID_PDV, long? ID_PDVVr, long? ID_Davanje, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_UPDATE", iD_PDVParameter, iD_PDVVrParameter, iD_DavanjeParameter, stopaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<PDV> USP_PDV_UPDATE(long? ID_PDV, long? ID_PDVVr, long? ID_Davanje, decimal? Stopa, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDV).Assembly);
    
            var iD_PDVParameter = ID_PDV.HasValue ?
                new ObjectParameter("ID_PDV", ID_PDV) :
                new ObjectParameter("ID_PDV", typeof(long));
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDV>("USP_PDV_UPDATE", mergeOption, iD_PDVParameter, iD_PDVVrParameter, iD_DavanjeParameter, stopaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_PDVVr_DELETE(long? ID_PDVVr)
        {
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PDVVr_DELETE", iD_PDVVrParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_SELECT(long? ID_PDVVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_SELECT", iD_PDVVrParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_SELECT(long? ID_PDVVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_SELECT", mergeOption, iD_PDVVrParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_UPDATE(long? ID_PDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_UPDATE", iD_PDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PDVVr> USP_PDVVr_UPDATE(long? ID_PDVVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PDVVr).Assembly);
    
            var iD_PDVVrParameter = ID_PDVVr.HasValue ?
                new ObjectParameter("ID_PDVVr", ID_PDVVr) :
                new ObjectParameter("ID_PDVVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDVVr>("USP_PDVVr_UPDATE", mergeOption, iD_PDVVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PlacanjeVr_DELETE(long? ID_PlacanjeVr)
        {
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PlacanjeVr_DELETE", iD_PlacanjeVrParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_SELECT(long? ID_PlacanjeVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_SELECT", iD_PlacanjeVrParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_SELECT(long? ID_PlacanjeVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_SELECT", mergeOption, iD_PlacanjeVrParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_UPDATE(long? ID_PlacanjeVr, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_UPDATE", iD_PlacanjeVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PlacanjeVr> USP_PlacanjeVr_UPDATE(long? ID_PlacanjeVr, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PlacanjeVr).Assembly);
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlacanjeVr>("USP_PlacanjeVr_UPDATE", mergeOption, iD_PlacanjeVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_Poduzece_DELETE(long? ID_Poduzece)
        {
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Poduzece_DELETE", iD_PoduzeceParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDDrzava, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDrzavaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDDrzava, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDrzavaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_SELECT(long? ID_Poduzece)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_SELECT", iD_PoduzeceParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_SELECT(long? ID_Poduzece, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_SELECT", mergeOption, iD_PoduzeceParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_UPDATE(long? ID_Poduzece, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDDrzava, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_UPDATE", iD_PoduzeceParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDrzavaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Poduzece> USP_Poduzece_UPDATE(long? ID_Poduzece, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDDrzava, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Poduzece).Assembly);
    
            var iD_PoduzeceParameter = ID_Poduzece.HasValue ?
                new ObjectParameter("ID_Poduzece", ID_Poduzece) :
                new ObjectParameter("ID_Poduzece", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Poduzece>("USP_Poduzece_UPDATE", mergeOption, iD_PoduzeceParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDDrzavaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_PorezDohodak_DELETE(long? ID_PorezDohodak)
        {
            var iD_PorezDohodakParameter = ID_PorezDohodak.HasValue ?
                new ObjectParameter("ID_PorezDohodak", ID_PorezDohodak) :
                new ObjectParameter("ID_PorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PorezDohodak_DELETE", iD_PorezDohodakParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_INSERT(long? ID_PorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_INSERT", iD_PorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_INSERT(long? ID_PorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_INSERT", mergeOption, iD_PorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_SELECT(long? ID_PorezDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakParameter = ID_PorezDohodak.HasValue ?
                new ObjectParameter("ID_PorezDohodak", ID_PorezDohodak) :
                new ObjectParameter("ID_PorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_SELECT", iD_PorezDohodakParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_SELECT(long? ID_PorezDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakParameter = ID_PorezDohodak.HasValue ?
                new ObjectParameter("ID_PorezDohodak", ID_PorezDohodak) :
                new ObjectParameter("ID_PorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_SELECT", mergeOption, iD_PorezDohodakParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_UPDATE(long? ID_PorezDohodak, long? ID_PorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakParameter = ID_PorezDohodak.HasValue ?
                new ObjectParameter("ID_PorezDohodak", ID_PorezDohodak) :
                new ObjectParameter("ID_PorezDohodak", typeof(long));
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_UPDATE", iD_PorezDohodakParameter, iD_PorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PorezDohodak> USP_PorezDohodak_UPDATE(long? ID_PorezDohodak, long? ID_PorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodak).Assembly);
    
            var iD_PorezDohodakParameter = ID_PorezDohodak.HasValue ?
                new ObjectParameter("ID_PorezDohodak", ID_PorezDohodak) :
                new ObjectParameter("ID_PorezDohodak", typeof(long));
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodak>("USP_PorezDohodak_UPDATE", mergeOption, iD_PorezDohodakParameter, iD_PorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_PorezDohodakPrirez_DELETE(long? ID_PorezDohodakPrirez)
        {
            var iD_PorezDohodakPrirezParameter = ID_PorezDohodakPrirez.HasValue ?
                new ObjectParameter("ID_PorezDohodakPrirez", ID_PorezDohodakPrirez) :
                new ObjectParameter("ID_PorezDohodakPrirez", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PorezDohodakPrirez_DELETE", iD_PorezDohodakPrirezParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_INSERT(long? ID_Opcina, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, int? NNGodina, int? NNBroj, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_INSERT", iD_OpcinaParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, nNGodinaParameter, nNBrojParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_INSERT(long? ID_Opcina, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, int? NNGodina, int? NNBroj, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_INSERT", mergeOption, iD_OpcinaParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, nNGodinaParameter, nNBrojParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_SELECT(long? ID_PorezDohodakPrirez)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_PorezDohodakPrirezParameter = ID_PorezDohodakPrirez.HasValue ?
                new ObjectParameter("ID_PorezDohodakPrirez", ID_PorezDohodakPrirez) :
                new ObjectParameter("ID_PorezDohodakPrirez", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_SELECT", iD_PorezDohodakPrirezParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_SELECT(long? ID_PorezDohodakPrirez, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_PorezDohodakPrirezParameter = ID_PorezDohodakPrirez.HasValue ?
                new ObjectParameter("ID_PorezDohodakPrirez", ID_PorezDohodakPrirez) :
                new ObjectParameter("ID_PorezDohodakPrirez", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_SELECT", mergeOption, iD_PorezDohodakPrirezParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_UPDATE(long? ID_PorezDohodakPrirez, long? ID_Opcina, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, int? NNGodina, int? NNBroj, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_PorezDohodakPrirezParameter = ID_PorezDohodakPrirez.HasValue ?
                new ObjectParameter("ID_PorezDohodakPrirez", ID_PorezDohodakPrirez) :
                new ObjectParameter("ID_PorezDohodakPrirez", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_UPDATE", iD_PorezDohodakPrirezParameter, iD_OpcinaParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, nNGodinaParameter, nNBrojParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakPrirez> USP_PorezDohodakPrirez_UPDATE(long? ID_PorezDohodakPrirez, long? ID_Opcina, long? ID_Davanje, DateTime? DatumOd, DateTime? DatumDo, decimal? Stopa, int? NNGodina, int? NNBroj, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakPrirez).Assembly);
    
            var iD_PorezDohodakPrirezParameter = ID_PorezDohodakPrirez.HasValue ?
                new ObjectParameter("ID_PorezDohodakPrirez", ID_PorezDohodakPrirez) :
                new ObjectParameter("ID_PorezDohodakPrirez", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakPrirez>("USP_PorezDohodakPrirez_UPDATE", mergeOption, iD_PorezDohodakPrirezParameter, iD_OpcinaParameter, iD_DavanjeParameter, datumOdParameter, datumDoParameter, stopaParameter, nNGodinaParameter, nNBrojParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<int?> USP_PorezDohodakVr_DELETE(long? ID_PorezDohodakVr)
        {
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PorezDohodakVr_DELETE", iD_PorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_SELECT(long? ID_PorezDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_SELECT", iD_PorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_SELECT(long? ID_PorezDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_SELECT", mergeOption, iD_PorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_UPDATE(long? ID_PorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_UPDATE", iD_PorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PorezDohodakVr> USP_PorezDohodakVr_UPDATE(long? ID_PorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, decimal? OsobniOdbitak, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PorezDohodakVr).Assembly);
    
            var iD_PorezDohodakVrParameter = ID_PorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PorezDohodakVr", ID_PorezDohodakVr) :
                new ObjectParameter("ID_PorezDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var osobniOdbitakParameter = OsobniOdbitak.HasValue ?
                new ObjectParameter("OsobniOdbitak", OsobniOdbitak) :
                new ObjectParameter("OsobniOdbitak", typeof(decimal));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PorezDohodakVr>("USP_PorezDohodakVr_UPDATE", mergeOption, iD_PorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, osobniOdbitakParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoreznaUprava_DELETE(long? ID_PoreznaUprava)
        {
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoreznaUprava_DELETE", iD_PoreznaUpravaParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_SELECT(long? ID_PoreznaUprava)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_SELECT", iD_PoreznaUpravaParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_SELECT(long? ID_PoreznaUprava, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_SELECT", mergeOption, iD_PoreznaUpravaParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_UPDATE(long? ID_PoreznaUprava, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_UPDATE", iD_PoreznaUpravaParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<PoreznaUprava> USP_PoreznaUprava_UPDATE(long? ID_PoreznaUprava, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUprava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUprava>("USP_PoreznaUprava_UPDATE", mergeOption, iD_PoreznaUpravaParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoreznaUpravaIspostava_DELETE(long? ID_PoreznaUpravaIspostava)
        {
            var iD_PoreznaUpravaIspostavaParameter = ID_PoreznaUpravaIspostava.HasValue ?
                new ObjectParameter("ID_PoreznaUpravaIspostava", ID_PoreznaUpravaIspostava) :
                new ObjectParameter("ID_PoreznaUpravaIspostava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoreznaUpravaIspostava_DELETE", iD_PoreznaUpravaIspostavaParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_INSERT(long? ID_PoreznaUprava, string Oznaka, string Naziv, string NazivKr, string Kratica, string Sifra)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var sifraParameter = Sifra != null ?
                new ObjectParameter("Sifra", Sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_INSERT", iD_PoreznaUpravaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, sifraParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_INSERT(long? ID_PoreznaUprava, string Oznaka, string Naziv, string NazivKr, string Kratica, string Sifra, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var sifraParameter = Sifra != null ?
                new ObjectParameter("Sifra", Sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_INSERT", mergeOption, iD_PoreznaUpravaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, sifraParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_SELECT(long? ID_PoreznaUpravaIspostava)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaIspostavaParameter = ID_PoreznaUpravaIspostava.HasValue ?
                new ObjectParameter("ID_PoreznaUpravaIspostava", ID_PoreznaUpravaIspostava) :
                new ObjectParameter("ID_PoreznaUpravaIspostava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_SELECT", iD_PoreznaUpravaIspostavaParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_SELECT(long? ID_PoreznaUpravaIspostava, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaIspostavaParameter = ID_PoreznaUpravaIspostava.HasValue ?
                new ObjectParameter("ID_PoreznaUpravaIspostava", ID_PoreznaUpravaIspostava) :
                new ObjectParameter("ID_PoreznaUpravaIspostava", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_SELECT", mergeOption, iD_PoreznaUpravaIspostavaParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_UPDATE(long? ID_PoreznaUpravaIspostava, long? ID_PoreznaUprava, string Oznaka, string Naziv, string NazivKr, string Kratica, string Sifra)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaIspostavaParameter = ID_PoreznaUpravaIspostava.HasValue ?
                new ObjectParameter("ID_PoreznaUpravaIspostava", ID_PoreznaUpravaIspostava) :
                new ObjectParameter("ID_PoreznaUpravaIspostava", typeof(long));
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var sifraParameter = Sifra != null ?
                new ObjectParameter("Sifra", Sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_UPDATE", iD_PoreznaUpravaIspostavaParameter, iD_PoreznaUpravaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, sifraParameter);
        }
    
        public virtual ObjectResult<PoreznaUpravaIspostava> USP_PoreznaUpravaIspostava_UPDATE(long? ID_PoreznaUpravaIspostava, long? ID_PoreznaUprava, string Oznaka, string Naziv, string NazivKr, string Kratica, string Sifra, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoreznaUpravaIspostava).Assembly);
    
            var iD_PoreznaUpravaIspostavaParameter = ID_PoreznaUpravaIspostava.HasValue ?
                new ObjectParameter("ID_PoreznaUpravaIspostava", ID_PoreznaUpravaIspostava) :
                new ObjectParameter("ID_PoreznaUpravaIspostava", typeof(long));
    
            var iD_PoreznaUpravaParameter = ID_PoreznaUprava.HasValue ?
                new ObjectParameter("ID_PoreznaUprava", ID_PoreznaUprava) :
                new ObjectParameter("ID_PoreznaUprava", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var sifraParameter = Sifra != null ?
                new ObjectParameter("Sifra", Sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoreznaUpravaIspostava>("USP_PoreznaUpravaIspostava_UPDATE", mergeOption, iD_PoreznaUpravaIspostavaParameter, iD_PoreznaUpravaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, sifraParameter);
        }
    
        public virtual ObjectResult<int?> USP_PosebanPorezDohodak_DELETE(long? ID_PosebanPorezDohodak)
        {
            var iD_PosebanPorezDohodakParameter = ID_PosebanPorezDohodak.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodak", ID_PosebanPorezDohodak) :
                new ObjectParameter("ID_PosebanPorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PosebanPorezDohodak_DELETE", iD_PosebanPorezDohodakParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_INSERT(long? ID_PosebanPorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_INSERT", iD_PosebanPorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_INSERT(long? ID_PosebanPorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_INSERT", mergeOption, iD_PosebanPorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_SELECT(long? ID_PosebanPorezDohodak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakParameter = ID_PosebanPorezDohodak.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodak", ID_PosebanPorezDohodak) :
                new ObjectParameter("ID_PosebanPorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_SELECT", iD_PosebanPorezDohodakParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_SELECT(long? ID_PosebanPorezDohodak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakParameter = ID_PosebanPorezDohodak.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodak", ID_PosebanPorezDohodak) :
                new ObjectParameter("ID_PosebanPorezDohodak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_SELECT", mergeOption, iD_PosebanPorezDohodakParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_UPDATE(long? ID_PosebanPorezDohodak, long? ID_PosebanPorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakParameter = ID_PosebanPorezDohodak.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodak", ID_PosebanPorezDohodak) :
                new ObjectParameter("ID_PosebanPorezDohodak", typeof(long));
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_UPDATE", iD_PosebanPorezDohodakParameter, iD_PosebanPorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodak> USP_PosebanPorezDohodak_UPDATE(long? ID_PosebanPorezDohodak, long? ID_PosebanPorezDohodakVr, long? ID_Davanje, decimal? Stopa, decimal? IznosOsnovaOd, decimal? IznosOsnovaDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodak).Assembly);
    
            var iD_PosebanPorezDohodakParameter = ID_PosebanPorezDohodak.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodak", ID_PosebanPorezDohodak) :
                new ObjectParameter("ID_PosebanPorezDohodak", typeof(long));
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            var iznosOsnovaOdParameter = IznosOsnovaOd.HasValue ?
                new ObjectParameter("IznosOsnovaOd", IznosOsnovaOd) :
                new ObjectParameter("IznosOsnovaOd", typeof(decimal));
    
            var iznosOsnovaDoParameter = IznosOsnovaDo.HasValue ?
                new ObjectParameter("IznosOsnovaDo", IznosOsnovaDo) :
                new ObjectParameter("IznosOsnovaDo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodak>("USP_PosebanPorezDohodak_UPDATE", mergeOption, iD_PosebanPorezDohodakParameter, iD_PosebanPorezDohodakVrParameter, iD_DavanjeParameter, stopaParameter, iznosOsnovaOdParameter, iznosOsnovaDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_PosebanPorezDohodakVr_DELETE(long? ID_PosebanPorezDohodakVr)
        {
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PosebanPorezDohodakVr_DELETE", iD_PosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_SELECT(long? ID_PosebanPorezDohodakVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_SELECT", iD_PosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_SELECT(long? ID_PosebanPorezDohodakVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_SELECT", mergeOption, iD_PosebanPorezDohodakVrParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_UPDATE(long? ID_PosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_UPDATE", iD_PosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<PosebanPorezDohodakVr> USP_PosebanPorezDohodakVr_UPDATE(long? ID_PosebanPorezDohodakVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? DatumOd, DateTime? DatumDo, int? NNGodina, int? NNBroj, int? NNClanak, DateTime? NNDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PosebanPorezDohodakVr).Assembly);
    
            var iD_PosebanPorezDohodakVrParameter = ID_PosebanPorezDohodakVr.HasValue ?
                new ObjectParameter("ID_PosebanPorezDohodakVr", ID_PosebanPorezDohodakVr) :
                new ObjectParameter("ID_PosebanPorezDohodakVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var nNGodinaParameter = NNGodina.HasValue ?
                new ObjectParameter("NNGodina", NNGodina) :
                new ObjectParameter("NNGodina", typeof(int));
    
            var nNBrojParameter = NNBroj.HasValue ?
                new ObjectParameter("NNBroj", NNBroj) :
                new ObjectParameter("NNBroj", typeof(int));
    
            var nNClanakParameter = NNClanak.HasValue ?
                new ObjectParameter("NNClanak", NNClanak) :
                new ObjectParameter("NNClanak", typeof(int));
    
            var nNDatumParameter = NNDatum.HasValue ?
                new ObjectParameter("NNDatum", NNDatum) :
                new ObjectParameter("NNDatum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosebanPorezDohodakVr>("USP_PosebanPorezDohodakVr_UPDATE", mergeOption, iD_PosebanPorezDohodakVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumOdParameter, datumDoParameter, nNGodinaParameter, nNBrojParameter, nNClanakParameter, nNDatumParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoslovnaGodina_DELETE(long? ID_PoslovnaGodina)
        {
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoslovnaGodina_DELETE", iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_INSERT(long? ID_PoslovniSubjekt, int? Godina, DateTime? DatumOd, DateTime? DatumDo, string IDValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_INSERT", iD_PoslovniSubjektParameter, godinaParameter, datumOdParameter, datumDoParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_INSERT(long? ID_PoslovniSubjekt, int? Godina, DateTime? DatumOd, DateTime? DatumDo, string IDValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_INSERT", mergeOption, iD_PoslovniSubjektParameter, godinaParameter, datumOdParameter, datumDoParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_SELECT(long? ID_PoslovnaGodina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_SELECT", iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_SELECT(long? ID_PoslovnaGodina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_SELECT", mergeOption, iD_PoslovnaGodinaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_UPDATE(long? ID_PoslovnaGodina, long? ID_PoslovniSubjekt, int? Godina, DateTime? DatumOd, DateTime? DatumDo, string IDValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_UPDATE", iD_PoslovnaGodinaParameter, iD_PoslovniSubjektParameter, godinaParameter, datumOdParameter, datumDoParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodina> USP_PoslovnaGodina_UPDATE(long? ID_PoslovnaGodina, long? ID_PoslovniSubjekt, int? Godina, DateTime? DatumOd, DateTime? DatumDo, string IDValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodina).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodina>("USP_PoslovnaGodina_UPDATE", mergeOption, iD_PoslovnaGodinaParameter, iD_PoslovniSubjektParameter, godinaParameter, datumOdParameter, datumDoParameter, iDValutaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoslovnaGodinaSubjekt_DELETE(long? ID_PoslovnaGodinaSubjekt)
        {
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoslovnaGodinaSubjekt_DELETE", iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_INSERT(long? ID_PoslovnaGodina, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_INSERT", iD_PoslovnaGodinaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_INSERT(long? ID_PoslovnaGodina, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_INSERT", mergeOption, iD_PoslovnaGodinaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_SELECT(long? ID_PoslovnaGodinaSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_SELECT", iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_SELECT(long? ID_PoslovnaGodinaSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_SELECT", mergeOption, iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_UPDATE(long? ID_PoslovnaGodinaSubjekt, long? ID_PoslovnaGodina, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_UPDATE", iD_PoslovnaGodinaSubjektParameter, iD_PoslovnaGodinaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjekt> USP_PoslovnaGodinaSubjekt_UPDATE(long? ID_PoslovnaGodinaSubjekt, long? ID_PoslovnaGodina, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            var iD_PoslovnaGodinaParameter = ID_PoslovnaGodina.HasValue ?
                new ObjectParameter("ID_PoslovnaGodina", ID_PoslovnaGodina) :
                new ObjectParameter("ID_PoslovnaGodina", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjekt>("USP_PoslovnaGodinaSubjekt_UPDATE", mergeOption, iD_PoslovnaGodinaSubjektParameter, iD_PoslovnaGodinaParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoslovnaGodinaSubjektGr_DELETE(long? ID_PoslovnaGodinaSubjektGr)
        {
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoslovnaGodinaSubjektGr_DELETE", iD_PoslovnaGodinaSubjektGrParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_SELECT(long? ID_PoslovnaGodinaSubjektGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_SELECT", iD_PoslovnaGodinaSubjektGrParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_SELECT(long? ID_PoslovnaGodinaSubjektGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_SELECT", mergeOption, iD_PoslovnaGodinaSubjektGrParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_UPDATE(long? ID_PoslovnaGodinaSubjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_UPDATE", iD_PoslovnaGodinaSubjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGr> USP_PoslovnaGodinaSubjektGr_UPDATE(long? ID_PoslovnaGodinaSubjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGr).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGr>("USP_PoslovnaGodinaSubjektGr_UPDATE", mergeOption, iD_PoslovnaGodinaSubjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoslovnaGodinaSubjektGrSubjekt_DELETE(long? ID_PoslovnaGodinaSubjektGrSubjekt)
        {
            var iD_PoslovnaGodinaSubjektGrSubjektParameter = ID_PoslovnaGodinaSubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", ID_PoslovnaGodinaSubjektGrSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoslovnaGodinaSubjektGrSubjekt_DELETE", iD_PoslovnaGodinaSubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_INSERT(long? ID_PoslovnaGodinaSubjektGr, long? ID_PoslovnaGodinaSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_INSERT", iD_PoslovnaGodinaSubjektGrParameter, iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_INSERT(long? ID_PoslovnaGodinaSubjektGr, long? ID_PoslovnaGodinaSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_INSERT", mergeOption, iD_PoslovnaGodinaSubjektGrParameter, iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_SELECT(long? ID_PoslovnaGodinaSubjektGrSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrSubjektParameter = ID_PoslovnaGodinaSubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", ID_PoslovnaGodinaSubjektGrSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_SELECT", iD_PoslovnaGodinaSubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_SELECT(long? ID_PoslovnaGodinaSubjektGrSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrSubjektParameter = ID_PoslovnaGodinaSubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", ID_PoslovnaGodinaSubjektGrSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_SELECT", mergeOption, iD_PoslovnaGodinaSubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_UPDATE(long? ID_PoslovnaGodinaSubjektGrSubjekt, long? ID_PoslovnaGodinaSubjektGr, long? ID_PoslovnaGodinaSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrSubjektParameter = ID_PoslovnaGodinaSubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", ID_PoslovnaGodinaSubjektGrSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", typeof(long));
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_UPDATE", iD_PoslovnaGodinaSubjektGrSubjektParameter, iD_PoslovnaGodinaSubjektGrParameter, iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovnaGodinaSubjektGrSubjekt> USP_PoslovnaGodinaSubjektGrSubjekt_UPDATE(long? ID_PoslovnaGodinaSubjektGrSubjekt, long? ID_PoslovnaGodinaSubjektGr, long? ID_PoslovnaGodinaSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovnaGodinaSubjektGrSubjekt).Assembly);
    
            var iD_PoslovnaGodinaSubjektGrSubjektParameter = ID_PoslovnaGodinaSubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", ID_PoslovnaGodinaSubjektGrSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGrSubjekt", typeof(long));
    
            var iD_PoslovnaGodinaSubjektGrParameter = ID_PoslovnaGodinaSubjektGr.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", ID_PoslovnaGodinaSubjektGr) :
                new ObjectParameter("ID_PoslovnaGodinaSubjektGr", typeof(long));
    
            var iD_PoslovnaGodinaSubjektParameter = ID_PoslovnaGodinaSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", ID_PoslovnaGodinaSubjekt) :
                new ObjectParameter("ID_PoslovnaGodinaSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovnaGodinaSubjektGrSubjekt>("USP_PoslovnaGodinaSubjektGrSubjekt_UPDATE", mergeOption, iD_PoslovnaGodinaSubjektGrSubjektParameter, iD_PoslovnaGodinaSubjektGrParameter, iD_PoslovnaGodinaSubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoslovniSubjekt_DELETE(long? ID_PoslovniSubjekt)
        {
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoslovniSubjekt_DELETE", iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_INSERT(long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_INSERT", iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_INSERT(long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_INSERT", mergeOption, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_SELECT(long? ID_PoslovniSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_SELECT", iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_SELECT(long? ID_PoslovniSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_SELECT", mergeOption, iD_PoslovniSubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_UPDATE(long? ID_PoslovniSubjekt, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_UPDATE", iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<PoslovniSubjekt> USP_PoslovniSubjekt_UPDATE(long? ID_PoslovniSubjekt, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoslovniSubjekt).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoslovniSubjekt>("USP_PoslovniSubjekt_UPDATE", mergeOption, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_Posta_DELETE(long? ID_Posta)
        {
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Posta_DELETE", iD_PostaParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_INSERT(string IDDrzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string StsPosta, bool? IzborPosta, long? ID_Zupanija, string Zupanija, string PostanskiBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var stsPostaParameter = StsPosta != null ?
                new ObjectParameter("StsPosta", StsPosta) :
                new ObjectParameter("StsPosta", typeof(string));
    
            var izborPostaParameter = IzborPosta.HasValue ?
                new ObjectParameter("IzborPosta", IzborPosta) :
                new ObjectParameter("IzborPosta", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_INSERT", iDDrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, stsPostaParameter, izborPostaParameter, iD_ZupanijaParameter, zupanijaParameter, postanskiBrojParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_INSERT(string IDDrzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string StsPosta, bool? IzborPosta, long? ID_Zupanija, string Zupanija, string PostanskiBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var stsPostaParameter = StsPosta != null ?
                new ObjectParameter("StsPosta", StsPosta) :
                new ObjectParameter("StsPosta", typeof(string));
    
            var izborPostaParameter = IzborPosta.HasValue ?
                new ObjectParameter("IzborPosta", IzborPosta) :
                new ObjectParameter("IzborPosta", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_INSERT", mergeOption, iDDrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, stsPostaParameter, izborPostaParameter, iD_ZupanijaParameter, zupanijaParameter, postanskiBrojParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_SELECT(long? ID_Posta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_SELECT", iD_PostaParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_SELECT(long? ID_Posta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_SELECT", mergeOption, iD_PostaParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_UPDATE(long? ID_Posta, string IDDrzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string StsPosta, bool? IzborPosta, long? ID_Zupanija, string Zupanija, string PostanskiBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var stsPostaParameter = StsPosta != null ?
                new ObjectParameter("StsPosta", StsPosta) :
                new ObjectParameter("StsPosta", typeof(string));
    
            var izborPostaParameter = IzborPosta.HasValue ?
                new ObjectParameter("IzborPosta", IzborPosta) :
                new ObjectParameter("IzborPosta", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_UPDATE", iD_PostaParameter, iDDrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, stsPostaParameter, izborPostaParameter, iD_ZupanijaParameter, zupanijaParameter, postanskiBrojParameter);
        }
    
        public virtual ObjectResult<Posta> USP_Posta_UPDATE(long? ID_Posta, string IDDrzava, string Oznaka, string Naziv, string NazivKr, string Kratica, string StsPosta, bool? IzborPosta, long? ID_Zupanija, string Zupanija, string PostanskiBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Posta).Assembly);
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var stsPostaParameter = StsPosta != null ?
                new ObjectParameter("StsPosta", StsPosta) :
                new ObjectParameter("StsPosta", typeof(string));
    
            var izborPostaParameter = IzborPosta.HasValue ?
                new ObjectParameter("IzborPosta", IzborPosta) :
                new ObjectParameter("IzborPosta", typeof(bool));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var zupanijaParameter = Zupanija != null ?
                new ObjectParameter("Zupanija", Zupanija) :
                new ObjectParameter("Zupanija", typeof(string));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posta>("USP_Posta_UPDATE", mergeOption, iD_PostaParameter, iDDrzavaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, stsPostaParameter, izborPostaParameter, iD_ZupanijaParameter, zupanijaParameter, postanskiBrojParameter);
        }
    
        public virtual ObjectResult<int?> USP_PoticanjeZaposljavanja_DELETE(int? IDPoticanjeZaposljavanja)
        {
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PoticanjeZaposljavanja_DELETE", iDPoticanjeZaposljavanjaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_INSERT(int? IDPoticanjeZaposljavanja, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_INSERT", iDPoticanjeZaposljavanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_INSERT(int? IDPoticanjeZaposljavanja, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_INSERT", mergeOption, iDPoticanjeZaposljavanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_SELECT(int? IDPoticanjeZaposljavanja)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_SELECT", iDPoticanjeZaposljavanjaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_SELECT(int? IDPoticanjeZaposljavanja, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_SELECT", mergeOption, iDPoticanjeZaposljavanjaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_UPDATE(int? IDPoticanjeZaposljavanja, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_UPDATE", iDPoticanjeZaposljavanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PoticanjeZaposljavanja> USP_PoticanjeZaposljavanja_UPDATE(int? IDPoticanjeZaposljavanja, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PoticanjeZaposljavanja).Assembly);
    
            var iDPoticanjeZaposljavanjaParameter = IDPoticanjeZaposljavanja.HasValue ?
                new ObjectParameter("IDPoticanjeZaposljavanja", IDPoticanjeZaposljavanja) :
                new ObjectParameter("IDPoticanjeZaposljavanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoticanjeZaposljavanja>("USP_PoticanjeZaposljavanja_UPDATE", mergeOption, iDPoticanjeZaposljavanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Praznik_DELETE(long? ID_Praznik)
        {
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Praznik_DELETE", iD_PraznikParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_SELECT(long? ID_Praznik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_SELECT", iD_PraznikParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_SELECT(long? ID_Praznik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_SELECT", mergeOption, iD_PraznikParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_UPDATE(long? ID_Praznik, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_UPDATE", iD_PraznikParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Praznik> USP_Praznik_UPDATE(long? ID_Praznik, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Praznik).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Praznik>("USP_Praznik_UPDATE", mergeOption, iD_PraznikParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_PraznikGr_DELETE(long? ID_PraznikGr)
        {
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PraznikGr_DELETE", iD_PraznikGrParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_SELECT(long? ID_PraznikGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_SELECT", iD_PraznikGrParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_SELECT(long? ID_PraznikGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_SELECT", mergeOption, iD_PraznikGrParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_UPDATE(long? ID_PraznikGr, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_UPDATE", iD_PraznikGrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikGr> USP_PraznikGr_UPDATE(long? ID_PraznikGr, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGr).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGr>("USP_PraznikGr_UPDATE", mergeOption, iD_PraznikGrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_PraznikGrPraznik_DELETE(long? ID_PraznikGrPraznik)
        {
            var iD_PraznikGrPraznikParameter = ID_PraznikGrPraznik.HasValue ?
                new ObjectParameter("ID_PraznikGrPraznik", ID_PraznikGrPraznik) :
                new ObjectParameter("ID_PraznikGrPraznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PraznikGrPraznik_DELETE", iD_PraznikGrPraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_INSERT(long? ID_PraznikGr, long? ID_Praznik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_INSERT", iD_PraznikGrParameter, iD_PraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_INSERT(long? ID_PraznikGr, long? ID_Praznik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_INSERT", mergeOption, iD_PraznikGrParameter, iD_PraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_SELECT(long? ID_PraznikGrPraznik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrPraznikParameter = ID_PraznikGrPraznik.HasValue ?
                new ObjectParameter("ID_PraznikGrPraznik", ID_PraznikGrPraznik) :
                new ObjectParameter("ID_PraznikGrPraznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_SELECT", iD_PraznikGrPraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_SELECT(long? ID_PraznikGrPraznik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrPraznikParameter = ID_PraznikGrPraznik.HasValue ?
                new ObjectParameter("ID_PraznikGrPraznik", ID_PraznikGrPraznik) :
                new ObjectParameter("ID_PraznikGrPraznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_SELECT", mergeOption, iD_PraznikGrPraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_UPDATE(long? ID_PraznikGrPraznik, long? ID_PraznikGr, long? ID_Praznik)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrPraznikParameter = ID_PraznikGrPraznik.HasValue ?
                new ObjectParameter("ID_PraznikGrPraznik", ID_PraznikGrPraznik) :
                new ObjectParameter("ID_PraznikGrPraznik", typeof(long));
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_UPDATE", iD_PraznikGrPraznikParameter, iD_PraznikGrParameter, iD_PraznikParameter);
        }
    
        public virtual ObjectResult<PraznikGrPraznik> USP_PraznikGrPraznik_UPDATE(long? ID_PraznikGrPraznik, long? ID_PraznikGr, long? ID_Praznik, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikGrPraznik).Assembly);
    
            var iD_PraznikGrPraznikParameter = ID_PraznikGrPraznik.HasValue ?
                new ObjectParameter("ID_PraznikGrPraznik", ID_PraznikGrPraznik) :
                new ObjectParameter("ID_PraznikGrPraznik", typeof(long));
    
            var iD_PraznikGrParameter = ID_PraznikGr.HasValue ?
                new ObjectParameter("ID_PraznikGr", ID_PraznikGr) :
                new ObjectParameter("ID_PraznikGr", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikGrPraznik>("USP_PraznikGrPraznik_UPDATE", mergeOption, iD_PraznikGrPraznikParameter, iD_PraznikGrParameter, iD_PraznikParameter);
        }
    
        public virtual ObjectResult<int?> USP_PraznikPravilo_DELETE(long? ID_PraznikPravilo)
        {
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PraznikPravilo_DELETE", iD_PraznikPraviloParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_INSERT(long? ID_Praznik, string Oznaka, string Naziv, int? GodinaOd, int? GodinaDo, int? GodinaInterval, long? ID_PraznikPraviloVr, DateTime? Datum, int? MjesecTjedan, int? TjedanDan, int? Mjesec, int? Broj, string VremenskiOperator, long? ID_PraznikReferentni)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var godinaOdParameter = GodinaOd.HasValue ?
                new ObjectParameter("GodinaOd", GodinaOd) :
                new ObjectParameter("GodinaOd", typeof(int));
    
            var godinaDoParameter = GodinaDo.HasValue ?
                new ObjectParameter("GodinaDo", GodinaDo) :
                new ObjectParameter("GodinaDo", typeof(int));
    
            var godinaIntervalParameter = GodinaInterval.HasValue ?
                new ObjectParameter("GodinaInterval", GodinaInterval) :
                new ObjectParameter("GodinaInterval", typeof(int));
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var iD_PraznikReferentniParameter = ID_PraznikReferentni.HasValue ?
                new ObjectParameter("ID_PraznikReferentni", ID_PraznikReferentni) :
                new ObjectParameter("ID_PraznikReferentni", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_INSERT", iD_PraznikParameter, oznakaParameter, nazivParameter, godinaOdParameter, godinaDoParameter, godinaIntervalParameter, iD_PraznikPraviloVrParameter, datumParameter, mjesecTjedanParameter, tjedanDanParameter, mjesecParameter, brojParameter, vremenskiOperatorParameter, iD_PraznikReferentniParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_INSERT(long? ID_Praznik, string Oznaka, string Naziv, int? GodinaOd, int? GodinaDo, int? GodinaInterval, long? ID_PraznikPraviloVr, DateTime? Datum, int? MjesecTjedan, int? TjedanDan, int? Mjesec, int? Broj, string VremenskiOperator, long? ID_PraznikReferentni, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var godinaOdParameter = GodinaOd.HasValue ?
                new ObjectParameter("GodinaOd", GodinaOd) :
                new ObjectParameter("GodinaOd", typeof(int));
    
            var godinaDoParameter = GodinaDo.HasValue ?
                new ObjectParameter("GodinaDo", GodinaDo) :
                new ObjectParameter("GodinaDo", typeof(int));
    
            var godinaIntervalParameter = GodinaInterval.HasValue ?
                new ObjectParameter("GodinaInterval", GodinaInterval) :
                new ObjectParameter("GodinaInterval", typeof(int));
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var iD_PraznikReferentniParameter = ID_PraznikReferentni.HasValue ?
                new ObjectParameter("ID_PraznikReferentni", ID_PraznikReferentni) :
                new ObjectParameter("ID_PraznikReferentni", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_INSERT", mergeOption, iD_PraznikParameter, oznakaParameter, nazivParameter, godinaOdParameter, godinaDoParameter, godinaIntervalParameter, iD_PraznikPraviloVrParameter, datumParameter, mjesecTjedanParameter, tjedanDanParameter, mjesecParameter, brojParameter, vremenskiOperatorParameter, iD_PraznikReferentniParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_SELECT(long? ID_PraznikPravilo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_SELECT", iD_PraznikPraviloParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_SELECT(long? ID_PraznikPravilo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_SELECT", mergeOption, iD_PraznikPraviloParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_UPDATE(long? ID_PraznikPravilo, long? ID_Praznik, string Oznaka, string Naziv, int? GodinaOd, int? GodinaDo, int? GodinaInterval, long? ID_PraznikPraviloVr, DateTime? Datum, int? MjesecTjedan, int? TjedanDan, int? Mjesec, int? Broj, string VremenskiOperator, long? ID_PraznikReferentni)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var godinaOdParameter = GodinaOd.HasValue ?
                new ObjectParameter("GodinaOd", GodinaOd) :
                new ObjectParameter("GodinaOd", typeof(int));
    
            var godinaDoParameter = GodinaDo.HasValue ?
                new ObjectParameter("GodinaDo", GodinaDo) :
                new ObjectParameter("GodinaDo", typeof(int));
    
            var godinaIntervalParameter = GodinaInterval.HasValue ?
                new ObjectParameter("GodinaInterval", GodinaInterval) :
                new ObjectParameter("GodinaInterval", typeof(int));
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var iD_PraznikReferentniParameter = ID_PraznikReferentni.HasValue ?
                new ObjectParameter("ID_PraznikReferentni", ID_PraznikReferentni) :
                new ObjectParameter("ID_PraznikReferentni", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_UPDATE", iD_PraznikPraviloParameter, iD_PraznikParameter, oznakaParameter, nazivParameter, godinaOdParameter, godinaDoParameter, godinaIntervalParameter, iD_PraznikPraviloVrParameter, datumParameter, mjesecTjedanParameter, tjedanDanParameter, mjesecParameter, brojParameter, vremenskiOperatorParameter, iD_PraznikReferentniParameter);
        }
    
        public virtual ObjectResult<PraznikPravilo> USP_PraznikPravilo_UPDATE(long? ID_PraznikPravilo, long? ID_Praznik, string Oznaka, string Naziv, int? GodinaOd, int? GodinaDo, int? GodinaInterval, long? ID_PraznikPraviloVr, DateTime? Datum, int? MjesecTjedan, int? TjedanDan, int? Mjesec, int? Broj, string VremenskiOperator, long? ID_PraznikReferentni, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPravilo).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var godinaOdParameter = GodinaOd.HasValue ?
                new ObjectParameter("GodinaOd", GodinaOd) :
                new ObjectParameter("GodinaOd", typeof(int));
    
            var godinaDoParameter = GodinaDo.HasValue ?
                new ObjectParameter("GodinaDo", GodinaDo) :
                new ObjectParameter("GodinaDo", typeof(int));
    
            var godinaIntervalParameter = GodinaInterval.HasValue ?
                new ObjectParameter("GodinaInterval", GodinaInterval) :
                new ObjectParameter("GodinaInterval", typeof(int));
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var mjesecTjedanParameter = MjesecTjedan.HasValue ?
                new ObjectParameter("MjesecTjedan", MjesecTjedan) :
                new ObjectParameter("MjesecTjedan", typeof(int));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var iD_PraznikReferentniParameter = ID_PraznikReferentni.HasValue ?
                new ObjectParameter("ID_PraznikReferentni", ID_PraznikReferentni) :
                new ObjectParameter("ID_PraznikReferentni", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPravilo>("USP_PraznikPravilo_UPDATE", mergeOption, iD_PraznikPraviloParameter, iD_PraznikParameter, oznakaParameter, nazivParameter, godinaOdParameter, godinaDoParameter, godinaIntervalParameter, iD_PraznikPraviloVrParameter, datumParameter, mjesecTjedanParameter, tjedanDanParameter, mjesecParameter, brojParameter, vremenskiOperatorParameter, iD_PraznikReferentniParameter);
        }
    
        public virtual ObjectResult<int?> USP_PraznikPraviloPomak_DELETE(long? ID_PraznikPraviloPomak)
        {
            var iD_PraznikPraviloPomakParameter = ID_PraznikPraviloPomak.HasValue ?
                new ObjectParameter("ID_PraznikPraviloPomak", ID_PraznikPraviloPomak) :
                new ObjectParameter("ID_PraznikPraviloPomak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PraznikPraviloPomak_DELETE", iD_PraznikPraviloPomakParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_INSERT(long? ID_PraznikPravilo, string Oznaka, string Naziv, int? TjedanDan, int? TjedanDanPomak, long? ID_Praznik, long? ID_PraznikPomak, int? Broj, string VremenskiOperator, bool? Odbaci)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var tjedanDanPomakParameter = TjedanDanPomak.HasValue ?
                new ObjectParameter("TjedanDanPomak", TjedanDanPomak) :
                new ObjectParameter("TjedanDanPomak", typeof(int));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var iD_PraznikPomakParameter = ID_PraznikPomak.HasValue ?
                new ObjectParameter("ID_PraznikPomak", ID_PraznikPomak) :
                new ObjectParameter("ID_PraznikPomak", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var odbaciParameter = Odbaci.HasValue ?
                new ObjectParameter("Odbaci", Odbaci) :
                new ObjectParameter("Odbaci", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_INSERT", iD_PraznikPraviloParameter, oznakaParameter, nazivParameter, tjedanDanParameter, tjedanDanPomakParameter, iD_PraznikParameter, iD_PraznikPomakParameter, brojParameter, vremenskiOperatorParameter, odbaciParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_INSERT(long? ID_PraznikPravilo, string Oznaka, string Naziv, int? TjedanDan, int? TjedanDanPomak, long? ID_Praznik, long? ID_PraznikPomak, int? Broj, string VremenskiOperator, bool? Odbaci, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var tjedanDanPomakParameter = TjedanDanPomak.HasValue ?
                new ObjectParameter("TjedanDanPomak", TjedanDanPomak) :
                new ObjectParameter("TjedanDanPomak", typeof(int));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var iD_PraznikPomakParameter = ID_PraznikPomak.HasValue ?
                new ObjectParameter("ID_PraznikPomak", ID_PraznikPomak) :
                new ObjectParameter("ID_PraznikPomak", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var odbaciParameter = Odbaci.HasValue ?
                new ObjectParameter("Odbaci", Odbaci) :
                new ObjectParameter("Odbaci", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_INSERT", mergeOption, iD_PraznikPraviloParameter, oznakaParameter, nazivParameter, tjedanDanParameter, tjedanDanPomakParameter, iD_PraznikParameter, iD_PraznikPomakParameter, brojParameter, vremenskiOperatorParameter, odbaciParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_SELECT(long? ID_PraznikPraviloPomak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloPomakParameter = ID_PraznikPraviloPomak.HasValue ?
                new ObjectParameter("ID_PraznikPraviloPomak", ID_PraznikPraviloPomak) :
                new ObjectParameter("ID_PraznikPraviloPomak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_SELECT", iD_PraznikPraviloPomakParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_SELECT(long? ID_PraznikPraviloPomak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloPomakParameter = ID_PraznikPraviloPomak.HasValue ?
                new ObjectParameter("ID_PraznikPraviloPomak", ID_PraznikPraviloPomak) :
                new ObjectParameter("ID_PraznikPraviloPomak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_SELECT", mergeOption, iD_PraznikPraviloPomakParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_UPDATE(long? ID_PraznikPraviloPomak, long? ID_PraznikPravilo, string Oznaka, string Naziv, int? TjedanDan, int? TjedanDanPomak, long? ID_Praznik, long? ID_PraznikPomak, int? Broj, string VremenskiOperator, bool? Odbaci)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloPomakParameter = ID_PraznikPraviloPomak.HasValue ?
                new ObjectParameter("ID_PraznikPraviloPomak", ID_PraznikPraviloPomak) :
                new ObjectParameter("ID_PraznikPraviloPomak", typeof(long));
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var tjedanDanPomakParameter = TjedanDanPomak.HasValue ?
                new ObjectParameter("TjedanDanPomak", TjedanDanPomak) :
                new ObjectParameter("TjedanDanPomak", typeof(int));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var iD_PraznikPomakParameter = ID_PraznikPomak.HasValue ?
                new ObjectParameter("ID_PraznikPomak", ID_PraznikPomak) :
                new ObjectParameter("ID_PraznikPomak", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var odbaciParameter = Odbaci.HasValue ?
                new ObjectParameter("Odbaci", Odbaci) :
                new ObjectParameter("Odbaci", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_UPDATE", iD_PraznikPraviloPomakParameter, iD_PraznikPraviloParameter, oznakaParameter, nazivParameter, tjedanDanParameter, tjedanDanPomakParameter, iD_PraznikParameter, iD_PraznikPomakParameter, brojParameter, vremenskiOperatorParameter, odbaciParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloPomak> USP_PraznikPraviloPomak_UPDATE(long? ID_PraznikPraviloPomak, long? ID_PraznikPravilo, string Oznaka, string Naziv, int? TjedanDan, int? TjedanDanPomak, long? ID_Praznik, long? ID_PraznikPomak, int? Broj, string VremenskiOperator, bool? Odbaci, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloPomak).Assembly);
    
            var iD_PraznikPraviloPomakParameter = ID_PraznikPraviloPomak.HasValue ?
                new ObjectParameter("ID_PraznikPraviloPomak", ID_PraznikPraviloPomak) :
                new ObjectParameter("ID_PraznikPraviloPomak", typeof(long));
    
            var iD_PraznikPraviloParameter = ID_PraznikPravilo.HasValue ?
                new ObjectParameter("ID_PraznikPravilo", ID_PraznikPravilo) :
                new ObjectParameter("ID_PraznikPravilo", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var tjedanDanParameter = TjedanDan.HasValue ?
                new ObjectParameter("TjedanDan", TjedanDan) :
                new ObjectParameter("TjedanDan", typeof(int));
    
            var tjedanDanPomakParameter = TjedanDanPomak.HasValue ?
                new ObjectParameter("TjedanDanPomak", TjedanDanPomak) :
                new ObjectParameter("TjedanDanPomak", typeof(int));
    
            var iD_PraznikParameter = ID_Praznik.HasValue ?
                new ObjectParameter("ID_Praznik", ID_Praznik) :
                new ObjectParameter("ID_Praznik", typeof(long));
    
            var iD_PraznikPomakParameter = ID_PraznikPomak.HasValue ?
                new ObjectParameter("ID_PraznikPomak", ID_PraznikPomak) :
                new ObjectParameter("ID_PraznikPomak", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var vremenskiOperatorParameter = VremenskiOperator != null ?
                new ObjectParameter("VremenskiOperator", VremenskiOperator) :
                new ObjectParameter("VremenskiOperator", typeof(string));
    
            var odbaciParameter = Odbaci.HasValue ?
                new ObjectParameter("Odbaci", Odbaci) :
                new ObjectParameter("Odbaci", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloPomak>("USP_PraznikPraviloPomak_UPDATE", mergeOption, iD_PraznikPraviloPomakParameter, iD_PraznikPraviloParameter, oznakaParameter, nazivParameter, tjedanDanParameter, tjedanDanPomakParameter, iD_PraznikParameter, iD_PraznikPomakParameter, brojParameter, vremenskiOperatorParameter, odbaciParameter);
        }
    
        public virtual ObjectResult<int?> USP_PraznikPraviloVr_DELETE(long? ID_PraznikPraviloVr)
        {
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PraznikPraviloVr_DELETE", iD_PraznikPraviloVrParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_SELECT(long? ID_PraznikPraviloVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_SELECT", iD_PraznikPraviloVrParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_SELECT(long? ID_PraznikPraviloVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_SELECT", mergeOption, iD_PraznikPraviloVrParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_UPDATE(long? ID_PraznikPraviloVr, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_UPDATE", iD_PraznikPraviloVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<PraznikPraviloVr> USP_PraznikPraviloVr_UPDATE(long? ID_PraznikPraviloVr, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PraznikPraviloVr).Assembly);
    
            var iD_PraznikPraviloVrParameter = ID_PraznikPraviloVr.HasValue ?
                new ObjectParameter("ID_PraznikPraviloVr", ID_PraznikPraviloVr) :
                new ObjectParameter("ID_PraznikPraviloVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PraznikPraviloVr>("USP_PraznikPraviloVr_UPDATE", mergeOption, iD_PraznikPraviloVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimateljKoeficijent_DELETE(long? ID_PrimateljKoeficijent)
        {
            var iD_PrimateljKoeficijentParameter = ID_PrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijent", ID_PrimateljKoeficijent) :
                new ObjectParameter("ID_PrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimateljKoeficijent_DELETE", iD_PrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_INSERT(long? ID_PrimateljKoeficijentGr, long? ID_Osoba, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_INSERT", iD_PrimateljKoeficijentGrParameter, iD_OsobaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_INSERT(long? ID_PrimateljKoeficijentGr, long? ID_Osoba, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_INSERT", mergeOption, iD_PrimateljKoeficijentGrParameter, iD_OsobaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_SELECT(long? ID_PrimateljKoeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentParameter = ID_PrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijent", ID_PrimateljKoeficijent) :
                new ObjectParameter("ID_PrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_SELECT", iD_PrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_SELECT(long? ID_PrimateljKoeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentParameter = ID_PrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijent", ID_PrimateljKoeficijent) :
                new ObjectParameter("ID_PrimateljKoeficijent", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_SELECT", mergeOption, iD_PrimateljKoeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_UPDATE(long? ID_PrimateljKoeficijent, long? ID_PrimateljKoeficijentGr, long? ID_Osoba, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentParameter = ID_PrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijent", ID_PrimateljKoeficijent) :
                new ObjectParameter("ID_PrimateljKoeficijent", typeof(long));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_UPDATE", iD_PrimateljKoeficijentParameter, iD_PrimateljKoeficijentGrParameter, iD_OsobaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijent> USP_PrimateljKoeficijent_UPDATE(long? ID_PrimateljKoeficijent, long? ID_PrimateljKoeficijentGr, long? ID_Osoba, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijent).Assembly);
    
            var iD_PrimateljKoeficijentParameter = ID_PrimateljKoeficijent.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijent", ID_PrimateljKoeficijent) :
                new ObjectParameter("ID_PrimateljKoeficijent", typeof(long));
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijent>("USP_PrimateljKoeficijent_UPDATE", mergeOption, iD_PrimateljKoeficijentParameter, iD_PrimateljKoeficijentGrParameter, iD_OsobaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimateljKoeficijentGr_DELETE(long? ID_PrimateljKoeficijentGr)
        {
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimateljKoeficijentGr_DELETE", iD_PrimateljKoeficijentGrParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_INSERT(long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_INSERT", iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_INSERT(long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_INSERT", mergeOption, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_SELECT(long? ID_PrimateljKoeficijentGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_SELECT", iD_PrimateljKoeficijentGrParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_SELECT(long? ID_PrimateljKoeficijentGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_SELECT", mergeOption, iD_PrimateljKoeficijentGrParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_UPDATE(long? ID_PrimateljKoeficijentGr, long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_UPDATE", iD_PrimateljKoeficijentGrParameter, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimateljKoeficijentGr> USP_PrimateljKoeficijentGr_UPDATE(long? ID_PrimateljKoeficijentGr, long? ID_DohodakIsplatitelj, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimateljKoeficijentGr).Assembly);
    
            var iD_PrimateljKoeficijentGrParameter = ID_PrimateljKoeficijentGr.HasValue ?
                new ObjectParameter("ID_PrimateljKoeficijentGr", ID_PrimateljKoeficijentGr) :
                new ObjectParameter("ID_PrimateljKoeficijentGr", typeof(long));
    
            var iD_DohodakIsplatiteljParameter = ID_DohodakIsplatitelj.HasValue ?
                new ObjectParameter("ID_DohodakIsplatitelj", ID_DohodakIsplatitelj) :
                new ObjectParameter("ID_DohodakIsplatitelj", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimateljKoeficijentGr>("USP_PrimateljKoeficijentGr_UPDATE", mergeOption, iD_PrimateljKoeficijentGrParameter, iD_DohodakIsplatiteljParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Primitak_DELETE(long? ID_Primitak)
        {
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Primitak_DELETE", iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_PrimitakGrProsjek, long? ID_PrimitakGrProsjekAlt, bool? ProsjekVeci, int? ProsjektMjeseci, int? ProsjekZaMjesec, int? PrimitakProsjekIznos, int? PrimitakProsjekIzracun, int? IDObrazacRSmOsiguranjeOsnova2005A, long? ID_PrimitakGrMinuliRadSati, long? ID_PrimitakGrMinuliRadOsnova)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_PrimitakGrProsjekParameter = ID_PrimitakGrProsjek.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjek", ID_PrimitakGrProsjek) :
                new ObjectParameter("ID_PrimitakGrProsjek", typeof(long));
    
            var iD_PrimitakGrProsjekAltParameter = ID_PrimitakGrProsjekAlt.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjekAlt", ID_PrimitakGrProsjekAlt) :
                new ObjectParameter("ID_PrimitakGrProsjekAlt", typeof(long));
    
            var prosjekVeciParameter = ProsjekVeci.HasValue ?
                new ObjectParameter("ProsjekVeci", ProsjekVeci) :
                new ObjectParameter("ProsjekVeci", typeof(bool));
    
            var prosjektMjeseciParameter = ProsjektMjeseci.HasValue ?
                new ObjectParameter("ProsjektMjeseci", ProsjektMjeseci) :
                new ObjectParameter("ProsjektMjeseci", typeof(int));
    
            var prosjekZaMjesecParameter = ProsjekZaMjesec.HasValue ?
                new ObjectParameter("ProsjekZaMjesec", ProsjekZaMjesec) :
                new ObjectParameter("ProsjekZaMjesec", typeof(int));
    
            var primitakProsjekIznosParameter = PrimitakProsjekIznos.HasValue ?
                new ObjectParameter("PrimitakProsjekIznos", PrimitakProsjekIznos) :
                new ObjectParameter("PrimitakProsjekIznos", typeof(int));
    
            var primitakProsjekIzracunParameter = PrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("PrimitakProsjekIzracun", PrimitakProsjekIzracun) :
                new ObjectParameter("PrimitakProsjekIzracun", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var iD_PrimitakGrMinuliRadSatiParameter = ID_PrimitakGrMinuliRadSati.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", ID_PrimitakGrMinuliRadSati) :
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", typeof(long));
    
            var iD_PrimitakGrMinuliRadOsnovaParameter = ID_PrimitakGrMinuliRadOsnova.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", ID_PrimitakGrMinuliRadOsnova) :
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_PrimitakGrProsjekParameter, iD_PrimitakGrProsjekAltParameter, prosjekVeciParameter, prosjektMjeseciParameter, prosjekZaMjesecParameter, primitakProsjekIznosParameter, primitakProsjekIzracunParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter, iD_PrimitakGrMinuliRadSatiParameter, iD_PrimitakGrMinuliRadOsnovaParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_PrimitakGrProsjek, long? ID_PrimitakGrProsjekAlt, bool? ProsjekVeci, int? ProsjektMjeseci, int? ProsjekZaMjesec, int? PrimitakProsjekIznos, int? PrimitakProsjekIzracun, int? IDObrazacRSmOsiguranjeOsnova2005A, long? ID_PrimitakGrMinuliRadSati, long? ID_PrimitakGrMinuliRadOsnova, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_PrimitakGrProsjekParameter = ID_PrimitakGrProsjek.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjek", ID_PrimitakGrProsjek) :
                new ObjectParameter("ID_PrimitakGrProsjek", typeof(long));
    
            var iD_PrimitakGrProsjekAltParameter = ID_PrimitakGrProsjekAlt.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjekAlt", ID_PrimitakGrProsjekAlt) :
                new ObjectParameter("ID_PrimitakGrProsjekAlt", typeof(long));
    
            var prosjekVeciParameter = ProsjekVeci.HasValue ?
                new ObjectParameter("ProsjekVeci", ProsjekVeci) :
                new ObjectParameter("ProsjekVeci", typeof(bool));
    
            var prosjektMjeseciParameter = ProsjektMjeseci.HasValue ?
                new ObjectParameter("ProsjektMjeseci", ProsjektMjeseci) :
                new ObjectParameter("ProsjektMjeseci", typeof(int));
    
            var prosjekZaMjesecParameter = ProsjekZaMjesec.HasValue ?
                new ObjectParameter("ProsjekZaMjesec", ProsjekZaMjesec) :
                new ObjectParameter("ProsjekZaMjesec", typeof(int));
    
            var primitakProsjekIznosParameter = PrimitakProsjekIznos.HasValue ?
                new ObjectParameter("PrimitakProsjekIznos", PrimitakProsjekIznos) :
                new ObjectParameter("PrimitakProsjekIznos", typeof(int));
    
            var primitakProsjekIzracunParameter = PrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("PrimitakProsjekIzracun", PrimitakProsjekIzracun) :
                new ObjectParameter("PrimitakProsjekIzracun", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var iD_PrimitakGrMinuliRadSatiParameter = ID_PrimitakGrMinuliRadSati.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", ID_PrimitakGrMinuliRadSati) :
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", typeof(long));
    
            var iD_PrimitakGrMinuliRadOsnovaParameter = ID_PrimitakGrMinuliRadOsnova.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", ID_PrimitakGrMinuliRadOsnova) :
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_PrimitakGrProsjekParameter, iD_PrimitakGrProsjekAltParameter, prosjekVeciParameter, prosjektMjeseciParameter, prosjekZaMjesecParameter, primitakProsjekIznosParameter, primitakProsjekIzracunParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter, iD_PrimitakGrMinuliRadSatiParameter, iD_PrimitakGrMinuliRadOsnovaParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_SELECT(long? ID_Primitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_SELECT", iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_SELECT(long? ID_Primitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_SELECT", mergeOption, iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_UPDATE(long? ID_Primitak, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_PrimitakGrProsjek, long? ID_PrimitakGrProsjekAlt, bool? ProsjekVeci, int? ProsjektMjeseci, int? ProsjekZaMjesec, int? PrimitakProsjekIznos, int? PrimitakProsjekIzracun, int? IDObrazacRSmOsiguranjeOsnova2005A, long? ID_PrimitakGrMinuliRadSati, long? ID_PrimitakGrMinuliRadOsnova)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_PrimitakGrProsjekParameter = ID_PrimitakGrProsjek.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjek", ID_PrimitakGrProsjek) :
                new ObjectParameter("ID_PrimitakGrProsjek", typeof(long));
    
            var iD_PrimitakGrProsjekAltParameter = ID_PrimitakGrProsjekAlt.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjekAlt", ID_PrimitakGrProsjekAlt) :
                new ObjectParameter("ID_PrimitakGrProsjekAlt", typeof(long));
    
            var prosjekVeciParameter = ProsjekVeci.HasValue ?
                new ObjectParameter("ProsjekVeci", ProsjekVeci) :
                new ObjectParameter("ProsjekVeci", typeof(bool));
    
            var prosjektMjeseciParameter = ProsjektMjeseci.HasValue ?
                new ObjectParameter("ProsjektMjeseci", ProsjektMjeseci) :
                new ObjectParameter("ProsjektMjeseci", typeof(int));
    
            var prosjekZaMjesecParameter = ProsjekZaMjesec.HasValue ?
                new ObjectParameter("ProsjekZaMjesec", ProsjekZaMjesec) :
                new ObjectParameter("ProsjekZaMjesec", typeof(int));
    
            var primitakProsjekIznosParameter = PrimitakProsjekIznos.HasValue ?
                new ObjectParameter("PrimitakProsjekIznos", PrimitakProsjekIznos) :
                new ObjectParameter("PrimitakProsjekIznos", typeof(int));
    
            var primitakProsjekIzracunParameter = PrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("PrimitakProsjekIzracun", PrimitakProsjekIzracun) :
                new ObjectParameter("PrimitakProsjekIzracun", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var iD_PrimitakGrMinuliRadSatiParameter = ID_PrimitakGrMinuliRadSati.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", ID_PrimitakGrMinuliRadSati) :
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", typeof(long));
    
            var iD_PrimitakGrMinuliRadOsnovaParameter = ID_PrimitakGrMinuliRadOsnova.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", ID_PrimitakGrMinuliRadOsnova) :
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_UPDATE", iD_PrimitakParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_PrimitakGrProsjekParameter, iD_PrimitakGrProsjekAltParameter, prosjekVeciParameter, prosjektMjeseciParameter, prosjekZaMjesecParameter, primitakProsjekIznosParameter, primitakProsjekIzracunParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter, iD_PrimitakGrMinuliRadSatiParameter, iD_PrimitakGrMinuliRadOsnovaParameter);
        }
    
        public virtual ObjectResult<Primitak> USP_Primitak_UPDATE(long? ID_Primitak, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_PrimitakGrProsjek, long? ID_PrimitakGrProsjekAlt, bool? ProsjekVeci, int? ProsjektMjeseci, int? ProsjekZaMjesec, int? PrimitakProsjekIznos, int? PrimitakProsjekIzracun, int? IDObrazacRSmOsiguranjeOsnova2005A, long? ID_PrimitakGrMinuliRadSati, long? ID_PrimitakGrMinuliRadOsnova, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Primitak).Assembly);
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_PrimitakGrProsjekParameter = ID_PrimitakGrProsjek.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjek", ID_PrimitakGrProsjek) :
                new ObjectParameter("ID_PrimitakGrProsjek", typeof(long));
    
            var iD_PrimitakGrProsjekAltParameter = ID_PrimitakGrProsjekAlt.HasValue ?
                new ObjectParameter("ID_PrimitakGrProsjekAlt", ID_PrimitakGrProsjekAlt) :
                new ObjectParameter("ID_PrimitakGrProsjekAlt", typeof(long));
    
            var prosjekVeciParameter = ProsjekVeci.HasValue ?
                new ObjectParameter("ProsjekVeci", ProsjekVeci) :
                new ObjectParameter("ProsjekVeci", typeof(bool));
    
            var prosjektMjeseciParameter = ProsjektMjeseci.HasValue ?
                new ObjectParameter("ProsjektMjeseci", ProsjektMjeseci) :
                new ObjectParameter("ProsjektMjeseci", typeof(int));
    
            var prosjekZaMjesecParameter = ProsjekZaMjesec.HasValue ?
                new ObjectParameter("ProsjekZaMjesec", ProsjekZaMjesec) :
                new ObjectParameter("ProsjekZaMjesec", typeof(int));
    
            var primitakProsjekIznosParameter = PrimitakProsjekIznos.HasValue ?
                new ObjectParameter("PrimitakProsjekIznos", PrimitakProsjekIznos) :
                new ObjectParameter("PrimitakProsjekIznos", typeof(int));
    
            var primitakProsjekIzracunParameter = PrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("PrimitakProsjekIzracun", PrimitakProsjekIzracun) :
                new ObjectParameter("PrimitakProsjekIzracun", typeof(int));
    
            var iDObrazacRSmOsiguranjeOsnova2005AParameter = IDObrazacRSmOsiguranjeOsnova2005A.HasValue ?
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", IDObrazacRSmOsiguranjeOsnova2005A) :
                new ObjectParameter("IDObrazacRSmOsiguranjeOsnova2005A", typeof(int));
    
            var iD_PrimitakGrMinuliRadSatiParameter = ID_PrimitakGrMinuliRadSati.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", ID_PrimitakGrMinuliRadSati) :
                new ObjectParameter("ID_PrimitakGrMinuliRadSati", typeof(long));
    
            var iD_PrimitakGrMinuliRadOsnovaParameter = ID_PrimitakGrMinuliRadOsnova.HasValue ?
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", ID_PrimitakGrMinuliRadOsnova) :
                new ObjectParameter("ID_PrimitakGrMinuliRadOsnova", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Primitak>("USP_Primitak_UPDATE", mergeOption, iD_PrimitakParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_PrimitakGrProsjekParameter, iD_PrimitakGrProsjekAltParameter, prosjekVeciParameter, prosjektMjeseciParameter, prosjekZaMjesecParameter, primitakProsjekIznosParameter, primitakProsjekIzracunParameter, iDObrazacRSmOsiguranjeOsnova2005AParameter, iD_PrimitakGrMinuliRadSatiParameter, iD_PrimitakGrMinuliRadOsnovaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakGr_DELETE(long? ID_PrimitakGr)
        {
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakGr_DELETE", iD_PrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_SELECT(long? ID_PrimitakGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_SELECT", iD_PrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_SELECT(long? ID_PrimitakGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_SELECT", mergeOption, iD_PrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_UPDATE(long? ID_PrimitakGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_UPDATE", iD_PrimitakGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakGr> USP_PrimitakGr_UPDATE(long? ID_PrimitakGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGr>("USP_PrimitakGr_UPDATE", mergeOption, iD_PrimitakGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakGrPrimitak_DELETE(long? ID_PrimitakGrPrimitak)
        {
            var iD_PrimitakGrPrimitakParameter = ID_PrimitakGrPrimitak.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitak", ID_PrimitakGrPrimitak) :
                new ObjectParameter("ID_PrimitakGrPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakGrPrimitak_DELETE", iD_PrimitakGrPrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_INSERT(long? ID_PrimitakGr, long? ID_Primitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_INSERT", iD_PrimitakGrParameter, iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_INSERT(long? ID_PrimitakGr, long? ID_Primitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_INSERT", mergeOption, iD_PrimitakGrParameter, iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_SELECT(long? ID_PrimitakGrPrimitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrPrimitakParameter = ID_PrimitakGrPrimitak.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitak", ID_PrimitakGrPrimitak) :
                new ObjectParameter("ID_PrimitakGrPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_SELECT", iD_PrimitakGrPrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_SELECT(long? ID_PrimitakGrPrimitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrPrimitakParameter = ID_PrimitakGrPrimitak.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitak", ID_PrimitakGrPrimitak) :
                new ObjectParameter("ID_PrimitakGrPrimitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_SELECT", mergeOption, iD_PrimitakGrPrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_UPDATE(long? ID_PrimitakGrPrimitak, long? ID_PrimitakGr, long? ID_Primitak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrPrimitakParameter = ID_PrimitakGrPrimitak.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitak", ID_PrimitakGrPrimitak) :
                new ObjectParameter("ID_PrimitakGrPrimitak", typeof(long));
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_UPDATE", iD_PrimitakGrPrimitakParameter, iD_PrimitakGrParameter, iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitak> USP_PrimitakGrPrimitak_UPDATE(long? ID_PrimitakGrPrimitak, long? ID_PrimitakGr, long? ID_Primitak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitak).Assembly);
    
            var iD_PrimitakGrPrimitakParameter = ID_PrimitakGrPrimitak.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitak", ID_PrimitakGrPrimitak) :
                new ObjectParameter("ID_PrimitakGrPrimitak", typeof(long));
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakParameter = ID_Primitak.HasValue ?
                new ObjectParameter("ID_Primitak", ID_Primitak) :
                new ObjectParameter("ID_Primitak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitak>("USP_PrimitakGrPrimitak_UPDATE", mergeOption, iD_PrimitakGrPrimitakParameter, iD_PrimitakGrParameter, iD_PrimitakParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakGrPrimitakGr_DELETE(long? ID_PrimitakGrPrimitakGr)
        {
            var iD_PrimitakGrPrimitakGrParameter = ID_PrimitakGrPrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitakGr", ID_PrimitakGrPrimitakGr) :
                new ObjectParameter("ID_PrimitakGrPrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakGrPrimitakGr_DELETE", iD_PrimitakGrPrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_INSERT(long? ID_PrimitakGr, long? ID_PrimitakGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakGrNadParameter = ID_PrimitakGrNad.HasValue ?
                new ObjectParameter("ID_PrimitakGrNad", ID_PrimitakGrNad) :
                new ObjectParameter("ID_PrimitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_INSERT", iD_PrimitakGrParameter, iD_PrimitakGrNadParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_INSERT(long? ID_PrimitakGr, long? ID_PrimitakGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakGrNadParameter = ID_PrimitakGrNad.HasValue ?
                new ObjectParameter("ID_PrimitakGrNad", ID_PrimitakGrNad) :
                new ObjectParameter("ID_PrimitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_INSERT", mergeOption, iD_PrimitakGrParameter, iD_PrimitakGrNadParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_SELECT(long? ID_PrimitakGrPrimitakGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrPrimitakGrParameter = ID_PrimitakGrPrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitakGr", ID_PrimitakGrPrimitakGr) :
                new ObjectParameter("ID_PrimitakGrPrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_SELECT", iD_PrimitakGrPrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_SELECT(long? ID_PrimitakGrPrimitakGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrPrimitakGrParameter = ID_PrimitakGrPrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitakGr", ID_PrimitakGrPrimitakGr) :
                new ObjectParameter("ID_PrimitakGrPrimitakGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_SELECT", mergeOption, iD_PrimitakGrPrimitakGrParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_UPDATE(long? ID_PrimitakGrPrimitakGr, long? ID_PrimitakGr, long? ID_PrimitakGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrPrimitakGrParameter = ID_PrimitakGrPrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitakGr", ID_PrimitakGrPrimitakGr) :
                new ObjectParameter("ID_PrimitakGrPrimitakGr", typeof(long));
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakGrNadParameter = ID_PrimitakGrNad.HasValue ?
                new ObjectParameter("ID_PrimitakGrNad", ID_PrimitakGrNad) :
                new ObjectParameter("ID_PrimitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_UPDATE", iD_PrimitakGrPrimitakGrParameter, iD_PrimitakGrParameter, iD_PrimitakGrNadParameter);
        }
    
        public virtual ObjectResult<PrimitakGrPrimitakGr> USP_PrimitakGrPrimitakGr_UPDATE(long? ID_PrimitakGrPrimitakGr, long? ID_PrimitakGr, long? ID_PrimitakGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakGrPrimitakGr).Assembly);
    
            var iD_PrimitakGrPrimitakGrParameter = ID_PrimitakGrPrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGrPrimitakGr", ID_PrimitakGrPrimitakGr) :
                new ObjectParameter("ID_PrimitakGrPrimitakGr", typeof(long));
    
            var iD_PrimitakGrParameter = ID_PrimitakGr.HasValue ?
                new ObjectParameter("ID_PrimitakGr", ID_PrimitakGr) :
                new ObjectParameter("ID_PrimitakGr", typeof(long));
    
            var iD_PrimitakGrNadParameter = ID_PrimitakGrNad.HasValue ?
                new ObjectParameter("ID_PrimitakGrNad", ID_PrimitakGrNad) :
                new ObjectParameter("ID_PrimitakGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakGrPrimitakGr>("USP_PrimitakGrPrimitakGr_UPDATE", mergeOption, iD_PrimitakGrPrimitakGrParameter, iD_PrimitakGrParameter, iD_PrimitakGrNadParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakProsjekGr_DELETE(long? ID_PrimitakProsjekGr)
        {
            var iD_PrimitakProsjekGrParameter = ID_PrimitakProsjekGr.HasValue ?
                new ObjectParameter("ID_PrimitakProsjekGr", ID_PrimitakProsjekGr) :
                new ObjectParameter("ID_PrimitakProsjekGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakProsjekGr_DELETE", iD_PrimitakProsjekGrParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_SELECT(long? ID_PrimitakProsjekGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var iD_PrimitakProsjekGrParameter = ID_PrimitakProsjekGr.HasValue ?
                new ObjectParameter("ID_PrimitakProsjekGr", ID_PrimitakProsjekGr) :
                new ObjectParameter("ID_PrimitakProsjekGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_SELECT", iD_PrimitakProsjekGrParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_SELECT(long? ID_PrimitakProsjekGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var iD_PrimitakProsjekGrParameter = ID_PrimitakProsjekGr.HasValue ?
                new ObjectParameter("ID_PrimitakProsjekGr", ID_PrimitakProsjekGr) :
                new ObjectParameter("ID_PrimitakProsjekGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_SELECT", mergeOption, iD_PrimitakProsjekGrParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_UPDATE(long? ID_PrimitakProsjekGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var iD_PrimitakProsjekGrParameter = ID_PrimitakProsjekGr.HasValue ?
                new ObjectParameter("ID_PrimitakProsjekGr", ID_PrimitakProsjekGr) :
                new ObjectParameter("ID_PrimitakProsjekGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_UPDATE", iD_PrimitakProsjekGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekGr> USP_PrimitakProsjekGr_UPDATE(long? ID_PrimitakProsjekGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekGr).Assembly);
    
            var iD_PrimitakProsjekGrParameter = ID_PrimitakProsjekGr.HasValue ?
                new ObjectParameter("ID_PrimitakProsjekGr", ID_PrimitakProsjekGr) :
                new ObjectParameter("ID_PrimitakProsjekGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekGr>("USP_PrimitakProsjekGr_UPDATE", mergeOption, iD_PrimitakProsjekGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakProsjekIznos_DELETE(int? IDPrimitakProsjekIznos)
        {
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakProsjekIznos_DELETE", iDPrimitakProsjekIznosParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_INSERT(int? IDPrimitakProsjekIznos, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_INSERT", iDPrimitakProsjekIznosParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_INSERT(int? IDPrimitakProsjekIznos, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_INSERT", mergeOption, iDPrimitakProsjekIznosParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_SELECT(int? IDPrimitakProsjekIznos)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_SELECT", iDPrimitakProsjekIznosParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_SELECT(int? IDPrimitakProsjekIznos, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_SELECT", mergeOption, iDPrimitakProsjekIznosParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_UPDATE(int? IDPrimitakProsjekIznos, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_UPDATE", iDPrimitakProsjekIznosParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIznos> USP_PrimitakProsjekIznos_UPDATE(int? IDPrimitakProsjekIznos, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIznos).Assembly);
    
            var iDPrimitakProsjekIznosParameter = IDPrimitakProsjekIznos.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIznos", IDPrimitakProsjekIznos) :
                new ObjectParameter("IDPrimitakProsjekIznos", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIznos>("USP_PrimitakProsjekIznos_UPDATE", mergeOption, iDPrimitakProsjekIznosParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_PrimitakProsjekIzracun_DELETE(int? IDPrimitakProsjekIzracun)
        {
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_PrimitakProsjekIzracun_DELETE", iDPrimitakProsjekIzracunParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_INSERT(int? IDPrimitakProsjekIzracun, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_INSERT", iDPrimitakProsjekIzracunParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_INSERT(int? IDPrimitakProsjekIzracun, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_INSERT", mergeOption, iDPrimitakProsjekIzracunParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_SELECT(int? IDPrimitakProsjekIzracun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_SELECT", iDPrimitakProsjekIzracunParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_SELECT(int? IDPrimitakProsjekIzracun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_SELECT", mergeOption, iDPrimitakProsjekIzracunParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_UPDATE(int? IDPrimitakProsjekIzracun, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_UPDATE", iDPrimitakProsjekIzracunParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<PrimitakProsjekIzracun> USP_PrimitakProsjekIzracun_UPDATE(int? IDPrimitakProsjekIzracun, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PrimitakProsjekIzracun).Assembly);
    
            var iDPrimitakProsjekIzracunParameter = IDPrimitakProsjekIzracun.HasValue ?
                new ObjectParameter("IDPrimitakProsjekIzracun", IDPrimitakProsjekIzracun) :
                new ObjectParameter("IDPrimitakProsjekIzracun", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimitakProsjekIzracun>("USP_PrimitakProsjekIzracun_UPDATE", mergeOption, iDPrimitakProsjekIzracunParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Rabat_DELETE(long? ID_Rabat)
        {
            var iD_RabatParameter = ID_Rabat.HasValue ?
                new ObjectParameter("ID_Rabat", ID_Rabat) :
                new ObjectParameter("ID_Rabat", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Rabat_DELETE", iD_RabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_INSERT(long? ID_PoslovniSubjekt, long? ID_Subjekt, decimal? StopaRabat)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_INSERT", iD_PoslovniSubjektParameter, iD_SubjektParameter, stopaRabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_INSERT(long? ID_PoslovniSubjekt, long? ID_Subjekt, decimal? StopaRabat, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_INSERT", mergeOption, iD_PoslovniSubjektParameter, iD_SubjektParameter, stopaRabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_SELECT(long? ID_Rabat)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_RabatParameter = ID_Rabat.HasValue ?
                new ObjectParameter("ID_Rabat", ID_Rabat) :
                new ObjectParameter("ID_Rabat", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_SELECT", iD_RabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_SELECT(long? ID_Rabat, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_RabatParameter = ID_Rabat.HasValue ?
                new ObjectParameter("ID_Rabat", ID_Rabat) :
                new ObjectParameter("ID_Rabat", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_SELECT", mergeOption, iD_RabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_UPDATE(long? ID_Rabat, long? ID_PoslovniSubjekt, long? ID_Subjekt, decimal? StopaRabat)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_RabatParameter = ID_Rabat.HasValue ?
                new ObjectParameter("ID_Rabat", ID_Rabat) :
                new ObjectParameter("ID_Rabat", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_UPDATE", iD_RabatParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter, stopaRabatParameter);
        }
    
        public virtual ObjectResult<Rabat> USP_Rabat_UPDATE(long? ID_Rabat, long? ID_PoslovniSubjekt, long? ID_Subjekt, decimal? StopaRabat, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Rabat).Assembly);
    
            var iD_RabatParameter = ID_Rabat.HasValue ?
                new ObjectParameter("ID_Rabat", ID_Rabat) :
                new ObjectParameter("ID_Rabat", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rabat>("USP_Rabat_UPDATE", mergeOption, iD_RabatParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter, stopaRabatParameter);
        }
    
        public virtual ObjectResult<int?> USP_Racun_DELETE(long? ID_Racun)
        {
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Racun_DELETE", iD_RacunParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_INSERT(long? ID_RacunVr, string Oznaka, string Naziv, string VBDI, string Broj, string IBAN)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_INSERT", iD_RacunVrParameter, oznakaParameter, nazivParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_INSERT(long? ID_RacunVr, string Oznaka, string Naziv, string VBDI, string Broj, string IBAN, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_INSERT", mergeOption, iD_RacunVrParameter, oznakaParameter, nazivParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_SELECT(long? ID_Racun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_SELECT", iD_RacunParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_SELECT(long? ID_Racun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_SELECT", mergeOption, iD_RacunParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_UPDATE(long? ID_Racun, long? ID_RacunVr, string Oznaka, string Naziv, string VBDI, string Broj, string IBAN)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_UPDATE", iD_RacunParameter, iD_RacunVrParameter, oznakaParameter, nazivParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<Racun> USP_Racun_UPDATE(long? ID_Racun, long? ID_RacunVr, string Oznaka, string Naziv, string VBDI, string Broj, string IBAN, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Racun).Assembly);
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("USP_Racun_UPDATE", mergeOption, iD_RacunParameter, iD_RacunVrParameter, oznakaParameter, nazivParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunIzlaz_DELETE(long? ID_RacunIzlaz)
        {
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunIzlaz_DELETE", iD_RacunIzlazParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_INSERT", iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_SELECT(long? ID_RacunIzlaz)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_SELECT", iD_RacunIzlazParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_SELECT(long? ID_RacunIzlaz, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_SELECT", mergeOption, iD_RacunIzlazParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_UPDATE(long? ID_RacunIzlaz, long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_UPDATE", iD_RacunIzlazParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunIzlaz> USP_RacunIzlaz_UPDATE(long? ID_RacunIzlaz, long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlaz).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlaz>("USP_RacunIzlaz_UPDATE", mergeOption, iD_RacunIzlazParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunIzlazKontniPlan_DELETE(long? ID_RacunIzlazKontniPlan)
        {
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunIzlazKontniPlan_DELETE", iD_RacunIzlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_INSERT(long? ID_RacunIzlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_INSERT", iD_RacunIzlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_INSERT(long? ID_RacunIzlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_INSERT", mergeOption, iD_RacunIzlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_SELECT(long? ID_RacunIzlazKontniPlan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_SELECT", iD_RacunIzlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_SELECT(long? ID_RacunIzlazKontniPlan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_SELECT", mergeOption, iD_RacunIzlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_UPDATE(long? ID_RacunIzlazKontniPlan, long? ID_RacunIzlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_UPDATE", iD_RacunIzlazKontniPlanParameter, iD_RacunIzlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlan> USP_RacunIzlazKontniPlan_UPDATE(long? ID_RacunIzlazKontniPlan, long? ID_RacunIzlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlan).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlan>("USP_RacunIzlazKontniPlan_UPDATE", mergeOption, iD_RacunIzlazKontniPlanParameter, iD_RacunIzlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunIzlazKontniPlanKriterij_DELETE(long? ID_RacunIzlazKontniPlanKriterij)
        {
            var iD_RacunIzlazKontniPlanKriterijParameter = ID_RacunIzlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", ID_RacunIzlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunIzlazKontniPlanKriterij_DELETE", iD_RacunIzlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_INSERT(long? ID_RacunIzlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_INSERT", iD_RacunIzlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_INSERT(long? ID_RacunIzlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_INSERT", mergeOption, iD_RacunIzlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_SELECT(long? ID_RacunIzlazKontniPlanKriterij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanKriterijParameter = ID_RacunIzlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", ID_RacunIzlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_SELECT", iD_RacunIzlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_SELECT(long? ID_RacunIzlazKontniPlanKriterij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanKriterijParameter = ID_RacunIzlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", ID_RacunIzlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_SELECT", mergeOption, iD_RacunIzlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_UPDATE(long? ID_RacunIzlazKontniPlanKriterij, long? ID_RacunIzlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanKriterijParameter = ID_RacunIzlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", ID_RacunIzlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", typeof(long));
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_UPDATE", iD_RacunIzlazKontniPlanKriterijParameter, iD_RacunIzlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazKontniPlanKriterij> USP_RacunIzlazKontniPlanKriterij_UPDATE(long? ID_RacunIzlazKontniPlanKriterij, long? ID_RacunIzlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazKontniPlanKriterij).Assembly);
    
            var iD_RacunIzlazKontniPlanKriterijParameter = ID_RacunIzlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", ID_RacunIzlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunIzlazKontniPlanKriterij", typeof(long));
    
            var iD_RacunIzlazKontniPlanParameter = ID_RacunIzlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunIzlazKontniPlan", ID_RacunIzlazKontniPlan) :
                new ObjectParameter("ID_RacunIzlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazKontniPlanKriterij>("USP_RacunIzlazKontniPlanKriterij_UPDATE", mergeOption, iD_RacunIzlazKontniPlanKriterijParameter, iD_RacunIzlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunIzlazSt_DELETE(long? ID_RacunIzlazSt)
        {
            var iD_RacunIzlazStParameter = ID_RacunIzlazSt.HasValue ?
                new ObjectParameter("ID_RacunIzlazSt", ID_RacunIzlazSt) :
                new ObjectParameter("ID_RacunIzlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunIzlazSt_DELETE", iD_RacunIzlazStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_INSERT(long? ID_RacunIzlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_INSERT", iD_RacunIzlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_INSERT(long? ID_RacunIzlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_INSERT", mergeOption, iD_RacunIzlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_SELECT(long? ID_RacunIzlazSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazStParameter = ID_RacunIzlazSt.HasValue ?
                new ObjectParameter("ID_RacunIzlazSt", ID_RacunIzlazSt) :
                new ObjectParameter("ID_RacunIzlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_SELECT", iD_RacunIzlazStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_SELECT(long? ID_RacunIzlazSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazStParameter = ID_RacunIzlazSt.HasValue ?
                new ObjectParameter("ID_RacunIzlazSt", ID_RacunIzlazSt) :
                new ObjectParameter("ID_RacunIzlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_SELECT", mergeOption, iD_RacunIzlazStParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_UPDATE(long? ID_RacunIzlazSt, long? ID_RacunIzlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazStParameter = ID_RacunIzlazSt.HasValue ?
                new ObjectParameter("ID_RacunIzlazSt", ID_RacunIzlazSt) :
                new ObjectParameter("ID_RacunIzlazSt", typeof(long));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_UPDATE", iD_RacunIzlazStParameter, iD_RacunIzlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunIzlazSt> USP_RacunIzlazSt_UPDATE(long? ID_RacunIzlazSt, long? ID_RacunIzlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunIzlazSt).Assembly);
    
            var iD_RacunIzlazStParameter = ID_RacunIzlazSt.HasValue ?
                new ObjectParameter("ID_RacunIzlazSt", ID_RacunIzlazSt) :
                new ObjectParameter("ID_RacunIzlazSt", typeof(long));
    
            var iD_RacunIzlazParameter = ID_RacunIzlaz.HasValue ?
                new ObjectParameter("ID_RacunIzlaz", ID_RacunIzlaz) :
                new ObjectParameter("ID_RacunIzlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunIzlazSt>("USP_RacunIzlazSt_UPDATE", mergeOption, iD_RacunIzlazStParameter, iD_RacunIzlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunUlaz_DELETE(long? ID_RacunUlaz)
        {
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunUlaz_DELETE", iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_INSERT", iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_INSERT(long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_INSERT", mergeOption, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_SELECT(long? ID_RacunUlaz)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_SELECT", iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_SELECT(long? ID_RacunUlaz, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_SELECT", mergeOption, iD_RacunUlazParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_UPDATE(long? ID_RacunUlaz, long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_UPDATE", iD_RacunUlazParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<RacunUlaz> USP_RacunUlaz_UPDATE(long? ID_RacunUlaz, long? ID_Zapis, long? ID_PoslovniSubjekt, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlaz).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlaz>("USP_RacunUlaz_UPDATE", mergeOption, iD_RacunUlazParameter, iD_ZapisParameter, iD_PoslovniSubjektParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunUlazKontniPlan_DELETE(long? ID_RacunUlazKontniPlan)
        {
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunUlazKontniPlan_DELETE", iD_RacunUlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_INSERT(long? ID_RacunUlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_INSERT", iD_RacunUlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_INSERT(long? ID_RacunUlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_INSERT", mergeOption, iD_RacunUlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_SELECT(long? ID_RacunUlazKontniPlan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_SELECT", iD_RacunUlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_SELECT(long? ID_RacunUlazKontniPlan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_SELECT", mergeOption, iD_RacunUlazKontniPlanParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_UPDATE(long? ID_RacunUlazKontniPlan, long? ID_RacunUlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_UPDATE", iD_RacunUlazKontniPlanParameter, iD_RacunUlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlan> USP_RacunUlazKontniPlan_UPDATE(long? ID_RacunUlazKontniPlan, long? ID_RacunUlaz, long? ID_KontniPlan, long? ID_Shema, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlan).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlan>("USP_RacunUlazKontniPlan_UPDATE", mergeOption, iD_RacunUlazKontniPlanParameter, iD_RacunUlazParameter, iD_KontniPlanParameter, iD_ShemaParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunUlazKontniPlanKriterij_DELETE(long? ID_RacunUlazKontniPlanKriterij)
        {
            var iD_RacunUlazKontniPlanKriterijParameter = ID_RacunUlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", ID_RacunUlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunUlazKontniPlanKriterij_DELETE", iD_RacunUlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_INSERT(long? ID_RacunUlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_INSERT", iD_RacunUlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_INSERT(long? ID_RacunUlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_INSERT", mergeOption, iD_RacunUlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_SELECT(long? ID_RacunUlazKontniPlanKriterij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanKriterijParameter = ID_RacunUlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", ID_RacunUlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_SELECT", iD_RacunUlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_SELECT(long? ID_RacunUlazKontniPlanKriterij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanKriterijParameter = ID_RacunUlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", ID_RacunUlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_SELECT", mergeOption, iD_RacunUlazKontniPlanKriterijParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_UPDATE(long? ID_RacunUlazKontniPlanKriterij, long? ID_RacunUlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanKriterijParameter = ID_RacunUlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", ID_RacunUlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", typeof(long));
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_UPDATE", iD_RacunUlazKontniPlanKriterijParameter, iD_RacunUlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<RacunUlazKontniPlanKriterij> USP_RacunUlazKontniPlanKriterij_UPDATE(long? ID_RacunUlazKontniPlanKriterij, long? ID_RacunUlazKontniPlan, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazKontniPlanKriterij).Assembly);
    
            var iD_RacunUlazKontniPlanKriterijParameter = ID_RacunUlazKontniPlanKriterij.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", ID_RacunUlazKontniPlanKriterij) :
                new ObjectParameter("ID_RacunUlazKontniPlanKriterij", typeof(long));
    
            var iD_RacunUlazKontniPlanParameter = ID_RacunUlazKontniPlan.HasValue ?
                new ObjectParameter("ID_RacunUlazKontniPlan", ID_RacunUlazKontniPlan) :
                new ObjectParameter("ID_RacunUlazKontniPlan", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazKontniPlanKriterij>("USP_RacunUlazKontniPlanKriterij_UPDATE", mergeOption, iD_RacunUlazKontniPlanKriterijParameter, iD_RacunUlazKontniPlanParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunUlazSt_DELETE(long? ID_RacunUlazSt)
        {
            var iD_RacunUlazStParameter = ID_RacunUlazSt.HasValue ?
                new ObjectParameter("ID_RacunUlazSt", ID_RacunUlazSt) :
                new ObjectParameter("ID_RacunUlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunUlazSt_DELETE", iD_RacunUlazStParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_INSERT(long? ID_RacunUlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_INSERT", iD_RacunUlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_INSERT(long? ID_RacunUlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_INSERT", mergeOption, iD_RacunUlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_SELECT(long? ID_RacunUlazSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazStParameter = ID_RacunUlazSt.HasValue ?
                new ObjectParameter("ID_RacunUlazSt", ID_RacunUlazSt) :
                new ObjectParameter("ID_RacunUlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_SELECT", iD_RacunUlazStParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_SELECT(long? ID_RacunUlazSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazStParameter = ID_RacunUlazSt.HasValue ?
                new ObjectParameter("ID_RacunUlazSt", ID_RacunUlazSt) :
                new ObjectParameter("ID_RacunUlazSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_SELECT", mergeOption, iD_RacunUlazStParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_UPDATE(long? ID_RacunUlazSt, long? ID_RacunUlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazStParameter = ID_RacunUlazSt.HasValue ?
                new ObjectParameter("ID_RacunUlazSt", ID_RacunUlazSt) :
                new ObjectParameter("ID_RacunUlazSt", typeof(long));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_UPDATE", iD_RacunUlazStParameter, iD_RacunUlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<RacunUlazSt> USP_RacunUlazSt_UPDATE(long? ID_RacunUlazSt, long? ID_RacunUlaz, int? RedniBroj, long? ID_Objekt, long? ID_Davanje, decimal? Cijena, decimal? Kolicina, decimal? IznosVrijednost, decimal? StopaRabat, decimal? IznosRabat, decimal? IznosOsnova, decimal? IznosPorez, decimal? IznosUkupno, string IDValuta, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunUlazSt).Assembly);
    
            var iD_RacunUlazStParameter = ID_RacunUlazSt.HasValue ?
                new ObjectParameter("ID_RacunUlazSt", ID_RacunUlazSt) :
                new ObjectParameter("ID_RacunUlazSt", typeof(long));
    
            var iD_RacunUlazParameter = ID_RacunUlaz.HasValue ?
                new ObjectParameter("ID_RacunUlaz", ID_RacunUlaz) :
                new ObjectParameter("ID_RacunUlaz", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var cijenaParameter = Cijena.HasValue ?
                new ObjectParameter("Cijena", Cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kolicinaParameter = Kolicina.HasValue ?
                new ObjectParameter("Kolicina", Kolicina) :
                new ObjectParameter("Kolicina", typeof(decimal));
    
            var iznosVrijednostParameter = IznosVrijednost.HasValue ?
                new ObjectParameter("IznosVrijednost", IznosVrijednost) :
                new ObjectParameter("IznosVrijednost", typeof(decimal));
    
            var stopaRabatParameter = StopaRabat.HasValue ?
                new ObjectParameter("StopaRabat", StopaRabat) :
                new ObjectParameter("StopaRabat", typeof(decimal));
    
            var iznosRabatParameter = IznosRabat.HasValue ?
                new ObjectParameter("IznosRabat", IznosRabat) :
                new ObjectParameter("IznosRabat", typeof(decimal));
    
            var iznosOsnovaParameter = IznosOsnova.HasValue ?
                new ObjectParameter("IznosOsnova", IznosOsnova) :
                new ObjectParameter("IznosOsnova", typeof(decimal));
    
            var iznosPorezParameter = IznosPorez.HasValue ?
                new ObjectParameter("IznosPorez", IznosPorez) :
                new ObjectParameter("IznosPorez", typeof(decimal));
    
            var iznosUkupnoParameter = IznosUkupno.HasValue ?
                new ObjectParameter("IznosUkupno", IznosUkupno) :
                new ObjectParameter("IznosUkupno", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunUlazSt>("USP_RacunUlazSt_UPDATE", mergeOption, iD_RacunUlazStParameter, iD_RacunUlazParameter, redniBrojParameter, iD_ObjektParameter, iD_DavanjeParameter, cijenaParameter, kolicinaParameter, iznosVrijednostParameter, stopaRabatParameter, iznosRabatParameter, iznosOsnovaParameter, iznosPorezParameter, iznosUkupnoParameter, iDValutaParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<int?> USP_RacunVr_DELETE(long? ID_RacunVr)
        {
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RacunVr_DELETE", iD_RacunVrParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_INSERT(string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_INSERT", oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_INSERT(string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_INSERT", mergeOption, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_SELECT(long? ID_RacunVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_SELECT", iD_RacunVrParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_SELECT(long? ID_RacunVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_SELECT", mergeOption, iD_RacunVrParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_UPDATE(long? ID_RacunVr, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_UPDATE", iD_RacunVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<RacunVr> USP_RacunVr_UPDATE(long? ID_RacunVr, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RacunVr).Assembly);
    
            var iD_RacunVrParameter = ID_RacunVr.HasValue ?
                new ObjectParameter("ID_RacunVr", ID_RacunVr) :
                new ObjectParameter("ID_RacunVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RacunVr>("USP_RacunVr_UPDATE", mergeOption, iD_RacunVrParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_RadnoMjesto_DELETE(long? ID_RadnoMjesto)
        {
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_RadnoMjesto_DELETE", iD_RadnoMjestoParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_INSERT(long? ID_PoslovniSubjekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_INSERT", iD_PoslovniSubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_INSERT(long? ID_PoslovniSubjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_INSERT", mergeOption, iD_PoslovniSubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_SELECT(long? ID_RadnoMjesto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_SELECT", iD_RadnoMjestoParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_SELECT(long? ID_RadnoMjesto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_SELECT", mergeOption, iD_RadnoMjestoParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_UPDATE(long? ID_RadnoMjesto, long? ID_PoslovniSubjekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_UPDATE", iD_RadnoMjestoParameter, iD_PoslovniSubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> USP_RadnoMjesto_UPDATE(long? ID_RadnoMjesto, long? ID_PoslovniSubjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(RadnoMjesto).Assembly);
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var iD_PoslovniSubjektParameter = ID_PoslovniSubjekt.HasValue ?
                new ObjectParameter("ID_PoslovniSubjekt", ID_PoslovniSubjekt) :
                new ObjectParameter("ID_PoslovniSubjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("USP_RadnoMjesto_UPDATE", mergeOption, iD_RadnoMjestoParameter, iD_PoslovniSubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Roba_DELETE(long? ID_Roba)
        {
            var iD_RobaParameter = ID_Roba.HasValue ?
                new ObjectParameter("ID_Roba", ID_Roba) :
                new ObjectParameter("ID_Roba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Roba_DELETE", iD_RobaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_SELECT(long? ID_Roba)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_RobaParameter = ID_Roba.HasValue ?
                new ObjectParameter("ID_Roba", ID_Roba) :
                new ObjectParameter("ID_Roba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_SELECT", iD_RobaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_SELECT(long? ID_Roba, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_RobaParameter = ID_Roba.HasValue ?
                new ObjectParameter("ID_Roba", ID_Roba) :
                new ObjectParameter("ID_Roba", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_SELECT", mergeOption, iD_RobaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_UPDATE(long? ID_Roba, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_RobaParameter = ID_Roba.HasValue ?
                new ObjectParameter("ID_Roba", ID_Roba) :
                new ObjectParameter("ID_Roba", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_UPDATE", iD_RobaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Roba> USP_Roba_UPDATE(long? ID_Roba, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Roba).Assembly);
    
            var iD_RobaParameter = ID_Roba.HasValue ?
                new ObjectParameter("ID_Roba", ID_Roba) :
                new ObjectParameter("ID_Roba", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Roba>("USP_Roba_UPDATE", mergeOption, iD_RobaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Shema_DELETE(long? ID_Shema)
        {
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Shema_DELETE", iD_ShemaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_INSERT(long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_INSERT", iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_INSERT(long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_INSERT", mergeOption, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_SELECT(long? ID_Shema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_SELECT", iD_ShemaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_SELECT(long? ID_Shema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_SELECT", mergeOption, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_UPDATE(long? ID_Shema, long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_UPDATE", iD_ShemaParameter, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Shema> USP_Shema_UPDATE(long? ID_Shema, long? ID_KontniPlan, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Shema).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanParameter = ID_KontniPlan.HasValue ?
                new ObjectParameter("ID_KontniPlan", ID_KontniPlan) :
                new ObjectParameter("ID_KontniPlan", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shema>("USP_Shema_UPDATE", mergeOption, iD_ShemaParameter, iD_KontniPlanParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaGr_DELETE(long? ID_ShemaGr)
        {
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaGr_DELETE", iD_ShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_SELECT(long? ID_ShemaGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_SELECT", iD_ShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_SELECT(long? ID_ShemaGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_SELECT", mergeOption, iD_ShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_UPDATE(long? ID_ShemaGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_UPDATE", iD_ShemaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGr> USP_ShemaGr_UPDATE(long? ID_ShemaGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGr).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGr>("USP_ShemaGr_UPDATE", mergeOption, iD_ShemaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaGrShema_DELETE(long? ID_ShemaGrShema)
        {
            var iD_ShemaGrShemaParameter = ID_ShemaGrShema.HasValue ?
                new ObjectParameter("ID_ShemaGrShema", ID_ShemaGrShema) :
                new ObjectParameter("ID_ShemaGrShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaGrShema_DELETE", iD_ShemaGrShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_INSERT(long? ID_ShemaGr, long? ID_Shema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_INSERT", iD_ShemaGrParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_INSERT(long? ID_ShemaGr, long? ID_Shema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_INSERT", mergeOption, iD_ShemaGrParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_SELECT(long? ID_ShemaGrShema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrShemaParameter = ID_ShemaGrShema.HasValue ?
                new ObjectParameter("ID_ShemaGrShema", ID_ShemaGrShema) :
                new ObjectParameter("ID_ShemaGrShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_SELECT", iD_ShemaGrShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_SELECT(long? ID_ShemaGrShema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrShemaParameter = ID_ShemaGrShema.HasValue ?
                new ObjectParameter("ID_ShemaGrShema", ID_ShemaGrShema) :
                new ObjectParameter("ID_ShemaGrShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_SELECT", mergeOption, iD_ShemaGrShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_UPDATE(long? ID_ShemaGrShema, long? ID_ShemaGr, long? ID_Shema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrShemaParameter = ID_ShemaGrShema.HasValue ?
                new ObjectParameter("ID_ShemaGrShema", ID_ShemaGrShema) :
                new ObjectParameter("ID_ShemaGrShema", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_UPDATE", iD_ShemaGrShemaParameter, iD_ShemaGrParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShema> USP_ShemaGrShema_UPDATE(long? ID_ShemaGrShema, long? ID_ShemaGr, long? ID_Shema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShema).Assembly);
    
            var iD_ShemaGrShemaParameter = ID_ShemaGrShema.HasValue ?
                new ObjectParameter("ID_ShemaGrShema", ID_ShemaGrShema) :
                new ObjectParameter("ID_ShemaGrShema", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShema>("USP_ShemaGrShema_UPDATE", mergeOption, iD_ShemaGrShemaParameter, iD_ShemaGrParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaGrShemaGr_DELETE(long? ID_ShemaGrShemaGr)
        {
            var iD_ShemaGrShemaGrParameter = ID_ShemaGrShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGr", ID_ShemaGrShemaGr) :
                new ObjectParameter("ID_ShemaGrShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaGrShemaGr_DELETE", iD_ShemaGrShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_INSERT(long? ID_ShemaGrShemaGrStruktura, long? ID_ShemaGr, long? ID_ShemaGrNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaGrNadParameter = ID_ShemaGrNad.HasValue ?
                new ObjectParameter("ID_ShemaGrNad", ID_ShemaGrNad) :
                new ObjectParameter("ID_ShemaGrNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_INSERT", iD_ShemaGrShemaGrStrukturaParameter, iD_ShemaGrParameter, iD_ShemaGrNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_INSERT(long? ID_ShemaGrShemaGrStruktura, long? ID_ShemaGr, long? ID_ShemaGrNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaGrNadParameter = ID_ShemaGrNad.HasValue ?
                new ObjectParameter("ID_ShemaGrNad", ID_ShemaGrNad) :
                new ObjectParameter("ID_ShemaGrNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_INSERT", mergeOption, iD_ShemaGrShemaGrStrukturaParameter, iD_ShemaGrParameter, iD_ShemaGrNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_SELECT(long? ID_ShemaGrShemaGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrParameter = ID_ShemaGrShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGr", ID_ShemaGrShemaGr) :
                new ObjectParameter("ID_ShemaGrShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_SELECT", iD_ShemaGrShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_SELECT(long? ID_ShemaGrShemaGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrParameter = ID_ShemaGrShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGr", ID_ShemaGrShemaGr) :
                new ObjectParameter("ID_ShemaGrShemaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_SELECT", mergeOption, iD_ShemaGrShemaGrParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_UPDATE(long? ID_ShemaGrShemaGr, long? ID_ShemaGrShemaGrStruktura, long? ID_ShemaGr, long? ID_ShemaGrNad, int? Nivo, string Put)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrParameter = ID_ShemaGrShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGr", ID_ShemaGrShemaGr) :
                new ObjectParameter("ID_ShemaGrShemaGr", typeof(long));
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaGrNadParameter = ID_ShemaGrNad.HasValue ?
                new ObjectParameter("ID_ShemaGrNad", ID_ShemaGrNad) :
                new ObjectParameter("ID_ShemaGrNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_UPDATE", iD_ShemaGrShemaGrParameter, iD_ShemaGrShemaGrStrukturaParameter, iD_ShemaGrParameter, iD_ShemaGrNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGr> USP_ShemaGrShemaGr_UPDATE(long? ID_ShemaGrShemaGr, long? ID_ShemaGrShemaGrStruktura, long? ID_ShemaGr, long? ID_ShemaGrNad, int? Nivo, string Put, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGr).Assembly);
    
            var iD_ShemaGrShemaGrParameter = ID_ShemaGrShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGr", ID_ShemaGrShemaGr) :
                new ObjectParameter("ID_ShemaGrShemaGr", typeof(long));
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var iD_ShemaGrParameter = ID_ShemaGr.HasValue ?
                new ObjectParameter("ID_ShemaGr", ID_ShemaGr) :
                new ObjectParameter("ID_ShemaGr", typeof(long));
    
            var iD_ShemaGrNadParameter = ID_ShemaGrNad.HasValue ?
                new ObjectParameter("ID_ShemaGrNad", ID_ShemaGrNad) :
                new ObjectParameter("ID_ShemaGrNad", typeof(long));
    
            var nivoParameter = Nivo.HasValue ?
                new ObjectParameter("Nivo", Nivo) :
                new ObjectParameter("Nivo", typeof(int));
    
            var putParameter = Put != null ?
                new ObjectParameter("Put", Put) :
                new ObjectParameter("Put", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGr>("USP_ShemaGrShemaGr_UPDATE", mergeOption, iD_ShemaGrShemaGrParameter, iD_ShemaGrShemaGrStrukturaParameter, iD_ShemaGrParameter, iD_ShemaGrNadParameter, nivoParameter, putParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaGrShemaGrStruktura_DELETE(long? ID_ShemaGrShemaGrStruktura)
        {
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaGrShemaGrStruktura_DELETE", iD_ShemaGrShemaGrStrukturaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_SELECT(long? ID_ShemaGrShemaGrStruktura)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_SELECT", iD_ShemaGrShemaGrStrukturaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_SELECT(long? ID_ShemaGrShemaGrStruktura, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_SELECT", mergeOption, iD_ShemaGrShemaGrStrukturaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_UPDATE(long? ID_ShemaGrShemaGrStruktura, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_UPDATE", iD_ShemaGrShemaGrStrukturaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ShemaGrShemaGrStruktura> USP_ShemaGrShemaGrStruktura_UPDATE(long? ID_ShemaGrShemaGrStruktura, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaGrShemaGrStruktura).Assembly);
    
            var iD_ShemaGrShemaGrStrukturaParameter = ID_ShemaGrShemaGrStruktura.HasValue ?
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", ID_ShemaGrShemaGrStruktura) :
                new ObjectParameter("ID_ShemaGrShemaGrStruktura", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaGrShemaGrStruktura>("USP_ShemaGrShemaGrStruktura_UPDATE", mergeOption, iD_ShemaGrShemaGrStrukturaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaSt_DELETE(long? ID_ShemaSt)
        {
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaSt_DELETE", iD_ShemaStParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_INSERT(long? ID_Shema, long? ID_KontniPlanSt, bool? Potrazuje, bool? Negativno, bool? Sintetika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var potrazujeParameter = Potrazuje.HasValue ?
                new ObjectParameter("Potrazuje", Potrazuje) :
                new ObjectParameter("Potrazuje", typeof(bool));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            var sintetikaParameter = Sintetika.HasValue ?
                new ObjectParameter("Sintetika", Sintetika) :
                new ObjectParameter("Sintetika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_INSERT", iD_ShemaParameter, iD_KontniPlanStParameter, potrazujeParameter, negativnoParameter, sintetikaParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_INSERT(long? ID_Shema, long? ID_KontniPlanSt, bool? Potrazuje, bool? Negativno, bool? Sintetika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var potrazujeParameter = Potrazuje.HasValue ?
                new ObjectParameter("Potrazuje", Potrazuje) :
                new ObjectParameter("Potrazuje", typeof(bool));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            var sintetikaParameter = Sintetika.HasValue ?
                new ObjectParameter("Sintetika", Sintetika) :
                new ObjectParameter("Sintetika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_INSERT", mergeOption, iD_ShemaParameter, iD_KontniPlanStParameter, potrazujeParameter, negativnoParameter, sintetikaParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_SELECT(long? ID_ShemaSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_SELECT", iD_ShemaStParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_SELECT(long? ID_ShemaSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_SELECT", mergeOption, iD_ShemaStParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_UPDATE(long? ID_ShemaSt, long? ID_Shema, long? ID_KontniPlanSt, bool? Potrazuje, bool? Negativno, bool? Sintetika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var potrazujeParameter = Potrazuje.HasValue ?
                new ObjectParameter("Potrazuje", Potrazuje) :
                new ObjectParameter("Potrazuje", typeof(bool));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            var sintetikaParameter = Sintetika.HasValue ?
                new ObjectParameter("Sintetika", Sintetika) :
                new ObjectParameter("Sintetika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_UPDATE", iD_ShemaStParameter, iD_ShemaParameter, iD_KontniPlanStParameter, potrazujeParameter, negativnoParameter, sintetikaParameter);
        }
    
        public virtual ObjectResult<ShemaSt> USP_ShemaSt_UPDATE(long? ID_ShemaSt, long? ID_Shema, long? ID_KontniPlanSt, bool? Potrazuje, bool? Negativno, bool? Sintetika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaSt).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var potrazujeParameter = Potrazuje.HasValue ?
                new ObjectParameter("Potrazuje", Potrazuje) :
                new ObjectParameter("Potrazuje", typeof(bool));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            var sintetikaParameter = Sintetika.HasValue ?
                new ObjectParameter("Sintetika", Sintetika) :
                new ObjectParameter("Sintetika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaSt>("USP_ShemaSt_UPDATE", mergeOption, iD_ShemaStParameter, iD_ShemaParameter, iD_KontniPlanStParameter, potrazujeParameter, negativnoParameter, sintetikaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaStPolje_DELETE(long? ID_ShemaStPolje)
        {
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaStPolje_DELETE", iD_ShemaStPoljeParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_INSERT(long? ID_ShemaSt, string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string AritmetickiOperator, decimal? Operand, bool? Negativno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_INSERT", iD_ShemaStParameter, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, aritmetickiOperatorParameter, operandParameter, negativnoParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_INSERT(long? ID_ShemaSt, string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string AritmetickiOperator, decimal? Operand, bool? Negativno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_INSERT", mergeOption, iD_ShemaStParameter, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, aritmetickiOperatorParameter, operandParameter, negativnoParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_SELECT(long? ID_ShemaStPolje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_SELECT", iD_ShemaStPoljeParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_SELECT(long? ID_ShemaStPolje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_SELECT", mergeOption, iD_ShemaStPoljeParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_UPDATE(long? ID_ShemaStPolje, long? ID_ShemaSt, string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string AritmetickiOperator, decimal? Operand, bool? Negativno)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_UPDATE", iD_ShemaStPoljeParameter, iD_ShemaStParameter, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, aritmetickiOperatorParameter, operandParameter, negativnoParameter);
        }
    
        public virtual ObjectResult<ShemaStPolje> USP_ShemaStPolje_UPDATE(long? ID_ShemaStPolje, long? ID_ShemaSt, string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string AritmetickiOperator, decimal? Operand, bool? Negativno, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPolje).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var iD_ShemaStParameter = ID_ShemaSt.HasValue ?
                new ObjectParameter("ID_ShemaSt", ID_ShemaSt) :
                new ObjectParameter("ID_ShemaSt", typeof(long));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var aritmetickiOperatorParameter = AritmetickiOperator != null ?
                new ObjectParameter("AritmetickiOperator", AritmetickiOperator) :
                new ObjectParameter("AritmetickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negativnoParameter = Negativno.HasValue ?
                new ObjectParameter("Negativno", Negativno) :
                new ObjectParameter("Negativno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPolje>("USP_ShemaStPolje_UPDATE", mergeOption, iD_ShemaStPoljeParameter, iD_ShemaStParameter, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, aritmetickiOperatorParameter, operandParameter, negativnoParameter);
        }
    
        public virtual ObjectResult<int?> USP_ShemaStPoljeUvjet_DELETE(long? ID_ShemaStPoljeUvjet)
        {
            var iD_ShemaStPoljeUvjetParameter = ID_ShemaStPoljeUvjet.HasValue ?
                new ObjectParameter("ID_ShemaStPoljeUvjet", ID_ShemaStPoljeUvjet) :
                new ObjectParameter("ID_ShemaStPoljeUvjet", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ShemaStPoljeUvjet_DELETE", iD_ShemaStPoljeUvjetParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_INSERT(long? ID_ShemaStPolje, string LogickiOperator, decimal? Operand, bool? Negacija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negacijaParameter = Negacija.HasValue ?
                new ObjectParameter("Negacija", Negacija) :
                new ObjectParameter("Negacija", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_INSERT", iD_ShemaStPoljeParameter, logickiOperatorParameter, operandParameter, negacijaParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_INSERT(long? ID_ShemaStPolje, string LogickiOperator, decimal? Operand, bool? Negacija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negacijaParameter = Negacija.HasValue ?
                new ObjectParameter("Negacija", Negacija) :
                new ObjectParameter("Negacija", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_INSERT", mergeOption, iD_ShemaStPoljeParameter, logickiOperatorParameter, operandParameter, negacijaParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_SELECT(long? ID_ShemaStPoljeUvjet)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeUvjetParameter = ID_ShemaStPoljeUvjet.HasValue ?
                new ObjectParameter("ID_ShemaStPoljeUvjet", ID_ShemaStPoljeUvjet) :
                new ObjectParameter("ID_ShemaStPoljeUvjet", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_SELECT", iD_ShemaStPoljeUvjetParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_SELECT(long? ID_ShemaStPoljeUvjet, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeUvjetParameter = ID_ShemaStPoljeUvjet.HasValue ?
                new ObjectParameter("ID_ShemaStPoljeUvjet", ID_ShemaStPoljeUvjet) :
                new ObjectParameter("ID_ShemaStPoljeUvjet", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_SELECT", mergeOption, iD_ShemaStPoljeUvjetParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_UPDATE(long? ID_ShemaStPoljeUvjet, long? ID_ShemaStPolje, string LogickiOperator, decimal? Operand, bool? Negacija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeUvjetParameter = ID_ShemaStPoljeUvjet.HasValue ?
                new ObjectParameter("ID_ShemaStPoljeUvjet", ID_ShemaStPoljeUvjet) :
                new ObjectParameter("ID_ShemaStPoljeUvjet", typeof(long));
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negacijaParameter = Negacija.HasValue ?
                new ObjectParameter("Negacija", Negacija) :
                new ObjectParameter("Negacija", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_UPDATE", iD_ShemaStPoljeUvjetParameter, iD_ShemaStPoljeParameter, logickiOperatorParameter, operandParameter, negacijaParameter);
        }
    
        public virtual ObjectResult<ShemaStPoljeUvjet> USP_ShemaStPoljeUvjet_UPDATE(long? ID_ShemaStPoljeUvjet, long? ID_ShemaStPolje, string LogickiOperator, decimal? Operand, bool? Negacija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ShemaStPoljeUvjet).Assembly);
    
            var iD_ShemaStPoljeUvjetParameter = ID_ShemaStPoljeUvjet.HasValue ?
                new ObjectParameter("ID_ShemaStPoljeUvjet", ID_ShemaStPoljeUvjet) :
                new ObjectParameter("ID_ShemaStPoljeUvjet", typeof(long));
    
            var iD_ShemaStPoljeParameter = ID_ShemaStPolje.HasValue ?
                new ObjectParameter("ID_ShemaStPolje", ID_ShemaStPolje) :
                new ObjectParameter("ID_ShemaStPolje", typeof(long));
    
            var logickiOperatorParameter = LogickiOperator != null ?
                new ObjectParameter("LogickiOperator", LogickiOperator) :
                new ObjectParameter("LogickiOperator", typeof(string));
    
            var operandParameter = Operand.HasValue ?
                new ObjectParameter("Operand", Operand) :
                new ObjectParameter("Operand", typeof(decimal));
    
            var negacijaParameter = Negacija.HasValue ?
                new ObjectParameter("Negacija", Negacija) :
                new ObjectParameter("Negacija", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShemaStPoljeUvjet>("USP_ShemaStPoljeUvjet_UPDATE", mergeOption, iD_ShemaStPoljeUvjetParameter, iD_ShemaStPoljeParameter, logickiOperatorParameter, operandParameter, negacijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Spol_DELETE(string IDSpol)
        {
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Spol_DELETE", iDSpolParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_INSERT(string IDSpol, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_INSERT", iDSpolParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_INSERT(string IDSpol, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_INSERT", mergeOption, iDSpolParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_SELECT(string IDSpol)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_SELECT", iDSpolParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_SELECT(string IDSpol, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_SELECT", mergeOption, iDSpolParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_UPDATE(string IDSpol, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_UPDATE", iDSpolParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Spol> USP_Spol_UPDATE(string IDSpol, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Spol).Assembly);
    
            var iDSpolParameter = IDSpol != null ?
                new ObjectParameter("IDSpol", IDSpol) :
                new ObjectParameter("IDSpol", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spol>("USP_Spol_UPDATE", mergeOption, iDSpolParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Stan_DELETE(long? ID_Stan)
        {
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Stan_DELETE", iD_StanParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Povrsina, decimal? BrojSoba, string Broj, string Ulica, string KucniBroj, string KucniBrojDodatak, string Kat, long? ID_Zgrada, string Opis, string KatastarskaCestica, string KatastarskaCesticaOpcina, long? ID_Adresa, int? BrojUgovor, string PostanskiBroj, string Posta, long? ID_Posta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var povrsinaParameter = Povrsina.HasValue ?
                new ObjectParameter("Povrsina", Povrsina) :
                new ObjectParameter("Povrsina", typeof(decimal));
    
            var brojSobaParameter = BrojSoba.HasValue ?
                new ObjectParameter("BrojSoba", BrojSoba) :
                new ObjectParameter("BrojSoba", typeof(decimal));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var katParameter = Kat != null ?
                new ObjectParameter("Kat", Kat) :
                new ObjectParameter("Kat", typeof(string));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var katastarskaCesticaParameter = KatastarskaCestica != null ?
                new ObjectParameter("KatastarskaCestica", KatastarskaCestica) :
                new ObjectParameter("KatastarskaCestica", typeof(string));
    
            var katastarskaCesticaOpcinaParameter = KatastarskaCesticaOpcina != null ?
                new ObjectParameter("KatastarskaCesticaOpcina", KatastarskaCesticaOpcina) :
                new ObjectParameter("KatastarskaCesticaOpcina", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, povrsinaParameter, brojSobaParameter, brojParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, katParameter, iD_ZgradaParameter, opisParameter, katastarskaCesticaParameter, katastarskaCesticaOpcinaParameter, iD_AdresaParameter, brojUgovorParameter, postanskiBrojParameter, postaParameter, iD_PostaParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Povrsina, decimal? BrojSoba, string Broj, string Ulica, string KucniBroj, string KucniBrojDodatak, string Kat, long? ID_Zgrada, string Opis, string KatastarskaCestica, string KatastarskaCesticaOpcina, long? ID_Adresa, int? BrojUgovor, string PostanskiBroj, string Posta, long? ID_Posta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var povrsinaParameter = Povrsina.HasValue ?
                new ObjectParameter("Povrsina", Povrsina) :
                new ObjectParameter("Povrsina", typeof(decimal));
    
            var brojSobaParameter = BrojSoba.HasValue ?
                new ObjectParameter("BrojSoba", BrojSoba) :
                new ObjectParameter("BrojSoba", typeof(decimal));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var katParameter = Kat != null ?
                new ObjectParameter("Kat", Kat) :
                new ObjectParameter("Kat", typeof(string));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var katastarskaCesticaParameter = KatastarskaCestica != null ?
                new ObjectParameter("KatastarskaCestica", KatastarskaCestica) :
                new ObjectParameter("KatastarskaCestica", typeof(string));
    
            var katastarskaCesticaOpcinaParameter = KatastarskaCesticaOpcina != null ?
                new ObjectParameter("KatastarskaCesticaOpcina", KatastarskaCesticaOpcina) :
                new ObjectParameter("KatastarskaCesticaOpcina", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, povrsinaParameter, brojSobaParameter, brojParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, katParameter, iD_ZgradaParameter, opisParameter, katastarskaCesticaParameter, katastarskaCesticaOpcinaParameter, iD_AdresaParameter, brojUgovorParameter, postanskiBrojParameter, postaParameter, iD_PostaParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_SELECT(long? ID_Stan)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_SELECT", iD_StanParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_SELECT(long? ID_Stan, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_SELECT", mergeOption, iD_StanParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_UPDATE(long? ID_Stan, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Povrsina, decimal? BrojSoba, string Broj, string Ulica, string KucniBroj, string KucniBrojDodatak, string Kat, long? ID_Zgrada, string Opis, string KatastarskaCestica, string KatastarskaCesticaOpcina, long? ID_Adresa, int? BrojUgovor, string PostanskiBroj, string Posta, long? ID_Posta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var povrsinaParameter = Povrsina.HasValue ?
                new ObjectParameter("Povrsina", Povrsina) :
                new ObjectParameter("Povrsina", typeof(decimal));
    
            var brojSobaParameter = BrojSoba.HasValue ?
                new ObjectParameter("BrojSoba", BrojSoba) :
                new ObjectParameter("BrojSoba", typeof(decimal));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var katParameter = Kat != null ?
                new ObjectParameter("Kat", Kat) :
                new ObjectParameter("Kat", typeof(string));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var katastarskaCesticaParameter = KatastarskaCestica != null ?
                new ObjectParameter("KatastarskaCestica", KatastarskaCestica) :
                new ObjectParameter("KatastarskaCestica", typeof(string));
    
            var katastarskaCesticaOpcinaParameter = KatastarskaCesticaOpcina != null ?
                new ObjectParameter("KatastarskaCesticaOpcina", KatastarskaCesticaOpcina) :
                new ObjectParameter("KatastarskaCesticaOpcina", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_UPDATE", iD_StanParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, povrsinaParameter, brojSobaParameter, brojParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, katParameter, iD_ZgradaParameter, opisParameter, katastarskaCesticaParameter, katastarskaCesticaOpcinaParameter, iD_AdresaParameter, brojUgovorParameter, postanskiBrojParameter, postaParameter, iD_PostaParameter);
        }
    
        public virtual ObjectResult<Stan> USP_Stan_UPDATE(long? ID_Stan, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, decimal? Povrsina, decimal? BrojSoba, string Broj, string Ulica, string KucniBroj, string KucniBrojDodatak, string Kat, long? ID_Zgrada, string Opis, string KatastarskaCestica, string KatastarskaCesticaOpcina, long? ID_Adresa, int? BrojUgovor, string PostanskiBroj, string Posta, long? ID_Posta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Stan).Assembly);
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var povrsinaParameter = Povrsina.HasValue ?
                new ObjectParameter("Povrsina", Povrsina) :
                new ObjectParameter("Povrsina", typeof(decimal));
    
            var brojSobaParameter = BrojSoba.HasValue ?
                new ObjectParameter("BrojSoba", BrojSoba) :
                new ObjectParameter("BrojSoba", typeof(decimal));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var ulicaParameter = Ulica != null ?
                new ObjectParameter("Ulica", Ulica) :
                new ObjectParameter("Ulica", typeof(string));
    
            var kucniBrojParameter = KucniBroj != null ?
                new ObjectParameter("KucniBroj", KucniBroj) :
                new ObjectParameter("KucniBroj", typeof(string));
    
            var kucniBrojDodatakParameter = KucniBrojDodatak != null ?
                new ObjectParameter("KucniBrojDodatak", KucniBrojDodatak) :
                new ObjectParameter("KucniBrojDodatak", typeof(string));
    
            var katParameter = Kat != null ?
                new ObjectParameter("Kat", Kat) :
                new ObjectParameter("Kat", typeof(string));
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var katastarskaCesticaParameter = KatastarskaCestica != null ?
                new ObjectParameter("KatastarskaCestica", KatastarskaCestica) :
                new ObjectParameter("KatastarskaCestica", typeof(string));
    
            var katastarskaCesticaOpcinaParameter = KatastarskaCesticaOpcina != null ?
                new ObjectParameter("KatastarskaCesticaOpcina", KatastarskaCesticaOpcina) :
                new ObjectParameter("KatastarskaCesticaOpcina", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var postanskiBrojParameter = PostanskiBroj != null ?
                new ObjectParameter("PostanskiBroj", PostanskiBroj) :
                new ObjectParameter("PostanskiBroj", typeof(string));
    
            var postaParameter = Posta != null ?
                new ObjectParameter("Posta", Posta) :
                new ObjectParameter("Posta", typeof(string));
    
            var iD_PostaParameter = ID_Posta.HasValue ?
                new ObjectParameter("ID_Posta", ID_Posta) :
                new ObjectParameter("ID_Posta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stan>("USP_Stan_UPDATE", mergeOption, iD_StanParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, povrsinaParameter, brojSobaParameter, brojParameter, ulicaParameter, kucniBrojParameter, kucniBrojDodatakParameter, katParameter, iD_ZgradaParameter, opisParameter, katastarskaCesticaParameter, katastarskaCesticaOpcinaParameter, iD_AdresaParameter, brojUgovorParameter, postanskiBrojParameter, postaParameter, iD_PostaParameter);
        }
    
        public virtual ObjectResult<int?> USP_StrucnaSprema_DELETE(long? ID_StrucnaSprema)
        {
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_StrucnaSprema_DELETE", iD_StrucnaSpremaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_SELECT(long? ID_StrucnaSprema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_SELECT", iD_StrucnaSpremaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_SELECT(long? ID_StrucnaSprema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_SELECT", mergeOption, iD_StrucnaSpremaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_UPDATE(long? ID_StrucnaSprema, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_UPDATE", iD_StrucnaSpremaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<StrucnaSprema> USP_StrucnaSprema_UPDATE(long? ID_StrucnaSprema, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(StrucnaSprema).Assembly);
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StrucnaSprema>("USP_StrucnaSprema_UPDATE", mergeOption, iD_StrucnaSpremaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Subjekt_DELETE(long? ID_Subjekt)
        {
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Subjekt_DELETE", iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_INSERT(long? IDSubjekt, int? IDSubjektTablica, string Oznaka, string Naziv, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iDSubjektParameter = IDSubjekt.HasValue ?
                new ObjectParameter("IDSubjekt", IDSubjekt) :
                new ObjectParameter("IDSubjekt", typeof(long));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_INSERT", iDSubjektParameter, iDSubjektTablicaParameter, oznakaParameter, nazivParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_INSERT(long? IDSubjekt, int? IDSubjektTablica, string Oznaka, string Naziv, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iDSubjektParameter = IDSubjekt.HasValue ?
                new ObjectParameter("IDSubjekt", IDSubjekt) :
                new ObjectParameter("IDSubjekt", typeof(long));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_INSERT", mergeOption, iDSubjektParameter, iDSubjektTablicaParameter, oznakaParameter, nazivParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_SELECT(long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_SELECT", iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_SELECT(long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_SELECT", mergeOption, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_UPDATE(long? ID_Subjekt, long? IDSubjekt, int? IDSubjektTablica, string Oznaka, string Naziv, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDSubjektParameter = IDSubjekt.HasValue ?
                new ObjectParameter("IDSubjekt", IDSubjekt) :
                new ObjectParameter("IDSubjekt", typeof(long));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_UPDATE", iD_SubjektParameter, iDSubjektParameter, iDSubjektTablicaParameter, oznakaParameter, nazivParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Subjekt> USP_Subjekt_UPDATE(long? ID_Subjekt, long? IDSubjekt, int? IDSubjektTablica, string Oznaka, string Naziv, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subjekt).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDSubjektParameter = IDSubjekt.HasValue ?
                new ObjectParameter("IDSubjekt", IDSubjekt) :
                new ObjectParameter("IDSubjekt", typeof(long));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subjekt>("USP_Subjekt_UPDATE", mergeOption, iD_SubjektParameter, iDSubjektParameter, iDSubjektTablicaParameter, oznakaParameter, nazivParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektEmail_DELETE(long? ID_SubjektEmail)
        {
            var iD_SubjektEmailParameter = ID_SubjektEmail.HasValue ?
                new ObjectParameter("ID_SubjektEmail", ID_SubjektEmail) :
                new ObjectParameter("ID_SubjektEmail", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektEmail_DELETE", iD_SubjektEmailParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_INSERT(long? ID_Subjekt, string URL, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_INSERT", iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_INSERT(long? ID_Subjekt, string URL, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_INSERT", mergeOption, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_SELECT(long? ID_SubjektEmail)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektEmailParameter = ID_SubjektEmail.HasValue ?
                new ObjectParameter("ID_SubjektEmail", ID_SubjektEmail) :
                new ObjectParameter("ID_SubjektEmail", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_SELECT", iD_SubjektEmailParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_SELECT(long? ID_SubjektEmail, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektEmailParameter = ID_SubjektEmail.HasValue ?
                new ObjectParameter("ID_SubjektEmail", ID_SubjektEmail) :
                new ObjectParameter("ID_SubjektEmail", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_SELECT", mergeOption, iD_SubjektEmailParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_UPDATE(long? ID_SubjektEmail, long? ID_Subjekt, string URL, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektEmailParameter = ID_SubjektEmail.HasValue ?
                new ObjectParameter("ID_SubjektEmail", ID_SubjektEmail) :
                new ObjectParameter("ID_SubjektEmail", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_UPDATE", iD_SubjektEmailParameter, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektEmail> USP_SubjektEmail_UPDATE(long? ID_SubjektEmail, long? ID_Subjekt, string URL, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektEmail).Assembly);
    
            var iD_SubjektEmailParameter = ID_SubjektEmail.HasValue ?
                new ObjectParameter("ID_SubjektEmail", ID_SubjektEmail) :
                new ObjectParameter("ID_SubjektEmail", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektEmail>("USP_SubjektEmail_UPDATE", mergeOption, iD_SubjektEmailParameter, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektFunkcija_DELETE(int? IDSubjektFunkcija)
        {
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektFunkcija_DELETE", iDSubjektFunkcijaParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_INSERT(int? IDSubjektFunkcija, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_INSERT", iDSubjektFunkcijaParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_INSERT(int? IDSubjektFunkcija, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_INSERT", mergeOption, iDSubjektFunkcijaParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_SELECT(int? IDSubjektFunkcija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_SELECT", iDSubjektFunkcijaParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_SELECT(int? IDSubjektFunkcija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_SELECT", mergeOption, iDSubjektFunkcijaParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_UPDATE(int? IDSubjektFunkcija, string Oznaka, string Naziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_UPDATE", iDSubjektFunkcijaParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<SubjektFunkcija> USP_SubjektFunkcija_UPDATE(int? IDSubjektFunkcija, string Oznaka, string Naziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektFunkcija).Assembly);
    
            var iDSubjektFunkcijaParameter = IDSubjektFunkcija.HasValue ?
                new ObjectParameter("IDSubjektFunkcija", IDSubjektFunkcija) :
                new ObjectParameter("IDSubjektFunkcija", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektFunkcija>("USP_SubjektFunkcija_UPDATE", mergeOption, iDSubjektFunkcijaParameter, oznakaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektGr_DELETE(long? ID_SubjektGr)
        {
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektGr_DELETE", iD_SubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_SELECT(long? ID_SubjektGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_SELECT", iD_SubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_SELECT(long? ID_SubjektGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_SELECT", mergeOption, iD_SubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_UPDATE(long? ID_SubjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_UPDATE", iD_SubjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektGr> USP_SubjektGr_UPDATE(long? ID_SubjektGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGr>("USP_SubjektGr_UPDATE", mergeOption, iD_SubjektGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektGrSubjekt_DELETE(long? ID_SubjektGrSubjekt)
        {
            var iD_SubjektGrSubjektParameter = ID_SubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjekt", ID_SubjektGrSubjekt) :
                new ObjectParameter("ID_SubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektGrSubjekt_DELETE", iD_SubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_INSERT(long? ID_SubjektGr, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_INSERT", iD_SubjektGrParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_INSERT(long? ID_SubjektGr, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_INSERT", mergeOption, iD_SubjektGrParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_SELECT(long? ID_SubjektGrSubjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrSubjektParameter = ID_SubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjekt", ID_SubjektGrSubjekt) :
                new ObjectParameter("ID_SubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_SELECT", iD_SubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_SELECT(long? ID_SubjektGrSubjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrSubjektParameter = ID_SubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjekt", ID_SubjektGrSubjekt) :
                new ObjectParameter("ID_SubjektGrSubjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_SELECT", mergeOption, iD_SubjektGrSubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_UPDATE(long? ID_SubjektGrSubjekt, long? ID_SubjektGr, long? ID_Subjekt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrSubjektParameter = ID_SubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjekt", ID_SubjektGrSubjekt) :
                new ObjectParameter("ID_SubjektGrSubjekt", typeof(long));
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_UPDATE", iD_SubjektGrSubjektParameter, iD_SubjektGrParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjekt> USP_SubjektGrSubjekt_UPDATE(long? ID_SubjektGrSubjekt, long? ID_SubjektGr, long? ID_Subjekt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjekt).Assembly);
    
            var iD_SubjektGrSubjektParameter = ID_SubjektGrSubjekt.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjekt", ID_SubjektGrSubjekt) :
                new ObjectParameter("ID_SubjektGrSubjekt", typeof(long));
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjekt>("USP_SubjektGrSubjekt_UPDATE", mergeOption, iD_SubjektGrSubjektParameter, iD_SubjektGrParameter, iD_SubjektParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektGrSubjektGr_DELETE(long? ID_SubjektGrSubjektGr)
        {
            var iD_SubjektGrSubjektGrParameter = ID_SubjektGrSubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjektGr", ID_SubjektGrSubjektGr) :
                new ObjectParameter("ID_SubjektGrSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektGrSubjektGr_DELETE", iD_SubjektGrSubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_INSERT(long? ID_SubjektGr, long? ID_SubjektGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektGrNadParameter = ID_SubjektGrNad.HasValue ?
                new ObjectParameter("ID_SubjektGrNad", ID_SubjektGrNad) :
                new ObjectParameter("ID_SubjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_INSERT", iD_SubjektGrParameter, iD_SubjektGrNadParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_INSERT(long? ID_SubjektGr, long? ID_SubjektGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektGrNadParameter = ID_SubjektGrNad.HasValue ?
                new ObjectParameter("ID_SubjektGrNad", ID_SubjektGrNad) :
                new ObjectParameter("ID_SubjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_INSERT", mergeOption, iD_SubjektGrParameter, iD_SubjektGrNadParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_SELECT(long? ID_SubjektGrSubjektGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrSubjektGrParameter = ID_SubjektGrSubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjektGr", ID_SubjektGrSubjektGr) :
                new ObjectParameter("ID_SubjektGrSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_SELECT", iD_SubjektGrSubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_SELECT(long? ID_SubjektGrSubjektGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrSubjektGrParameter = ID_SubjektGrSubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjektGr", ID_SubjektGrSubjektGr) :
                new ObjectParameter("ID_SubjektGrSubjektGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_SELECT", mergeOption, iD_SubjektGrSubjektGrParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_UPDATE(long? ID_SubjektGrSubjektGr, long? ID_SubjektGr, long? ID_SubjektGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrSubjektGrParameter = ID_SubjektGrSubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjektGr", ID_SubjektGrSubjektGr) :
                new ObjectParameter("ID_SubjektGrSubjektGr", typeof(long));
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektGrNadParameter = ID_SubjektGrNad.HasValue ?
                new ObjectParameter("ID_SubjektGrNad", ID_SubjektGrNad) :
                new ObjectParameter("ID_SubjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_UPDATE", iD_SubjektGrSubjektGrParameter, iD_SubjektGrParameter, iD_SubjektGrNadParameter);
        }
    
        public virtual ObjectResult<SubjektGrSubjektGr> USP_SubjektGrSubjektGr_UPDATE(long? ID_SubjektGrSubjektGr, long? ID_SubjektGr, long? ID_SubjektGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektGrSubjektGr).Assembly);
    
            var iD_SubjektGrSubjektGrParameter = ID_SubjektGrSubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGrSubjektGr", ID_SubjektGrSubjektGr) :
                new ObjectParameter("ID_SubjektGrSubjektGr", typeof(long));
    
            var iD_SubjektGrParameter = ID_SubjektGr.HasValue ?
                new ObjectParameter("ID_SubjektGr", ID_SubjektGr) :
                new ObjectParameter("ID_SubjektGr", typeof(long));
    
            var iD_SubjektGrNadParameter = ID_SubjektGrNad.HasValue ?
                new ObjectParameter("ID_SubjektGrNad", ID_SubjektGrNad) :
                new ObjectParameter("ID_SubjektGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektGrSubjektGr>("USP_SubjektGrSubjektGr_UPDATE", mergeOption, iD_SubjektGrSubjektGrParameter, iD_SubjektGrParameter, iD_SubjektGrNadParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektRacun_DELETE(long? ID_SubjektRacun)
        {
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektRacun_DELETE", iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_INSERT(long? ID_Subjekt, long? ID_Banka, string Broj, string VBDI, string IBAN, bool? Devizni, string Naziv, string Opis, int? RedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var devizniParameter = Devizni.HasValue ?
                new ObjectParameter("Devizni", Devizni) :
                new ObjectParameter("Devizni", typeof(bool));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_INSERT", iD_SubjektParameter, iD_BankaParameter, brojParameter, vBDIParameter, iBANParameter, devizniParameter, nazivParameter, opisParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_INSERT(long? ID_Subjekt, long? ID_Banka, string Broj, string VBDI, string IBAN, bool? Devizni, string Naziv, string Opis, int? RedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var devizniParameter = Devizni.HasValue ?
                new ObjectParameter("Devizni", Devizni) :
                new ObjectParameter("Devizni", typeof(bool));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_INSERT", mergeOption, iD_SubjektParameter, iD_BankaParameter, brojParameter, vBDIParameter, iBANParameter, devizniParameter, nazivParameter, opisParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_SELECT(long? ID_SubjektRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_SELECT", iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_SELECT(long? ID_SubjektRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_SELECT", mergeOption, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_UPDATE(long? ID_SubjektRacun, long? ID_Subjekt, long? ID_Banka, string Broj, string VBDI, string IBAN, bool? Devizni, string Naziv, string Opis, int? RedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var devizniParameter = Devizni.HasValue ?
                new ObjectParameter("Devizni", Devizni) :
                new ObjectParameter("Devizni", typeof(bool));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_UPDATE", iD_SubjektRacunParameter, iD_SubjektParameter, iD_BankaParameter, brojParameter, vBDIParameter, iBANParameter, devizniParameter, nazivParameter, opisParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<SubjektRacun> USP_SubjektRacun_UPDATE(long? ID_SubjektRacun, long? ID_Subjekt, long? ID_Banka, string Broj, string VBDI, string IBAN, bool? Devizni, string Naziv, string Opis, int? RedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektRacun).Assembly);
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var devizniParameter = Devizni.HasValue ?
                new ObjectParameter("Devizni", Devizni) :
                new ObjectParameter("Devizni", typeof(bool));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektRacun>("USP_SubjektRacun_UPDATE", mergeOption, iD_SubjektRacunParameter, iD_SubjektParameter, iD_BankaParameter, brojParameter, vBDIParameter, iBANParameter, devizniParameter, nazivParameter, opisParameter, redniBrojParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektTablica_DELETE(int? IDSubjektTablica)
        {
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektTablica_DELETE", iDSubjektTablicaParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_INSERT(int? IDSubjektTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_INSERT", iDSubjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_INSERT(int? IDSubjektTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_INSERT", mergeOption, iDSubjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_SELECT(int? IDSubjektTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_SELECT", iDSubjektTablicaParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_SELECT(int? IDSubjektTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_SELECT", mergeOption, iDSubjektTablicaParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_UPDATE(int? IDSubjektTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_UPDATE", iDSubjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<SubjektTablica> USP_SubjektTablica_UPDATE(int? IDSubjektTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTablica).Assembly);
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTablica>("USP_SubjektTablica_UPDATE", mergeOption, iDSubjektTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektTelefon_DELETE(long? ID_SubjektTelefon)
        {
            var iD_SubjektTelefonParameter = ID_SubjektTelefon.HasValue ?
                new ObjectParameter("ID_SubjektTelefon", ID_SubjektTelefon) :
                new ObjectParameter("ID_SubjektTelefon", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektTelefon_DELETE", iD_SubjektTelefonParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_INSERT(long? ID_Subjekt, string Broj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_INSERT", iD_SubjektParameter, brojParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_INSERT(long? ID_Subjekt, string Broj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_INSERT", mergeOption, iD_SubjektParameter, brojParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_SELECT(long? ID_SubjektTelefon)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektTelefonParameter = ID_SubjektTelefon.HasValue ?
                new ObjectParameter("ID_SubjektTelefon", ID_SubjektTelefon) :
                new ObjectParameter("ID_SubjektTelefon", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_SELECT", iD_SubjektTelefonParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_SELECT(long? ID_SubjektTelefon, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektTelefonParameter = ID_SubjektTelefon.HasValue ?
                new ObjectParameter("ID_SubjektTelefon", ID_SubjektTelefon) :
                new ObjectParameter("ID_SubjektTelefon", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_SELECT", mergeOption, iD_SubjektTelefonParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_UPDATE(long? ID_SubjektTelefon, long? ID_Subjekt, string Broj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektTelefonParameter = ID_SubjektTelefon.HasValue ?
                new ObjectParameter("ID_SubjektTelefon", ID_SubjektTelefon) :
                new ObjectParameter("ID_SubjektTelefon", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_UPDATE", iD_SubjektTelefonParameter, iD_SubjektParameter, brojParameter);
        }
    
        public virtual ObjectResult<SubjektTelefon> USP_SubjektTelefon_UPDATE(long? ID_SubjektTelefon, long? ID_Subjekt, string Broj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektTelefon).Assembly);
    
            var iD_SubjektTelefonParameter = ID_SubjektTelefon.HasValue ?
                new ObjectParameter("ID_SubjektTelefon", ID_SubjektTelefon) :
                new ObjectParameter("ID_SubjektTelefon", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektTelefon>("USP_SubjektTelefon_UPDATE", mergeOption, iD_SubjektTelefonParameter, iD_SubjektParameter, brojParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektVeza_DELETE(long? ID_SubjektVeza)
        {
            var iD_SubjektVezaParameter = ID_SubjektVeza.HasValue ?
                new ObjectParameter("ID_SubjektVeza", ID_SubjektVeza) :
                new ObjectParameter("ID_SubjektVeza", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektVeza_DELETE", iD_SubjektVezaParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_INSERT(long? ID_Subjekt, long? ID_SubjektNad, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektNadParameter = ID_SubjektNad.HasValue ?
                new ObjectParameter("ID_SubjektNad", ID_SubjektNad) :
                new ObjectParameter("ID_SubjektNad", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_INSERT", iD_SubjektParameter, iD_SubjektNadParameter, datumParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_INSERT(long? ID_Subjekt, long? ID_SubjektNad, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektNadParameter = ID_SubjektNad.HasValue ?
                new ObjectParameter("ID_SubjektNad", ID_SubjektNad) :
                new ObjectParameter("ID_SubjektNad", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_INSERT", mergeOption, iD_SubjektParameter, iD_SubjektNadParameter, datumParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_SELECT(long? ID_SubjektVeza)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektVezaParameter = ID_SubjektVeza.HasValue ?
                new ObjectParameter("ID_SubjektVeza", ID_SubjektVeza) :
                new ObjectParameter("ID_SubjektVeza", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_SELECT", iD_SubjektVezaParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_SELECT(long? ID_SubjektVeza, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektVezaParameter = ID_SubjektVeza.HasValue ?
                new ObjectParameter("ID_SubjektVeza", ID_SubjektVeza) :
                new ObjectParameter("ID_SubjektVeza", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_SELECT", mergeOption, iD_SubjektVezaParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_UPDATE(long? ID_SubjektVeza, long? ID_Subjekt, long? ID_SubjektNad, DateTime? Datum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektVezaParameter = ID_SubjektVeza.HasValue ?
                new ObjectParameter("ID_SubjektVeza", ID_SubjektVeza) :
                new ObjectParameter("ID_SubjektVeza", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektNadParameter = ID_SubjektNad.HasValue ?
                new ObjectParameter("ID_SubjektNad", ID_SubjektNad) :
                new ObjectParameter("ID_SubjektNad", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_UPDATE", iD_SubjektVezaParameter, iD_SubjektParameter, iD_SubjektNadParameter, datumParameter);
        }
    
        public virtual ObjectResult<SubjektVeza> USP_SubjektVeza_UPDATE(long? ID_SubjektVeza, long? ID_Subjekt, long? ID_SubjektNad, DateTime? Datum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVeza).Assembly);
    
            var iD_SubjektVezaParameter = ID_SubjektVeza.HasValue ?
                new ObjectParameter("ID_SubjektVeza", ID_SubjektVeza) :
                new ObjectParameter("ID_SubjektVeza", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektNadParameter = ID_SubjektNad.HasValue ?
                new ObjectParameter("ID_SubjektNad", ID_SubjektNad) :
                new ObjectParameter("ID_SubjektNad", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVeza>("USP_SubjektVeza_UPDATE", mergeOption, iD_SubjektVezaParameter, iD_SubjektParameter, iD_SubjektNadParameter, datumParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektVezaVr_DELETE(long? ID_SubjektVezaVr)
        {
            var iD_SubjektVezaVrParameter = ID_SubjektVezaVr.HasValue ?
                new ObjectParameter("ID_SubjektVezaVr", ID_SubjektVezaVr) :
                new ObjectParameter("ID_SubjektVezaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektVezaVr_DELETE", iD_SubjektVezaVrParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_INSERT", iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_INSERT(long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_INSERT", mergeOption, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_SELECT(long? ID_SubjektVezaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektVezaVrParameter = ID_SubjektVezaVr.HasValue ?
                new ObjectParameter("ID_SubjektVezaVr", ID_SubjektVezaVr) :
                new ObjectParameter("ID_SubjektVezaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_SELECT", iD_SubjektVezaVrParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_SELECT(long? ID_SubjektVezaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektVezaVrParameter = ID_SubjektVezaVr.HasValue ?
                new ObjectParameter("ID_SubjektVezaVr", ID_SubjektVezaVr) :
                new ObjectParameter("ID_SubjektVezaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_SELECT", mergeOption, iD_SubjektVezaVrParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_UPDATE(long? ID_SubjektVezaVr, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektVezaVrParameter = ID_SubjektVezaVr.HasValue ?
                new ObjectParameter("ID_SubjektVezaVr", ID_SubjektVezaVr) :
                new ObjectParameter("ID_SubjektVezaVr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_UPDATE", iD_SubjektVezaVrParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVezaVr> USP_SubjektVezaVr_UPDATE(long? ID_SubjektVezaVr, long? ID_Subjekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVezaVr).Assembly);
    
            var iD_SubjektVezaVrParameter = ID_SubjektVezaVr.HasValue ?
                new ObjectParameter("ID_SubjektVezaVr", ID_SubjektVezaVr) :
                new ObjectParameter("ID_SubjektVezaVr", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVezaVr>("USP_SubjektVezaVr_UPDATE", mergeOption, iD_SubjektVezaVrParameter, iD_SubjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektVr_DELETE(int? IDSubjektVr)
        {
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektVr_DELETE", iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_INSERT(int? IDSubjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_INSERT", iDSubjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_INSERT(int? IDSubjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_INSERT", mergeOption, iDSubjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_SELECT(int? IDSubjektVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_SELECT", iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_SELECT(int? IDSubjektVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_SELECT", mergeOption, iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_UPDATE(int? IDSubjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_UPDATE", iDSubjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<SubjektVr> USP_SubjektVr_UPDATE(int? IDSubjektVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVr).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVr>("USP_SubjektVr_UPDATE", mergeOption, iDSubjektVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektVrTablica_DELETE(int? IDSubjektVr)
        {
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektVrTablica_DELETE", iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_INSERT(int? IDSubjektVr, int? IDSubjektTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_INSERT", iDSubjektVrParameter, iDSubjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_INSERT(int? IDSubjektVr, int? IDSubjektTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_INSERT", mergeOption, iDSubjektVrParameter, iDSubjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_SELECT(int? IDSubjektVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_SELECT", iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_SELECT(int? IDSubjektVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_SELECT", mergeOption, iDSubjektVrParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_UPDATE(int? IDSubjektVr, int? IDSubjektTablica, bool? Odabir)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_UPDATE", iDSubjektVrParameter, iDSubjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<SubjektVrTablica> USP_SubjektVrTablica_UPDATE(int? IDSubjektVr, int? IDSubjektTablica, bool? Odabir, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektVrTablica).Assembly);
    
            var iDSubjektVrParameter = IDSubjektVr.HasValue ?
                new ObjectParameter("IDSubjektVr", IDSubjektVr) :
                new ObjectParameter("IDSubjektVr", typeof(int));
    
            var iDSubjektTablicaParameter = IDSubjektTablica.HasValue ?
                new ObjectParameter("IDSubjektTablica", IDSubjektTablica) :
                new ObjectParameter("IDSubjektTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektVrTablica>("USP_SubjektVrTablica_UPDATE", mergeOption, iDSubjektVrParameter, iDSubjektTablicaParameter, odabirParameter);
        }
    
        public virtual ObjectResult<int?> USP_SubjektWeb_DELETE(long? ID_SubjektWeb)
        {
            var iD_SubjektWebParameter = ID_SubjektWeb.HasValue ?
                new ObjectParameter("ID_SubjektWeb", ID_SubjektWeb) :
                new ObjectParameter("ID_SubjektWeb", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_SubjektWeb_DELETE", iD_SubjektWebParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_INSERT(long? ID_Subjekt, string URL, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_INSERT", iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_INSERT(long? ID_Subjekt, string URL, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_INSERT", mergeOption, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_SELECT(long? ID_SubjektWeb)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektWebParameter = ID_SubjektWeb.HasValue ?
                new ObjectParameter("ID_SubjektWeb", ID_SubjektWeb) :
                new ObjectParameter("ID_SubjektWeb", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_SELECT", iD_SubjektWebParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_SELECT(long? ID_SubjektWeb, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektWebParameter = ID_SubjektWeb.HasValue ?
                new ObjectParameter("ID_SubjektWeb", ID_SubjektWeb) :
                new ObjectParameter("ID_SubjektWeb", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_SELECT", mergeOption, iD_SubjektWebParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_UPDATE(long? ID_SubjektWeb, long? ID_Subjekt, string URL, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektWebParameter = ID_SubjektWeb.HasValue ?
                new ObjectParameter("ID_SubjektWeb", ID_SubjektWeb) :
                new ObjectParameter("ID_SubjektWeb", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_UPDATE", iD_SubjektWebParameter, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<SubjektWeb> USP_SubjektWeb_UPDATE(long? ID_SubjektWeb, long? ID_Subjekt, string URL, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SubjektWeb).Assembly);
    
            var iD_SubjektWebParameter = ID_SubjektWeb.HasValue ?
                new ObjectParameter("ID_SubjektWeb", ID_SubjektWeb) :
                new ObjectParameter("ID_SubjektWeb", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var uRLParameter = URL != null ?
                new ObjectParameter("URL", URL) :
                new ObjectParameter("URL", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjektWeb>("USP_SubjektWeb_UPDATE", mergeOption, iD_SubjektWebParameter, iD_SubjektParameter, uRLParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_Tablica_DELETE(string TablicaShema, string TablicaNaziv)
        {
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Tablica_DELETE", tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_INSERT(string TablicaShema, string TablicaNaziv, string Tip, string Labela, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tipParameter = Tip != null ?
                new ObjectParameter("Tip", Tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_INSERT", tablicaShemaParameter, tablicaNazivParameter, tipParameter, labelaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_INSERT(string TablicaShema, string TablicaNaziv, string Tip, string Labela, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tipParameter = Tip != null ?
                new ObjectParameter("Tip", Tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_INSERT", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tipParameter, labelaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_SELECT(string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_SELECT", tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_SELECT(string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_SELECT", mergeOption, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_UPDATE(string TablicaShema, string TablicaNaziv, string Tip, string Labela, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tipParameter = Tip != null ?
                new ObjectParameter("Tip", Tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_UPDATE", tablicaShemaParameter, tablicaNazivParameter, tipParameter, labelaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<Tablica> USP_Tablica_UPDATE(string TablicaShema, string TablicaNaziv, string Tip, string Labela, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tablica).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tipParameter = Tip != null ?
                new ObjectParameter("Tip", Tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tablica>("USP_Tablica_UPDATE", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tipParameter, labelaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_TablicaPolje_DELETE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv)
        {
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TablicaPolje_DELETE", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_INSERT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_INSERT", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_INSERT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_INSERT", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_SELECT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_SELECT", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_SELECT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_SELECT", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_UPDATE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_UPDATE", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPolje> USP_TablicaPolje_UPDATE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPolje).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPolje>("USP_TablicaPolje_UPDATE", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_TablicaPoljeUI_DELETE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv)
        {
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TablicaPoljeUI_DELETE", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_INSERT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_INSERT", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_INSERT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_INSERT", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_SELECT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_SELECT", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_SELECT(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_SELECT", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_UPDATE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_UPDATE", tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<TablicaPoljeUI> USP_TablicaPoljeUI_UPDATE(string TablicaShema, string TablicaNaziv, string TablicaPoljeNaziv, string Labela, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TablicaPoljeUI).Assembly);
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            var tablicaPoljeNazivParameter = TablicaPoljeNaziv != null ?
                new ObjectParameter("TablicaPoljeNaziv", TablicaPoljeNaziv) :
                new ObjectParameter("TablicaPoljeNaziv", typeof(string));
    
            var labelaParameter = Labela != null ?
                new ObjectParameter("Labela", Labela) :
                new ObjectParameter("Labela", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablicaPoljeUI>("USP_TablicaPoljeUI_UPDATE", mergeOption, tablicaShemaParameter, tablicaNazivParameter, tablicaPoljeNazivParameter, labelaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_Tecaj_DELETE(long? ID_Tecaj)
        {
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Tecaj_DELETE", iD_TecajParameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_INSERT(long? ID_TecajListaSt, long? ID_TecajVr, decimal? Tecaj6)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var tecaj6Parameter = Tecaj6.HasValue ?
                new ObjectParameter("Tecaj6", Tecaj6) :
                new ObjectParameter("Tecaj6", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_INSERT", iD_TecajListaStParameter, iD_TecajVrParameter, tecaj6Parameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_INSERT(long? ID_TecajListaSt, long? ID_TecajVr, decimal? Tecaj6, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var tecaj6Parameter = Tecaj6.HasValue ?
                new ObjectParameter("Tecaj6", Tecaj6) :
                new ObjectParameter("Tecaj6", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_INSERT", mergeOption, iD_TecajListaStParameter, iD_TecajVrParameter, tecaj6Parameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_SELECT(long? ID_Tecaj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_SELECT", iD_TecajParameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_SELECT(long? ID_Tecaj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_SELECT", mergeOption, iD_TecajParameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_UPDATE(long? ID_Tecaj, long? ID_TecajListaSt, long? ID_TecajVr, decimal? Tecaj6)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var tecaj6Parameter = Tecaj6.HasValue ?
                new ObjectParameter("Tecaj6", Tecaj6) :
                new ObjectParameter("Tecaj6", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_UPDATE", iD_TecajParameter, iD_TecajListaStParameter, iD_TecajVrParameter, tecaj6Parameter);
        }
    
        public virtual ObjectResult<Tecaj> USP_Tecaj_UPDATE(long? ID_Tecaj, long? ID_TecajListaSt, long? ID_TecajVr, decimal? Tecaj6, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Tecaj).Assembly);
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var tecaj6Parameter = Tecaj6.HasValue ?
                new ObjectParameter("Tecaj6", Tecaj6) :
                new ObjectParameter("Tecaj6", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tecaj>("USP_Tecaj_UPDATE", mergeOption, iD_TecajParameter, iD_TecajListaStParameter, iD_TecajVrParameter, tecaj6Parameter);
        }
    
        public virtual ObjectResult<int?> USP_TecajLista_DELETE(long? ID_TecajLista)
        {
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TecajLista_DELETE", iD_TecajListaParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_INSERT(long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_INSERT", iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_INSERT(long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_INSERT", mergeOption, iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_SELECT(long? ID_TecajLista)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_SELECT", iD_TecajListaParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_SELECT(long? ID_TecajLista, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_SELECT", mergeOption, iD_TecajListaParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_UPDATE(long? ID_TecajLista, long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_UPDATE", iD_TecajListaParameter, iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter);
        }
    
        public virtual ObjectResult<TecajLista> USP_TecajLista_UPDATE(long? ID_TecajLista, long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("USP_TecajLista_UPDATE", mergeOption, iD_TecajListaParameter, iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter);
        }
    
        public virtual ObjectResult<int?> USP_TecajListaSt_DELETE(long? ID_TecajListaSt)
        {
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TecajListaSt_DELETE", iD_TecajListaStParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_INSERT(long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_INSERT", iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_INSERT(long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_INSERT", mergeOption, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_SELECT(long? ID_TecajListaSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_SELECT", iD_TecajListaStParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_SELECT(long? ID_TecajListaSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_SELECT", mergeOption, iD_TecajListaStParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_UPDATE(long? ID_TecajListaSt, long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_UPDATE", iD_TecajListaStParameter, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> USP_TecajListaSt_UPDATE(long? ID_TecajListaSt, long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("USP_TecajListaSt_UPDATE", mergeOption, iD_TecajListaStParameter, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter);
        }
    
        public virtual ObjectResult<int?> USP_TecajVr_DELETE(long? ID_TecajVr)
        {
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TecajVr_DELETE", iD_TecajVrParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_SELECT(long? ID_TecajVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_SELECT", iD_TecajVrParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_SELECT(long? ID_TecajVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_SELECT", mergeOption, iD_TecajVrParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_UPDATE(long? ID_TecajVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_UPDATE", iD_TecajVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TecajVr> USP_TecajVr_UPDATE(long? ID_TecajVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajVr).Assembly);
    
            var iD_TecajVrParameter = ID_TecajVr.HasValue ?
                new ObjectParameter("ID_TecajVr", ID_TecajVr) :
                new ObjectParameter("ID_TecajVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajVr>("USP_TecajVr_UPDATE", mergeOption, iD_TecajVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Temeljnica_DELETE(long? ID_Temeljnica)
        {
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Temeljnica_DELETE", iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_INSERT(long? ID_TemeljnicaVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? Datum, string IDValuta, DateTime? DatumKnjizenje, decimal? Tecaj, bool? Knjizeno, bool? Storno, bool? PocetnoStanje, bool? ZavrsnoKnjizenje, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumKnjizenjeParameter = DatumKnjizenje.HasValue ?
                new ObjectParameter("DatumKnjizenje", DatumKnjizenje) :
                new ObjectParameter("DatumKnjizenje", typeof(System.DateTime));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var knjizenoParameter = Knjizeno.HasValue ?
                new ObjectParameter("Knjizeno", Knjizeno) :
                new ObjectParameter("Knjizeno", typeof(bool));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var pocetnoStanjeParameter = PocetnoStanje.HasValue ?
                new ObjectParameter("PocetnoStanje", PocetnoStanje) :
                new ObjectParameter("PocetnoStanje", typeof(bool));
    
            var zavrsnoKnjizenjeParameter = ZavrsnoKnjizenje.HasValue ?
                new ObjectParameter("ZavrsnoKnjizenje", ZavrsnoKnjizenje) :
                new ObjectParameter("ZavrsnoKnjizenje", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_INSERT", iD_TemeljnicaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumParameter, iDValutaParameter, datumKnjizenjeParameter, tecajParameter, knjizenoParameter, stornoParameter, pocetnoStanjeParameter, zavrsnoKnjizenjeParameter, opisParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_INSERT(long? ID_TemeljnicaVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? Datum, string IDValuta, DateTime? DatumKnjizenje, decimal? Tecaj, bool? Knjizeno, bool? Storno, bool? PocetnoStanje, bool? ZavrsnoKnjizenje, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumKnjizenjeParameter = DatumKnjizenje.HasValue ?
                new ObjectParameter("DatumKnjizenje", DatumKnjizenje) :
                new ObjectParameter("DatumKnjizenje", typeof(System.DateTime));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var knjizenoParameter = Knjizeno.HasValue ?
                new ObjectParameter("Knjizeno", Knjizeno) :
                new ObjectParameter("Knjizeno", typeof(bool));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var pocetnoStanjeParameter = PocetnoStanje.HasValue ?
                new ObjectParameter("PocetnoStanje", PocetnoStanje) :
                new ObjectParameter("PocetnoStanje", typeof(bool));
    
            var zavrsnoKnjizenjeParameter = ZavrsnoKnjizenje.HasValue ?
                new ObjectParameter("ZavrsnoKnjizenje", ZavrsnoKnjizenje) :
                new ObjectParameter("ZavrsnoKnjizenje", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_INSERT", mergeOption, iD_TemeljnicaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumParameter, iDValutaParameter, datumKnjizenjeParameter, tecajParameter, knjizenoParameter, stornoParameter, pocetnoStanjeParameter, zavrsnoKnjizenjeParameter, opisParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_SELECT(long? ID_Temeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_SELECT", iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_SELECT(long? ID_Temeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_SELECT", mergeOption, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_UPDATE(long? ID_Temeljnica, long? ID_TemeljnicaVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? Datum, string IDValuta, DateTime? DatumKnjizenje, decimal? Tecaj, bool? Knjizeno, bool? Storno, bool? PocetnoStanje, bool? ZavrsnoKnjizenje, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumKnjizenjeParameter = DatumKnjizenje.HasValue ?
                new ObjectParameter("DatumKnjizenje", DatumKnjizenje) :
                new ObjectParameter("DatumKnjizenje", typeof(System.DateTime));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var knjizenoParameter = Knjizeno.HasValue ?
                new ObjectParameter("Knjizeno", Knjizeno) :
                new ObjectParameter("Knjizeno", typeof(bool));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var pocetnoStanjeParameter = PocetnoStanje.HasValue ?
                new ObjectParameter("PocetnoStanje", PocetnoStanje) :
                new ObjectParameter("PocetnoStanje", typeof(bool));
    
            var zavrsnoKnjizenjeParameter = ZavrsnoKnjizenje.HasValue ?
                new ObjectParameter("ZavrsnoKnjizenje", ZavrsnoKnjizenje) :
                new ObjectParameter("ZavrsnoKnjizenje", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_UPDATE", iD_TemeljnicaParameter, iD_TemeljnicaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumParameter, iDValutaParameter, datumKnjizenjeParameter, tecajParameter, knjizenoParameter, stornoParameter, pocetnoStanjeParameter, zavrsnoKnjizenjeParameter, opisParameter);
        }
    
        public virtual ObjectResult<Temeljnica> USP_Temeljnica_UPDATE(long? ID_Temeljnica, long? ID_TemeljnicaVr, string Oznaka, string Naziv, string NazivKr, string Kratica, DateTime? Datum, string IDValuta, DateTime? DatumKnjizenje, decimal? Tecaj, bool? Knjizeno, bool? Storno, bool? PocetnoStanje, bool? ZavrsnoKnjizenje, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Temeljnica).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumKnjizenjeParameter = DatumKnjizenje.HasValue ?
                new ObjectParameter("DatumKnjizenje", DatumKnjizenje) :
                new ObjectParameter("DatumKnjizenje", typeof(System.DateTime));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var knjizenoParameter = Knjizeno.HasValue ?
                new ObjectParameter("Knjizeno", Knjizeno) :
                new ObjectParameter("Knjizeno", typeof(bool));
    
            var stornoParameter = Storno.HasValue ?
                new ObjectParameter("Storno", Storno) :
                new ObjectParameter("Storno", typeof(bool));
    
            var pocetnoStanjeParameter = PocetnoStanje.HasValue ?
                new ObjectParameter("PocetnoStanje", PocetnoStanje) :
                new ObjectParameter("PocetnoStanje", typeof(bool));
    
            var zavrsnoKnjizenjeParameter = ZavrsnoKnjizenje.HasValue ?
                new ObjectParameter("ZavrsnoKnjizenje", ZavrsnoKnjizenje) :
                new ObjectParameter("ZavrsnoKnjizenje", typeof(bool));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temeljnica>("USP_Temeljnica_UPDATE", mergeOption, iD_TemeljnicaParameter, iD_TemeljnicaVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, datumParameter, iDValutaParameter, datumKnjizenjeParameter, tecajParameter, knjizenoParameter, stornoParameter, pocetnoStanjeParameter, zavrsnoKnjizenjeParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_TemeljnicaStKriterij_DELETE(long? ID_TemeljnicaStKriterij)
        {
            var iD_TemeljnicaStKriterijParameter = ID_TemeljnicaStKriterij.HasValue ?
                new ObjectParameter("ID_TemeljnicaStKriterij", ID_TemeljnicaStKriterij) :
                new ObjectParameter("ID_TemeljnicaStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TemeljnicaStKriterij_DELETE", iD_TemeljnicaStKriterijParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_INSERT(long? ID_TemeljnicaSt, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_INSERT", iD_TemeljnicaStParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_INSERT(long? ID_TemeljnicaSt, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_INSERT", mergeOption, iD_TemeljnicaStParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_SELECT(long? ID_TemeljnicaStKriterij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStKriterijParameter = ID_TemeljnicaStKriterij.HasValue ?
                new ObjectParameter("ID_TemeljnicaStKriterij", ID_TemeljnicaStKriterij) :
                new ObjectParameter("ID_TemeljnicaStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_SELECT", iD_TemeljnicaStKriterijParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_SELECT(long? ID_TemeljnicaStKriterij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStKriterijParameter = ID_TemeljnicaStKriterij.HasValue ?
                new ObjectParameter("ID_TemeljnicaStKriterij", ID_TemeljnicaStKriterij) :
                new ObjectParameter("ID_TemeljnicaStKriterij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_SELECT", mergeOption, iD_TemeljnicaStKriterijParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_UPDATE(long? ID_TemeljnicaStKriterij, long? ID_TemeljnicaSt, long? ID_Kriterij, long? ID_KriterijSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStKriterijParameter = ID_TemeljnicaStKriterij.HasValue ?
                new ObjectParameter("ID_TemeljnicaStKriterij", ID_TemeljnicaStKriterij) :
                new ObjectParameter("ID_TemeljnicaStKriterij", typeof(long));
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_UPDATE", iD_TemeljnicaStKriterijParameter, iD_TemeljnicaStParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaStKriterij> USP_TemeljnicaStKriterij_UPDATE(long? ID_TemeljnicaStKriterij, long? ID_TemeljnicaSt, long? ID_Kriterij, long? ID_KriterijSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaStKriterij).Assembly);
    
            var iD_TemeljnicaStKriterijParameter = ID_TemeljnicaStKriterij.HasValue ?
                new ObjectParameter("ID_TemeljnicaStKriterij", ID_TemeljnicaStKriterij) :
                new ObjectParameter("ID_TemeljnicaStKriterij", typeof(long));
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_KriterijParameter = ID_Kriterij.HasValue ?
                new ObjectParameter("ID_Kriterij", ID_Kriterij) :
                new ObjectParameter("ID_Kriterij", typeof(long));
    
            var iD_KriterijStParameter = ID_KriterijSt.HasValue ?
                new ObjectParameter("ID_KriterijSt", ID_KriterijSt) :
                new ObjectParameter("ID_KriterijSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaStKriterij>("USP_TemeljnicaStKriterij_UPDATE", mergeOption, iD_TemeljnicaStKriterijParameter, iD_TemeljnicaStParameter, iD_KriterijParameter, iD_KriterijStParameter);
        }
    
        public virtual ObjectResult<int?> USP_TemeljnicaVr_DELETE(long? ID_TemeljnicaVr)
        {
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TemeljnicaVr_DELETE", iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_INSERT(long? ID_GlavnaKnjiga, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDValuta, decimal? Tecaj, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_INSERT", iD_GlavnaKnjigaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDValutaParameter, tecajParameter, opisParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_INSERT(long? ID_GlavnaKnjiga, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDValuta, decimal? Tecaj, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_INSERT", mergeOption, iD_GlavnaKnjigaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDValutaParameter, tecajParameter, opisParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_SELECT(long? ID_TemeljnicaVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_SELECT", iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_SELECT(long? ID_TemeljnicaVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_SELECT", mergeOption, iD_TemeljnicaVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_UPDATE(long? ID_TemeljnicaVr, long? ID_GlavnaKnjiga, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDValuta, decimal? Tecaj, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_UPDATE", iD_TemeljnicaVrParameter, iD_GlavnaKnjigaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDValutaParameter, tecajParameter, opisParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVr> USP_TemeljnicaVr_UPDATE(long? ID_TemeljnicaVr, long? ID_GlavnaKnjiga, string Oznaka, string Naziv, string NazivKr, string Kratica, string IDValuta, decimal? Tecaj, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVr).Assembly);
    
            var iD_TemeljnicaVrParameter = ID_TemeljnicaVr.HasValue ?
                new ObjectParameter("ID_TemeljnicaVr", ID_TemeljnicaVr) :
                new ObjectParameter("ID_TemeljnicaVr", typeof(long));
    
            var iD_GlavnaKnjigaParameter = ID_GlavnaKnjiga.HasValue ?
                new ObjectParameter("ID_GlavnaKnjiga", ID_GlavnaKnjiga) :
                new ObjectParameter("ID_GlavnaKnjiga", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVr>("USP_TemeljnicaVr_UPDATE", mergeOption, iD_TemeljnicaVrParameter, iD_GlavnaKnjigaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iDValutaParameter, tecajParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_TemeljnicaVrVr_DELETE(int? IDTemeljnicaVrVr)
        {
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TemeljnicaVrVr_DELETE", iDTemeljnicaVrVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_INSERT(int? IDTemeljnicaVrVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_INSERT", iDTemeljnicaVrVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_INSERT(int? IDTemeljnicaVrVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_INSERT", mergeOption, iDTemeljnicaVrVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_SELECT(int? IDTemeljnicaVrVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_SELECT", iDTemeljnicaVrVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_SELECT(int? IDTemeljnicaVrVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_SELECT", mergeOption, iDTemeljnicaVrVrParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_UPDATE(int? IDTemeljnicaVrVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_UPDATE", iDTemeljnicaVrVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaVrVr> USP_TemeljnicaVrVr_UPDATE(int? IDTemeljnicaVrVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaVrVr).Assembly);
    
            var iDTemeljnicaVrVrParameter = IDTemeljnicaVrVr.HasValue ?
                new ObjectParameter("IDTemeljnicaVrVr", IDTemeljnicaVrVr) :
                new ObjectParameter("IDTemeljnicaVrVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaVrVr>("USP_TemeljnicaVrVr_UPDATE", mergeOption, iDTemeljnicaVrVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_TransakcijskiRacun_DELETE(long? ID_TransakcijskiRacun)
        {
            var iD_TransakcijskiRacunParameter = ID_TransakcijskiRacun.HasValue ?
                new ObjectParameter("ID_TransakcijskiRacun", ID_TransakcijskiRacun) :
                new ObjectParameter("ID_TransakcijskiRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TransakcijskiRacun_DELETE", iD_TransakcijskiRacunParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_INSERT(long? ID_Banka, long? ID_Subjekt, string IDValuta, DateTime? DatumOtvaranje, string VBDI, string Broj, string IBAN)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOtvaranjeParameter = DatumOtvaranje.HasValue ?
                new ObjectParameter("DatumOtvaranje", DatumOtvaranje) :
                new ObjectParameter("DatumOtvaranje", typeof(System.DateTime));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_INSERT", iD_BankaParameter, iD_SubjektParameter, iDValutaParameter, datumOtvaranjeParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_INSERT(long? ID_Banka, long? ID_Subjekt, string IDValuta, DateTime? DatumOtvaranje, string VBDI, string Broj, string IBAN, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOtvaranjeParameter = DatumOtvaranje.HasValue ?
                new ObjectParameter("DatumOtvaranje", DatumOtvaranje) :
                new ObjectParameter("DatumOtvaranje", typeof(System.DateTime));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_INSERT", mergeOption, iD_BankaParameter, iD_SubjektParameter, iDValutaParameter, datumOtvaranjeParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_SELECT(long? ID_TransakcijskiRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_TransakcijskiRacunParameter = ID_TransakcijskiRacun.HasValue ?
                new ObjectParameter("ID_TransakcijskiRacun", ID_TransakcijskiRacun) :
                new ObjectParameter("ID_TransakcijskiRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_SELECT", iD_TransakcijskiRacunParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_SELECT(long? ID_TransakcijskiRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_TransakcijskiRacunParameter = ID_TransakcijskiRacun.HasValue ?
                new ObjectParameter("ID_TransakcijskiRacun", ID_TransakcijskiRacun) :
                new ObjectParameter("ID_TransakcijskiRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_SELECT", mergeOption, iD_TransakcijskiRacunParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_UPDATE(long? ID_TransakcijskiRacun, long? ID_Banka, long? ID_Subjekt, string IDValuta, DateTime? DatumOtvaranje, string VBDI, string Broj, string IBAN)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_TransakcijskiRacunParameter = ID_TransakcijskiRacun.HasValue ?
                new ObjectParameter("ID_TransakcijskiRacun", ID_TransakcijskiRacun) :
                new ObjectParameter("ID_TransakcijskiRacun", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOtvaranjeParameter = DatumOtvaranje.HasValue ?
                new ObjectParameter("DatumOtvaranje", DatumOtvaranje) :
                new ObjectParameter("DatumOtvaranje", typeof(System.DateTime));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_UPDATE", iD_TransakcijskiRacunParameter, iD_BankaParameter, iD_SubjektParameter, iDValutaParameter, datumOtvaranjeParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<TransakcijskiRacun> USP_TransakcijskiRacun_UPDATE(long? ID_TransakcijskiRacun, long? ID_Banka, long? ID_Subjekt, string IDValuta, DateTime? DatumOtvaranje, string VBDI, string Broj, string IBAN, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TransakcijskiRacun).Assembly);
    
            var iD_TransakcijskiRacunParameter = ID_TransakcijskiRacun.HasValue ?
                new ObjectParameter("ID_TransakcijskiRacun", ID_TransakcijskiRacun) :
                new ObjectParameter("ID_TransakcijskiRacun", typeof(long));
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumOtvaranjeParameter = DatumOtvaranje.HasValue ?
                new ObjectParameter("DatumOtvaranje", DatumOtvaranje) :
                new ObjectParameter("DatumOtvaranje", typeof(System.DateTime));
    
            var vBDIParameter = VBDI != null ?
                new ObjectParameter("VBDI", VBDI) :
                new ObjectParameter("VBDI", typeof(string));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var iBANParameter = IBAN != null ?
                new ObjectParameter("IBAN", IBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransakcijskiRacun>("USP_TransakcijskiRacun_UPDATE", mergeOption, iD_TransakcijskiRacunParameter, iD_BankaParameter, iD_SubjektParameter, iDValutaParameter, datumOtvaranjeParameter, vBDIParameter, brojParameter, iBANParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupKupac_DELETE(long? ID_UgovorStanOtkupKupac)
        {
            var iD_UgovorStanOtkupKupacParameter = ID_UgovorStanOtkupKupac.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupKupac", ID_UgovorStanOtkupKupac) :
                new ObjectParameter("ID_UgovorStanOtkupKupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupKupac_DELETE", iD_UgovorStanOtkupKupacParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_INSERT(long? ID_UgovorStanOtkup, long? ID_Kupac, bool? Nositelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nositeljParameter = Nositelj.HasValue ?
                new ObjectParameter("Nositelj", Nositelj) :
                new ObjectParameter("Nositelj", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_INSERT", iD_UgovorStanOtkupParameter, iD_KupacParameter, nositeljParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_INSERT(long? ID_UgovorStanOtkup, long? ID_Kupac, bool? Nositelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nositeljParameter = Nositelj.HasValue ?
                new ObjectParameter("Nositelj", Nositelj) :
                new ObjectParameter("Nositelj", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_INSERT", mergeOption, iD_UgovorStanOtkupParameter, iD_KupacParameter, nositeljParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_SELECT(long? ID_UgovorStanOtkupKupac)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupKupacParameter = ID_UgovorStanOtkupKupac.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupKupac", ID_UgovorStanOtkupKupac) :
                new ObjectParameter("ID_UgovorStanOtkupKupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_SELECT", iD_UgovorStanOtkupKupacParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_SELECT(long? ID_UgovorStanOtkupKupac, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupKupacParameter = ID_UgovorStanOtkupKupac.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupKupac", ID_UgovorStanOtkupKupac) :
                new ObjectParameter("ID_UgovorStanOtkupKupac", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_SELECT", mergeOption, iD_UgovorStanOtkupKupacParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_UPDATE(long? ID_UgovorStanOtkupKupac, long? ID_UgovorStanOtkup, long? ID_Kupac, bool? Nositelj)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupKupacParameter = ID_UgovorStanOtkupKupac.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupKupac", ID_UgovorStanOtkupKupac) :
                new ObjectParameter("ID_UgovorStanOtkupKupac", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nositeljParameter = Nositelj.HasValue ?
                new ObjectParameter("Nositelj", Nositelj) :
                new ObjectParameter("Nositelj", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_UPDATE", iD_UgovorStanOtkupKupacParameter, iD_UgovorStanOtkupParameter, iD_KupacParameter, nositeljParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupKupac> USP_UgovorStanOtkupKupac_UPDATE(long? ID_UgovorStanOtkupKupac, long? ID_UgovorStanOtkup, long? ID_Kupac, bool? Nositelj, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupKupac).Assembly);
    
            var iD_UgovorStanOtkupKupacParameter = ID_UgovorStanOtkupKupac.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupKupac", ID_UgovorStanOtkupKupac) :
                new ObjectParameter("ID_UgovorStanOtkupKupac", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_KupacParameter = ID_Kupac.HasValue ?
                new ObjectParameter("ID_Kupac", ID_Kupac) :
                new ObjectParameter("ID_Kupac", typeof(long));
    
            var nositeljParameter = Nositelj.HasValue ?
                new ObjectParameter("Nositelj", Nositelj) :
                new ObjectParameter("Nositelj", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupKupac>("USP_UgovorStanOtkupKupac_UPDATE", mergeOption, iD_UgovorStanOtkupKupacParameter, iD_UgovorStanOtkupParameter, iD_KupacParameter, nositeljParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupMoratorij_DELETE(long? ID_UgovorStanOtkupMoratorij)
        {
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupMoratorij_DELETE", iD_UgovorStanOtkupMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_INSERT(long? ID_UgovorStanOtkup, DateTime? Datum, int? BrojMoratorij, int? BrojUgovor, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_INSERT", iD_UgovorStanOtkupParameter, datumParameter, brojMoratorijParameter, brojUgovorParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_INSERT(long? ID_UgovorStanOtkup, DateTime? Datum, int? BrojMoratorij, int? BrojUgovor, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_INSERT", mergeOption, iD_UgovorStanOtkupParameter, datumParameter, brojMoratorijParameter, brojUgovorParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_SELECT(long? ID_UgovorStanOtkupMoratorij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_SELECT", iD_UgovorStanOtkupMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_SELECT(long? ID_UgovorStanOtkupMoratorij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_SELECT", mergeOption, iD_UgovorStanOtkupMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_UPDATE(long? ID_UgovorStanOtkupMoratorij, long? ID_UgovorStanOtkup, DateTime? Datum, int? BrojMoratorij, int? BrojUgovor, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_UPDATE", iD_UgovorStanOtkupMoratorijParameter, iD_UgovorStanOtkupParameter, datumParameter, brojMoratorijParameter, brojUgovorParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorij> USP_UgovorStanOtkupMoratorij_UPDATE(long? ID_UgovorStanOtkupMoratorij, long? ID_UgovorStanOtkup, DateTime? Datum, int? BrojMoratorij, int? BrojUgovor, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorij).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorij>("USP_UgovorStanOtkupMoratorij_UPDATE", mergeOption, iD_UgovorStanOtkupMoratorijParameter, iD_UgovorStanOtkupParameter, datumParameter, brojMoratorijParameter, brojUgovorParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupMoratorijMjesec_DELETE(long? ID_UgovorStanOtkupMoratorijMjesec)
        {
            var iD_UgovorStanOtkupMoratorijMjesecParameter = ID_UgovorStanOtkupMoratorijMjesec.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", ID_UgovorStanOtkupMoratorijMjesec) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupMoratorijMjesec_DELETE", iD_UgovorStanOtkupMoratorijMjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_INSERT(long? ID_UgovorStanOtkupMoratorij, int? Godina, int? Mjesec, int? BrojUgovor, int? BrojMoratorij, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_INSERT", iD_UgovorStanOtkupMoratorijParameter, godinaParameter, mjesecParameter, brojUgovorParameter, brojMoratorijParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_INSERT(long? ID_UgovorStanOtkupMoratorij, int? Godina, int? Mjesec, int? BrojUgovor, int? BrojMoratorij, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_INSERT", mergeOption, iD_UgovorStanOtkupMoratorijParameter, godinaParameter, mjesecParameter, brojUgovorParameter, brojMoratorijParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_SELECT(long? ID_UgovorStanOtkupMoratorijMjesec)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijMjesecParameter = ID_UgovorStanOtkupMoratorijMjesec.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", ID_UgovorStanOtkupMoratorijMjesec) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_SELECT", iD_UgovorStanOtkupMoratorijMjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_SELECT(long? ID_UgovorStanOtkupMoratorijMjesec, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijMjesecParameter = ID_UgovorStanOtkupMoratorijMjesec.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", ID_UgovorStanOtkupMoratorijMjesec) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_SELECT", mergeOption, iD_UgovorStanOtkupMoratorijMjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_UPDATE(long? ID_UgovorStanOtkupMoratorijMjesec, long? ID_UgovorStanOtkupMoratorij, int? Godina, int? Mjesec, int? BrojUgovor, int? BrojMoratorij, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijMjesecParameter = ID_UgovorStanOtkupMoratorijMjesec.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", ID_UgovorStanOtkupMoratorijMjesec) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_UPDATE", iD_UgovorStanOtkupMoratorijMjesecParameter, iD_UgovorStanOtkupMoratorijParameter, godinaParameter, mjesecParameter, brojUgovorParameter, brojMoratorijParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupMoratorijMjesec> USP_UgovorStanOtkupMoratorijMjesec_UPDATE(long? ID_UgovorStanOtkupMoratorijMjesec, long? ID_UgovorStanOtkupMoratorij, int? Godina, int? Mjesec, int? BrojUgovor, int? BrojMoratorij, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupMoratorijMjesec).Assembly);
    
            var iD_UgovorStanOtkupMoratorijMjesecParameter = ID_UgovorStanOtkupMoratorijMjesec.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", ID_UgovorStanOtkupMoratorijMjesec) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorijMjesec", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupMoratorijMjesec>("USP_UgovorStanOtkupMoratorijMjesec_UPDATE", mergeOption, iD_UgovorStanOtkupMoratorijMjesecParameter, iD_UgovorStanOtkupMoratorijParameter, godinaParameter, mjesecParameter, brojUgovorParameter, brojMoratorijParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupObrok_DELETE(long? ID_UgovorStanOtkupObrok)
        {
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupObrok_DELETE", iD_UgovorStanOtkupObrokParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_INSERT(long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupMoratorij, long? ID_Temeljnica, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, int? Godina, int? Mjesec, int? GodinaGeneriranja, int? MjesecGeneriranja, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPopust, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosKreditOstatakRevalorizacija, decimal? IznosKamataOstatakRevalorizacija, decimal? IznosMoratorij, string IDValuta, decimal? IznosValuta, DateTime? DatumDospijece, decimal? TecajObrok, decimal? TecajUgovor, bool? Placen, bool? IzPreplate, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_UgovorStanOtkupAneks, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? IznosZateznaKamata, decimal? IznosObveza, decimal? IznosPlaceno, int? BrojMoratorij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var godinaGeneriranjaParameter = GodinaGeneriranja.HasValue ?
                new ObjectParameter("GodinaGeneriranja", GodinaGeneriranja) :
                new ObjectParameter("GodinaGeneriranja", typeof(int));
    
            var mjesecGeneriranjaParameter = MjesecGeneriranja.HasValue ?
                new ObjectParameter("MjesecGeneriranja", MjesecGeneriranja) :
                new ObjectParameter("MjesecGeneriranja", typeof(int));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPopustParameter = IznosPopust.HasValue ?
                new ObjectParameter("IznosPopust", IznosPopust) :
                new ObjectParameter("IznosPopust", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditOstatakRevalorizacijaParameter = IznosKreditOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditOstatakRevalorizacija", IznosKreditOstatakRevalorizacija) :
                new ObjectParameter("IznosKreditOstatakRevalorizacija", typeof(decimal));
    
            var iznosKamataOstatakRevalorizacijaParameter = IznosKamataOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataOstatakRevalorizacija", IznosKamataOstatakRevalorizacija) :
                new ObjectParameter("IznosKamataOstatakRevalorizacija", typeof(decimal));
    
            var iznosMoratorijParameter = IznosMoratorij.HasValue ?
                new ObjectParameter("IznosMoratorij", IznosMoratorij) :
                new ObjectParameter("IznosMoratorij", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var tecajObrokParameter = TecajObrok.HasValue ?
                new ObjectParameter("TecajObrok", TecajObrok) :
                new ObjectParameter("TecajObrok", typeof(decimal));
    
            var tecajUgovorParameter = TecajUgovor.HasValue ?
                new ObjectParameter("TecajUgovor", TecajUgovor) :
                new ObjectParameter("TecajUgovor", typeof(decimal));
    
            var placenParameter = Placen.HasValue ?
                new ObjectParameter("Placen", Placen) :
                new ObjectParameter("Placen", typeof(bool));
    
            var izPreplateParameter = IzPreplate.HasValue ?
                new ObjectParameter("IzPreplate", IzPreplate) :
                new ObjectParameter("IzPreplate", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosObvezaParameter = IznosObveza.HasValue ?
                new ObjectParameter("IznosObveza", IznosObveza) :
                new ObjectParameter("IznosObveza", typeof(decimal));
    
            var iznosPlacenoParameter = IznosPlaceno.HasValue ?
                new ObjectParameter("IznosPlaceno", IznosPlaceno) :
                new ObjectParameter("IznosPlaceno", typeof(decimal));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_INSERT", iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupMoratorijParameter, iD_TemeljnicaParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, godinaParameter, mjesecParameter, godinaGeneriranjaParameter, mjesecGeneriranjaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPopustParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosKreditOstatakRevalorizacijaParameter, iznosKamataOstatakRevalorizacijaParameter, iznosMoratorijParameter, iDValutaParameter, iznosValutaParameter, datumDospijeceParameter, tecajObrokParameter, tecajUgovorParameter, placenParameter, izPreplateParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_UgovorStanOtkupAneksParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, iznosZateznaKamataParameter, iznosObvezaParameter, iznosPlacenoParameter, brojMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_INSERT(long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupMoratorij, long? ID_Temeljnica, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, int? Godina, int? Mjesec, int? GodinaGeneriranja, int? MjesecGeneriranja, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPopust, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosKreditOstatakRevalorizacija, decimal? IznosKamataOstatakRevalorizacija, decimal? IznosMoratorij, string IDValuta, decimal? IznosValuta, DateTime? DatumDospijece, decimal? TecajObrok, decimal? TecajUgovor, bool? Placen, bool? IzPreplate, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_UgovorStanOtkupAneks, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? IznosZateznaKamata, decimal? IznosObveza, decimal? IznosPlaceno, int? BrojMoratorij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var godinaGeneriranjaParameter = GodinaGeneriranja.HasValue ?
                new ObjectParameter("GodinaGeneriranja", GodinaGeneriranja) :
                new ObjectParameter("GodinaGeneriranja", typeof(int));
    
            var mjesecGeneriranjaParameter = MjesecGeneriranja.HasValue ?
                new ObjectParameter("MjesecGeneriranja", MjesecGeneriranja) :
                new ObjectParameter("MjesecGeneriranja", typeof(int));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPopustParameter = IznosPopust.HasValue ?
                new ObjectParameter("IznosPopust", IznosPopust) :
                new ObjectParameter("IznosPopust", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditOstatakRevalorizacijaParameter = IznosKreditOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditOstatakRevalorizacija", IznosKreditOstatakRevalorizacija) :
                new ObjectParameter("IznosKreditOstatakRevalorizacija", typeof(decimal));
    
            var iznosKamataOstatakRevalorizacijaParameter = IznosKamataOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataOstatakRevalorizacija", IznosKamataOstatakRevalorizacija) :
                new ObjectParameter("IznosKamataOstatakRevalorizacija", typeof(decimal));
    
            var iznosMoratorijParameter = IznosMoratorij.HasValue ?
                new ObjectParameter("IznosMoratorij", IznosMoratorij) :
                new ObjectParameter("IznosMoratorij", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var tecajObrokParameter = TecajObrok.HasValue ?
                new ObjectParameter("TecajObrok", TecajObrok) :
                new ObjectParameter("TecajObrok", typeof(decimal));
    
            var tecajUgovorParameter = TecajUgovor.HasValue ?
                new ObjectParameter("TecajUgovor", TecajUgovor) :
                new ObjectParameter("TecajUgovor", typeof(decimal));
    
            var placenParameter = Placen.HasValue ?
                new ObjectParameter("Placen", Placen) :
                new ObjectParameter("Placen", typeof(bool));
    
            var izPreplateParameter = IzPreplate.HasValue ?
                new ObjectParameter("IzPreplate", IzPreplate) :
                new ObjectParameter("IzPreplate", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosObvezaParameter = IznosObveza.HasValue ?
                new ObjectParameter("IznosObveza", IznosObveza) :
                new ObjectParameter("IznosObveza", typeof(decimal));
    
            var iznosPlacenoParameter = IznosPlaceno.HasValue ?
                new ObjectParameter("IznosPlaceno", IznosPlaceno) :
                new ObjectParameter("IznosPlaceno", typeof(decimal));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_INSERT", mergeOption, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupMoratorijParameter, iD_TemeljnicaParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, godinaParameter, mjesecParameter, godinaGeneriranjaParameter, mjesecGeneriranjaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPopustParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosKreditOstatakRevalorizacijaParameter, iznosKamataOstatakRevalorizacijaParameter, iznosMoratorijParameter, iDValutaParameter, iznosValutaParameter, datumDospijeceParameter, tecajObrokParameter, tecajUgovorParameter, placenParameter, izPreplateParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_UgovorStanOtkupAneksParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, iznosZateznaKamataParameter, iznosObvezaParameter, iznosPlacenoParameter, brojMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_SELECT(long? ID_UgovorStanOtkupObrok)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_SELECT", iD_UgovorStanOtkupObrokParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_SELECT(long? ID_UgovorStanOtkupObrok, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_SELECT", mergeOption, iD_UgovorStanOtkupObrokParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_UPDATE(long? ID_UgovorStanOtkupObrok, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupMoratorij, long? ID_Temeljnica, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, int? Godina, int? Mjesec, int? GodinaGeneriranja, int? MjesecGeneriranja, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPopust, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosKreditOstatakRevalorizacija, decimal? IznosKamataOstatakRevalorizacija, decimal? IznosMoratorij, string IDValuta, decimal? IznosValuta, DateTime? DatumDospijece, decimal? TecajObrok, decimal? TecajUgovor, bool? Placen, bool? IzPreplate, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_UgovorStanOtkupAneks, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? IznosZateznaKamata, decimal? IznosObveza, decimal? IznosPlaceno, int? BrojMoratorij)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var godinaGeneriranjaParameter = GodinaGeneriranja.HasValue ?
                new ObjectParameter("GodinaGeneriranja", GodinaGeneriranja) :
                new ObjectParameter("GodinaGeneriranja", typeof(int));
    
            var mjesecGeneriranjaParameter = MjesecGeneriranja.HasValue ?
                new ObjectParameter("MjesecGeneriranja", MjesecGeneriranja) :
                new ObjectParameter("MjesecGeneriranja", typeof(int));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPopustParameter = IznosPopust.HasValue ?
                new ObjectParameter("IznosPopust", IznosPopust) :
                new ObjectParameter("IznosPopust", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditOstatakRevalorizacijaParameter = IznosKreditOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditOstatakRevalorizacija", IznosKreditOstatakRevalorizacija) :
                new ObjectParameter("IznosKreditOstatakRevalorizacija", typeof(decimal));
    
            var iznosKamataOstatakRevalorizacijaParameter = IznosKamataOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataOstatakRevalorizacija", IznosKamataOstatakRevalorizacija) :
                new ObjectParameter("IznosKamataOstatakRevalorizacija", typeof(decimal));
    
            var iznosMoratorijParameter = IznosMoratorij.HasValue ?
                new ObjectParameter("IznosMoratorij", IznosMoratorij) :
                new ObjectParameter("IznosMoratorij", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var tecajObrokParameter = TecajObrok.HasValue ?
                new ObjectParameter("TecajObrok", TecajObrok) :
                new ObjectParameter("TecajObrok", typeof(decimal));
    
            var tecajUgovorParameter = TecajUgovor.HasValue ?
                new ObjectParameter("TecajUgovor", TecajUgovor) :
                new ObjectParameter("TecajUgovor", typeof(decimal));
    
            var placenParameter = Placen.HasValue ?
                new ObjectParameter("Placen", Placen) :
                new ObjectParameter("Placen", typeof(bool));
    
            var izPreplateParameter = IzPreplate.HasValue ?
                new ObjectParameter("IzPreplate", IzPreplate) :
                new ObjectParameter("IzPreplate", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosObvezaParameter = IznosObveza.HasValue ?
                new ObjectParameter("IznosObveza", IznosObveza) :
                new ObjectParameter("IznosObveza", typeof(decimal));
    
            var iznosPlacenoParameter = IznosPlaceno.HasValue ?
                new ObjectParameter("IznosPlaceno", IznosPlaceno) :
                new ObjectParameter("IznosPlaceno", typeof(decimal));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_UPDATE", iD_UgovorStanOtkupObrokParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupMoratorijParameter, iD_TemeljnicaParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, godinaParameter, mjesecParameter, godinaGeneriranjaParameter, mjesecGeneriranjaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPopustParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosKreditOstatakRevalorizacijaParameter, iznosKamataOstatakRevalorizacijaParameter, iznosMoratorijParameter, iDValutaParameter, iznosValutaParameter, datumDospijeceParameter, tecajObrokParameter, tecajUgovorParameter, placenParameter, izPreplateParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_UgovorStanOtkupAneksParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, iznosZateznaKamataParameter, iznosObvezaParameter, iznosPlacenoParameter, brojMoratorijParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrok> USP_UgovorStanOtkupObrok_UPDATE(long? ID_UgovorStanOtkupObrok, long? ID_UgovorStanOtkup, long? ID_UgovorStanOtkupMoratorij, long? ID_Temeljnica, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, int? Godina, int? Mjesec, int? GodinaGeneriranja, int? MjesecGeneriranja, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPopust, decimal? IznosKredit, decimal? IznosKreditRevalorizacija, decimal? IznosKamata, decimal? IznosKamataRevalorizacija, decimal? IznosKreditOstatakRevalorizacija, decimal? IznosKamataOstatakRevalorizacija, decimal? IznosMoratorij, string IDValuta, decimal? IznosValuta, DateTime? DatumDospijece, decimal? TecajObrok, decimal? TecajUgovor, bool? Placen, bool? IzPreplate, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_UgovorStanOtkupAneks, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, decimal? IznosZateznaKamata, decimal? IznosObveza, decimal? IznosPlaceno, int? BrojMoratorij, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrok).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_UgovorStanOtkupMoratorijParameter = ID_UgovorStanOtkupMoratorij.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", ID_UgovorStanOtkupMoratorij) :
                new ObjectParameter("ID_UgovorStanOtkupMoratorij", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var godinaGeneriranjaParameter = GodinaGeneriranja.HasValue ?
                new ObjectParameter("GodinaGeneriranja", GodinaGeneriranja) :
                new ObjectParameter("GodinaGeneriranja", typeof(int));
    
            var mjesecGeneriranjaParameter = MjesecGeneriranja.HasValue ?
                new ObjectParameter("MjesecGeneriranja", MjesecGeneriranja) :
                new ObjectParameter("MjesecGeneriranja", typeof(int));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPopustParameter = IznosPopust.HasValue ?
                new ObjectParameter("IznosPopust", IznosPopust) :
                new ObjectParameter("IznosPopust", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditOstatakRevalorizacijaParameter = IznosKreditOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditOstatakRevalorizacija", IznosKreditOstatakRevalorizacija) :
                new ObjectParameter("IznosKreditOstatakRevalorizacija", typeof(decimal));
    
            var iznosKamataOstatakRevalorizacijaParameter = IznosKamataOstatakRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataOstatakRevalorizacija", IznosKamataOstatakRevalorizacija) :
                new ObjectParameter("IznosKamataOstatakRevalorizacija", typeof(decimal));
    
            var iznosMoratorijParameter = IznosMoratorij.HasValue ?
                new ObjectParameter("IznosMoratorij", IznosMoratorij) :
                new ObjectParameter("IznosMoratorij", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var datumDospijeceParameter = DatumDospijece.HasValue ?
                new ObjectParameter("DatumDospijece", DatumDospijece) :
                new ObjectParameter("DatumDospijece", typeof(System.DateTime));
    
            var tecajObrokParameter = TecajObrok.HasValue ?
                new ObjectParameter("TecajObrok", TecajObrok) :
                new ObjectParameter("TecajObrok", typeof(decimal));
    
            var tecajUgovorParameter = TecajUgovor.HasValue ?
                new ObjectParameter("TecajUgovor", TecajUgovor) :
                new ObjectParameter("TecajUgovor", typeof(decimal));
    
            var placenParameter = Placen.HasValue ?
                new ObjectParameter("Placen", Placen) :
                new ObjectParameter("Placen", typeof(bool));
    
            var izPreplateParameter = IzPreplate.HasValue ?
                new ObjectParameter("IzPreplate", IzPreplate) :
                new ObjectParameter("IzPreplate", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosObvezaParameter = IznosObveza.HasValue ?
                new ObjectParameter("IznosObveza", IznosObveza) :
                new ObjectParameter("IznosObveza", typeof(decimal));
    
            var iznosPlacenoParameter = IznosPlaceno.HasValue ?
                new ObjectParameter("IznosPlaceno", IznosPlaceno) :
                new ObjectParameter("IznosPlaceno", typeof(decimal));
    
            var brojMoratorijParameter = BrojMoratorij.HasValue ?
                new ObjectParameter("BrojMoratorij", BrojMoratorij) :
                new ObjectParameter("BrojMoratorij", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrok>("USP_UgovorStanOtkupObrok_UPDATE", mergeOption, iD_UgovorStanOtkupObrokParameter, iD_UgovorStanOtkupParameter, iD_UgovorStanOtkupMoratorijParameter, iD_TemeljnicaParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, godinaParameter, mjesecParameter, godinaGeneriranjaParameter, mjesecGeneriranjaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPopustParameter, iznosKreditParameter, iznosKreditRevalorizacijaParameter, iznosKamataParameter, iznosKamataRevalorizacijaParameter, iznosKreditOstatakRevalorizacijaParameter, iznosKamataOstatakRevalorizacijaParameter, iznosMoratorijParameter, iDValutaParameter, iznosValutaParameter, datumDospijeceParameter, tecajObrokParameter, tecajUgovorParameter, placenParameter, izPreplateParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_UgovorStanOtkupAneksParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, iznosZateznaKamataParameter, iznosObvezaParameter, iznosPlacenoParameter, brojMoratorijParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupObrokPreplata_DELETE(long? ID_UgovorStanOtkupObrokPreplata)
        {
            var iD_UgovorStanOtkupObrokPreplataParameter = ID_UgovorStanOtkupObrokPreplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", ID_UgovorStanOtkupObrokPreplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupObrokPreplata_DELETE", iD_UgovorStanOtkupObrokPreplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_INSERT(long? ID_UgovorStanOtkupObrok, int? Broj, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, DateTime? Datum, decimal? IznosPreplata, string IDValuta, decimal? IznosPreplataValuta, bool? Aktivno, int? BrojPreplata, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? GodinaObrokFormiranje, int? MjesecObrokFormiranje, long? ID_PlacanjeVr, long? ID_Racun, int? BrojObveznica, bool? NeZateznaKamata, long? ID_UgovorStanOtkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosPreplataValutaParameter = IznosPreplataValuta.HasValue ?
                new ObjectParameter("IznosPreplataValuta", IznosPreplataValuta) :
                new ObjectParameter("IznosPreplataValuta", typeof(decimal));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var godinaObrokFormiranjeParameter = GodinaObrokFormiranje.HasValue ?
                new ObjectParameter("GodinaObrokFormiranje", GodinaObrokFormiranje) :
                new ObjectParameter("GodinaObrokFormiranje", typeof(int));
    
            var mjesecObrokFormiranjeParameter = MjesecObrokFormiranje.HasValue ?
                new ObjectParameter("MjesecObrokFormiranje", MjesecObrokFormiranje) :
                new ObjectParameter("MjesecObrokFormiranje", typeof(int));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_INSERT", iD_UgovorStanOtkupObrokParameter, brojParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, datumParameter, iznosPreplataParameter, iDValutaParameter, iznosPreplataValutaParameter, aktivnoParameter, brojPreplataParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, godinaObrokFormiranjeParameter, mjesecObrokFormiranjeParameter, iD_PlacanjeVrParameter, iD_RacunParameter, brojObveznicaParameter, neZateznaKamataParameter, iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_INSERT(long? ID_UgovorStanOtkupObrok, int? Broj, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, DateTime? Datum, decimal? IznosPreplata, string IDValuta, decimal? IznosPreplataValuta, bool? Aktivno, int? BrojPreplata, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? GodinaObrokFormiranje, int? MjesecObrokFormiranje, long? ID_PlacanjeVr, long? ID_Racun, int? BrojObveznica, bool? NeZateznaKamata, long? ID_UgovorStanOtkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosPreplataValutaParameter = IznosPreplataValuta.HasValue ?
                new ObjectParameter("IznosPreplataValuta", IznosPreplataValuta) :
                new ObjectParameter("IznosPreplataValuta", typeof(decimal));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var godinaObrokFormiranjeParameter = GodinaObrokFormiranje.HasValue ?
                new ObjectParameter("GodinaObrokFormiranje", GodinaObrokFormiranje) :
                new ObjectParameter("GodinaObrokFormiranje", typeof(int));
    
            var mjesecObrokFormiranjeParameter = MjesecObrokFormiranje.HasValue ?
                new ObjectParameter("MjesecObrokFormiranje", MjesecObrokFormiranje) :
                new ObjectParameter("MjesecObrokFormiranje", typeof(int));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_INSERT", mergeOption, iD_UgovorStanOtkupObrokParameter, brojParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, datumParameter, iznosPreplataParameter, iDValutaParameter, iznosPreplataValutaParameter, aktivnoParameter, brojPreplataParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, godinaObrokFormiranjeParameter, mjesecObrokFormiranjeParameter, iD_PlacanjeVrParameter, iD_RacunParameter, brojObveznicaParameter, neZateznaKamataParameter, iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_SELECT(long? ID_UgovorStanOtkupObrokPreplata)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokPreplataParameter = ID_UgovorStanOtkupObrokPreplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", ID_UgovorStanOtkupObrokPreplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_SELECT", iD_UgovorStanOtkupObrokPreplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_SELECT(long? ID_UgovorStanOtkupObrokPreplata, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokPreplataParameter = ID_UgovorStanOtkupObrokPreplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", ID_UgovorStanOtkupObrokPreplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_SELECT", mergeOption, iD_UgovorStanOtkupObrokPreplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_UPDATE(long? ID_UgovorStanOtkupObrokPreplata, long? ID_UgovorStanOtkupObrok, int? Broj, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, DateTime? Datum, decimal? IznosPreplata, string IDValuta, decimal? IznosPreplataValuta, bool? Aktivno, int? BrojPreplata, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? GodinaObrokFormiranje, int? MjesecObrokFormiranje, long? ID_PlacanjeVr, long? ID_Racun, int? BrojObveznica, bool? NeZateznaKamata, long? ID_UgovorStanOtkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokPreplataParameter = ID_UgovorStanOtkupObrokPreplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", ID_UgovorStanOtkupObrokPreplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", typeof(long));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosPreplataValutaParameter = IznosPreplataValuta.HasValue ?
                new ObjectParameter("IznosPreplataValuta", IznosPreplataValuta) :
                new ObjectParameter("IznosPreplataValuta", typeof(decimal));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var godinaObrokFormiranjeParameter = GodinaObrokFormiranje.HasValue ?
                new ObjectParameter("GodinaObrokFormiranje", GodinaObrokFormiranje) :
                new ObjectParameter("GodinaObrokFormiranje", typeof(int));
    
            var mjesecObrokFormiranjeParameter = MjesecObrokFormiranje.HasValue ?
                new ObjectParameter("MjesecObrokFormiranje", MjesecObrokFormiranje) :
                new ObjectParameter("MjesecObrokFormiranje", typeof(int));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_UPDATE", iD_UgovorStanOtkupObrokPreplataParameter, iD_UgovorStanOtkupObrokParameter, brojParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, datumParameter, iznosPreplataParameter, iDValutaParameter, iznosPreplataValutaParameter, aktivnoParameter, brojPreplataParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, godinaObrokFormiranjeParameter, mjesecObrokFormiranjeParameter, iD_PlacanjeVrParameter, iD_RacunParameter, brojObveznicaParameter, neZateznaKamataParameter, iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokPreplata> USP_UgovorStanOtkupObrokPreplata_UPDATE(long? ID_UgovorStanOtkupObrokPreplata, long? ID_UgovorStanOtkupObrok, int? Broj, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, DateTime? Datum, decimal? IznosPreplata, string IDValuta, decimal? IznosPreplataValuta, bool? Aktivno, int? BrojPreplata, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? GodinaObrokFormiranje, int? MjesecObrokFormiranje, long? ID_PlacanjeVr, long? ID_Racun, int? BrojObveznica, bool? NeZateznaKamata, long? ID_UgovorStanOtkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokPreplata).Assembly);
    
            var iD_UgovorStanOtkupObrokPreplataParameter = ID_UgovorStanOtkupObrokPreplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", ID_UgovorStanOtkupObrokPreplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokPreplata", typeof(long));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var brojParameter = Broj.HasValue ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosPreplataValutaParameter = IznosPreplataValuta.HasValue ?
                new ObjectParameter("IznosPreplataValuta", IznosPreplataValuta) :
                new ObjectParameter("IznosPreplataValuta", typeof(decimal));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var godinaObrokFormiranjeParameter = GodinaObrokFormiranje.HasValue ?
                new ObjectParameter("GodinaObrokFormiranje", GodinaObrokFormiranje) :
                new ObjectParameter("GodinaObrokFormiranje", typeof(int));
    
            var mjesecObrokFormiranjeParameter = MjesecObrokFormiranje.HasValue ?
                new ObjectParameter("MjesecObrokFormiranje", MjesecObrokFormiranje) :
                new ObjectParameter("MjesecObrokFormiranje", typeof(int));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var brojObveznicaParameter = BrojObveznica.HasValue ?
                new ObjectParameter("BrojObveznica", BrojObveznica) :
                new ObjectParameter("BrojObveznica", typeof(int));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokPreplata>("USP_UgovorStanOtkupObrokPreplata_UPDATE", mergeOption, iD_UgovorStanOtkupObrokPreplataParameter, iD_UgovorStanOtkupObrokParameter, brojParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, datumParameter, iznosPreplataParameter, iDValutaParameter, iznosPreplataValutaParameter, aktivnoParameter, brojPreplataParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, godinaObrokFormiranjeParameter, mjesecObrokFormiranjeParameter, iD_PlacanjeVrParameter, iD_RacunParameter, brojObveznicaParameter, neZateznaKamataParameter, iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupObrokUplata_DELETE(long? ID_UgovorStanOtkupObrokUplata)
        {
            var iD_UgovorStanOtkupObrokUplataParameter = ID_UgovorStanOtkupObrokUplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", ID_UgovorStanOtkupObrokUplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupObrokUplata_DELETE", iD_UgovorStanOtkupObrokUplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_INSERT(long? ID_UgovorStanOtkupObrok, DateTime? Datum, decimal? IznosZateznaKamataUplata, decimal? IznosValuta, decimal? IznosValutaUgovor, decimal? IznosTecajnaRazlika, decimal? IznosZateznaKamataPrije, decimal? IznosKredit, decimal? IznosKamata, decimal? IznosKreditRevalorizacija, decimal? IznosKamataRevalorizacija, decimal? IznosKreditMoratorij, decimal? IznosKamataMoratorij, decimal? IznosKreditMoratorijRevalorizacija, decimal? IznosKamataMoratorijRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPreplata, string IDValuta, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, decimal? OsnovicaZateznaKamata, DateTime? DatumZateznaKamata, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, decimal? IznosObrokDugOstatak, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, long? ID_UgovorStanOtkupObrokZateznaKamata, int? BrojObrokZateznaKamata, int? BrojPreplata, long? ID_Racun, long? ID_PlacanjeVr, long? ID_Temeljnica, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosZateznaKamataUplataParameter = IznosZateznaKamataUplata.HasValue ?
                new ObjectParameter("IznosZateznaKamataUplata", IznosZateznaKamataUplata) :
                new ObjectParameter("IznosZateznaKamataUplata", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosValutaUgovorParameter = IznosValutaUgovor.HasValue ?
                new ObjectParameter("IznosValutaUgovor", IznosValutaUgovor) :
                new ObjectParameter("IznosValutaUgovor", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosZateznaKamataPrijeParameter = IznosZateznaKamataPrije.HasValue ?
                new ObjectParameter("IznosZateznaKamataPrije", IznosZateznaKamataPrije) :
                new ObjectParameter("IznosZateznaKamataPrije", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditMoratorijParameter = IznosKreditMoratorij.HasValue ?
                new ObjectParameter("IznosKreditMoratorij", IznosKreditMoratorij) :
                new ObjectParameter("IznosKreditMoratorij", typeof(decimal));
    
            var iznosKamataMoratorijParameter = IznosKamataMoratorij.HasValue ?
                new ObjectParameter("IznosKamataMoratorij", IznosKamataMoratorij) :
                new ObjectParameter("IznosKamataMoratorij", typeof(decimal));
    
            var iznosKreditMoratorijRevalorizacijaParameter = IznosKreditMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", IznosKreditMoratorijRevalorizacija) :
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", typeof(decimal));
    
            var iznosKamataMoratorijRevalorizacijaParameter = IznosKamataMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", IznosKamataMoratorijRevalorizacija) :
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var osnovicaZateznaKamataParameter = OsnovicaZateznaKamata.HasValue ?
                new ObjectParameter("OsnovicaZateznaKamata", OsnovicaZateznaKamata) :
                new ObjectParameter("OsnovicaZateznaKamata", typeof(decimal));
    
            var datumZateznaKamataParameter = DatumZateznaKamata.HasValue ?
                new ObjectParameter("DatumZateznaKamata", DatumZateznaKamata) :
                new ObjectParameter("DatumZateznaKamata", typeof(System.DateTime));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var iznosObrokDugOstatakParameter = IznosObrokDugOstatak.HasValue ?
                new ObjectParameter("IznosObrokDugOstatak", IznosObrokDugOstatak) :
                new ObjectParameter("IznosObrokDugOstatak", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var iD_UgovorStanOtkupObrokZateznaKamataParameter = ID_UgovorStanOtkupObrokZateznaKamata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", ID_UgovorStanOtkupObrokZateznaKamata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", typeof(long));
    
            var brojObrokZateznaKamataParameter = BrojObrokZateznaKamata.HasValue ?
                new ObjectParameter("BrojObrokZateznaKamata", BrojObrokZateznaKamata) :
                new ObjectParameter("BrojObrokZateznaKamata", typeof(int));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_INSERT", iD_UgovorStanOtkupObrokParameter, datumParameter, iznosZateznaKamataUplataParameter, iznosValutaParameter, iznosValutaUgovorParameter, iznosTecajnaRazlikaParameter, iznosZateznaKamataPrijeParameter, iznosKreditParameter, iznosKamataParameter, iznosKreditRevalorizacijaParameter, iznosKamataRevalorizacijaParameter, iznosKreditMoratorijParameter, iznosKamataMoratorijParameter, iznosKreditMoratorijRevalorizacijaParameter, iznosKamataMoratorijRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPreplataParameter, iDValutaParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, osnovicaZateznaKamataParameter, datumZateznaKamataParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, iznosObrokDugOstatakParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, iD_UgovorStanOtkupObrokZateznaKamataParameter, brojObrokZateznaKamataParameter, brojPreplataParameter, iD_RacunParameter, iD_PlacanjeVrParameter, iD_TemeljnicaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_INSERT(long? ID_UgovorStanOtkupObrok, DateTime? Datum, decimal? IznosZateznaKamataUplata, decimal? IznosValuta, decimal? IznosValutaUgovor, decimal? IznosTecajnaRazlika, decimal? IznosZateznaKamataPrije, decimal? IznosKredit, decimal? IznosKamata, decimal? IznosKreditRevalorizacija, decimal? IznosKamataRevalorizacija, decimal? IznosKreditMoratorij, decimal? IznosKamataMoratorij, decimal? IznosKreditMoratorijRevalorizacija, decimal? IznosKamataMoratorijRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPreplata, string IDValuta, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, decimal? OsnovicaZateznaKamata, DateTime? DatumZateznaKamata, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, decimal? IznosObrokDugOstatak, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, long? ID_UgovorStanOtkupObrokZateznaKamata, int? BrojObrokZateznaKamata, int? BrojPreplata, long? ID_Racun, long? ID_PlacanjeVr, long? ID_Temeljnica, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosZateznaKamataUplataParameter = IznosZateznaKamataUplata.HasValue ?
                new ObjectParameter("IznosZateznaKamataUplata", IznosZateznaKamataUplata) :
                new ObjectParameter("IznosZateznaKamataUplata", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosValutaUgovorParameter = IznosValutaUgovor.HasValue ?
                new ObjectParameter("IznosValutaUgovor", IznosValutaUgovor) :
                new ObjectParameter("IznosValutaUgovor", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosZateznaKamataPrijeParameter = IznosZateznaKamataPrije.HasValue ?
                new ObjectParameter("IznosZateznaKamataPrije", IznosZateznaKamataPrije) :
                new ObjectParameter("IznosZateznaKamataPrije", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditMoratorijParameter = IznosKreditMoratorij.HasValue ?
                new ObjectParameter("IznosKreditMoratorij", IznosKreditMoratorij) :
                new ObjectParameter("IznosKreditMoratorij", typeof(decimal));
    
            var iznosKamataMoratorijParameter = IznosKamataMoratorij.HasValue ?
                new ObjectParameter("IznosKamataMoratorij", IznosKamataMoratorij) :
                new ObjectParameter("IznosKamataMoratorij", typeof(decimal));
    
            var iznosKreditMoratorijRevalorizacijaParameter = IznosKreditMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", IznosKreditMoratorijRevalorizacija) :
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", typeof(decimal));
    
            var iznosKamataMoratorijRevalorizacijaParameter = IznosKamataMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", IznosKamataMoratorijRevalorizacija) :
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var osnovicaZateznaKamataParameter = OsnovicaZateznaKamata.HasValue ?
                new ObjectParameter("OsnovicaZateznaKamata", OsnovicaZateznaKamata) :
                new ObjectParameter("OsnovicaZateznaKamata", typeof(decimal));
    
            var datumZateznaKamataParameter = DatumZateznaKamata.HasValue ?
                new ObjectParameter("DatumZateznaKamata", DatumZateznaKamata) :
                new ObjectParameter("DatumZateznaKamata", typeof(System.DateTime));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var iznosObrokDugOstatakParameter = IznosObrokDugOstatak.HasValue ?
                new ObjectParameter("IznosObrokDugOstatak", IznosObrokDugOstatak) :
                new ObjectParameter("IznosObrokDugOstatak", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var iD_UgovorStanOtkupObrokZateznaKamataParameter = ID_UgovorStanOtkupObrokZateznaKamata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", ID_UgovorStanOtkupObrokZateznaKamata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", typeof(long));
    
            var brojObrokZateznaKamataParameter = BrojObrokZateznaKamata.HasValue ?
                new ObjectParameter("BrojObrokZateznaKamata", BrojObrokZateznaKamata) :
                new ObjectParameter("BrojObrokZateznaKamata", typeof(int));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_INSERT", mergeOption, iD_UgovorStanOtkupObrokParameter, datumParameter, iznosZateznaKamataUplataParameter, iznosValutaParameter, iznosValutaUgovorParameter, iznosTecajnaRazlikaParameter, iznosZateznaKamataPrijeParameter, iznosKreditParameter, iznosKamataParameter, iznosKreditRevalorizacijaParameter, iznosKamataRevalorizacijaParameter, iznosKreditMoratorijParameter, iznosKamataMoratorijParameter, iznosKreditMoratorijRevalorizacijaParameter, iznosKamataMoratorijRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPreplataParameter, iDValutaParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, osnovicaZateznaKamataParameter, datumZateznaKamataParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, iznosObrokDugOstatakParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, iD_UgovorStanOtkupObrokZateznaKamataParameter, brojObrokZateznaKamataParameter, brojPreplataParameter, iD_RacunParameter, iD_PlacanjeVrParameter, iD_TemeljnicaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_SELECT(long? ID_UgovorStanOtkupObrokUplata)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokUplataParameter = ID_UgovorStanOtkupObrokUplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", ID_UgovorStanOtkupObrokUplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_SELECT", iD_UgovorStanOtkupObrokUplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_SELECT(long? ID_UgovorStanOtkupObrokUplata, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokUplataParameter = ID_UgovorStanOtkupObrokUplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", ID_UgovorStanOtkupObrokUplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_SELECT", mergeOption, iD_UgovorStanOtkupObrokUplataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_UPDATE(long? ID_UgovorStanOtkupObrokUplata, long? ID_UgovorStanOtkupObrok, DateTime? Datum, decimal? IznosZateznaKamataUplata, decimal? IznosValuta, decimal? IznosValutaUgovor, decimal? IznosTecajnaRazlika, decimal? IznosZateznaKamataPrije, decimal? IznosKredit, decimal? IznosKamata, decimal? IznosKreditRevalorizacija, decimal? IznosKamataRevalorizacija, decimal? IznosKreditMoratorij, decimal? IznosKamataMoratorij, decimal? IznosKreditMoratorijRevalorizacija, decimal? IznosKamataMoratorijRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPreplata, string IDValuta, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, decimal? OsnovicaZateznaKamata, DateTime? DatumZateznaKamata, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, decimal? IznosObrokDugOstatak, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, long? ID_UgovorStanOtkupObrokZateznaKamata, int? BrojObrokZateznaKamata, int? BrojPreplata, long? ID_Racun, long? ID_PlacanjeVr, long? ID_Temeljnica, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokUplataParameter = ID_UgovorStanOtkupObrokUplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", ID_UgovorStanOtkupObrokUplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", typeof(long));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosZateznaKamataUplataParameter = IznosZateznaKamataUplata.HasValue ?
                new ObjectParameter("IznosZateznaKamataUplata", IznosZateznaKamataUplata) :
                new ObjectParameter("IznosZateznaKamataUplata", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosValutaUgovorParameter = IznosValutaUgovor.HasValue ?
                new ObjectParameter("IznosValutaUgovor", IznosValutaUgovor) :
                new ObjectParameter("IznosValutaUgovor", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosZateznaKamataPrijeParameter = IznosZateznaKamataPrije.HasValue ?
                new ObjectParameter("IznosZateznaKamataPrije", IznosZateznaKamataPrije) :
                new ObjectParameter("IznosZateznaKamataPrije", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditMoratorijParameter = IznosKreditMoratorij.HasValue ?
                new ObjectParameter("IznosKreditMoratorij", IznosKreditMoratorij) :
                new ObjectParameter("IznosKreditMoratorij", typeof(decimal));
    
            var iznosKamataMoratorijParameter = IznosKamataMoratorij.HasValue ?
                new ObjectParameter("IznosKamataMoratorij", IznosKamataMoratorij) :
                new ObjectParameter("IznosKamataMoratorij", typeof(decimal));
    
            var iznosKreditMoratorijRevalorizacijaParameter = IznosKreditMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", IznosKreditMoratorijRevalorizacija) :
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", typeof(decimal));
    
            var iznosKamataMoratorijRevalorizacijaParameter = IznosKamataMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", IznosKamataMoratorijRevalorizacija) :
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var osnovicaZateznaKamataParameter = OsnovicaZateznaKamata.HasValue ?
                new ObjectParameter("OsnovicaZateznaKamata", OsnovicaZateznaKamata) :
                new ObjectParameter("OsnovicaZateznaKamata", typeof(decimal));
    
            var datumZateznaKamataParameter = DatumZateznaKamata.HasValue ?
                new ObjectParameter("DatumZateznaKamata", DatumZateznaKamata) :
                new ObjectParameter("DatumZateznaKamata", typeof(System.DateTime));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var iznosObrokDugOstatakParameter = IznosObrokDugOstatak.HasValue ?
                new ObjectParameter("IznosObrokDugOstatak", IznosObrokDugOstatak) :
                new ObjectParameter("IznosObrokDugOstatak", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var iD_UgovorStanOtkupObrokZateznaKamataParameter = ID_UgovorStanOtkupObrokZateznaKamata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", ID_UgovorStanOtkupObrokZateznaKamata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", typeof(long));
    
            var brojObrokZateznaKamataParameter = BrojObrokZateznaKamata.HasValue ?
                new ObjectParameter("BrojObrokZateznaKamata", BrojObrokZateznaKamata) :
                new ObjectParameter("BrojObrokZateznaKamata", typeof(int));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_UPDATE", iD_UgovorStanOtkupObrokUplataParameter, iD_UgovorStanOtkupObrokParameter, datumParameter, iznosZateznaKamataUplataParameter, iznosValutaParameter, iznosValutaUgovorParameter, iznosTecajnaRazlikaParameter, iznosZateznaKamataPrijeParameter, iznosKreditParameter, iznosKamataParameter, iznosKreditRevalorizacijaParameter, iznosKamataRevalorizacijaParameter, iznosKreditMoratorijParameter, iznosKamataMoratorijParameter, iznosKreditMoratorijRevalorizacijaParameter, iznosKamataMoratorijRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPreplataParameter, iDValutaParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, osnovicaZateznaKamataParameter, datumZateznaKamataParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, iznosObrokDugOstatakParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, iD_UgovorStanOtkupObrokZateznaKamataParameter, brojObrokZateznaKamataParameter, brojPreplataParameter, iD_RacunParameter, iD_PlacanjeVrParameter, iD_TemeljnicaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupObrokUplata> USP_UgovorStanOtkupObrokUplata_UPDATE(long? ID_UgovorStanOtkupObrokUplata, long? ID_UgovorStanOtkupObrok, DateTime? Datum, decimal? IznosZateznaKamataUplata, decimal? IznosValuta, decimal? IznosValutaUgovor, decimal? IznosTecajnaRazlika, decimal? IznosZateznaKamataPrije, decimal? IznosKredit, decimal? IznosKamata, decimal? IznosKreditRevalorizacija, decimal? IznosKamataRevalorizacija, decimal? IznosKreditMoratorij, decimal? IznosKamataMoratorij, decimal? IznosKreditMoratorijRevalorizacija, decimal? IznosKamataMoratorijRevalorizacija, decimal? IznosJednokratno, decimal? IznosUcesce, decimal? IznosPreplata, string IDValuta, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, decimal? OsnovicaZateznaKamata, DateTime? DatumZateznaKamata, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, decimal? IznosObrokDugOstatak, int? BrojUgovor, int? BrojAneks, int? BrojStorno, int? BrojObrok, long? ID_UgovorStanOtkupObrokZateznaKamata, int? BrojObrokZateznaKamata, int? BrojPreplata, long? ID_Racun, long? ID_PlacanjeVr, long? ID_Temeljnica, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupObrokUplata).Assembly);
    
            var iD_UgovorStanOtkupObrokUplataParameter = ID_UgovorStanOtkupObrokUplata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", ID_UgovorStanOtkupObrokUplata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokUplata", typeof(long));
    
            var iD_UgovorStanOtkupObrokParameter = ID_UgovorStanOtkupObrok.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrok", ID_UgovorStanOtkupObrok) :
                new ObjectParameter("ID_UgovorStanOtkupObrok", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosZateznaKamataUplataParameter = IznosZateznaKamataUplata.HasValue ?
                new ObjectParameter("IznosZateznaKamataUplata", IznosZateznaKamataUplata) :
                new ObjectParameter("IznosZateznaKamataUplata", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            var iznosValutaUgovorParameter = IznosValutaUgovor.HasValue ?
                new ObjectParameter("IznosValutaUgovor", IznosValutaUgovor) :
                new ObjectParameter("IznosValutaUgovor", typeof(decimal));
    
            var iznosTecajnaRazlikaParameter = IznosTecajnaRazlika.HasValue ?
                new ObjectParameter("IznosTecajnaRazlika", IznosTecajnaRazlika) :
                new ObjectParameter("IznosTecajnaRazlika", typeof(decimal));
    
            var iznosZateznaKamataPrijeParameter = IznosZateznaKamataPrije.HasValue ?
                new ObjectParameter("IznosZateznaKamataPrije", IznosZateznaKamataPrije) :
                new ObjectParameter("IznosZateznaKamataPrije", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKreditMoratorijParameter = IznosKreditMoratorij.HasValue ?
                new ObjectParameter("IznosKreditMoratorij", IznosKreditMoratorij) :
                new ObjectParameter("IznosKreditMoratorij", typeof(decimal));
    
            var iznosKamataMoratorijParameter = IznosKamataMoratorij.HasValue ?
                new ObjectParameter("IznosKamataMoratorij", IznosKamataMoratorij) :
                new ObjectParameter("IznosKamataMoratorij", typeof(decimal));
    
            var iznosKreditMoratorijRevalorizacijaParameter = IznosKreditMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", IznosKreditMoratorijRevalorizacija) :
                new ObjectParameter("IznosKreditMoratorijRevalorizacija", typeof(decimal));
    
            var iznosKamataMoratorijRevalorizacijaParameter = IznosKamataMoratorijRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", IznosKamataMoratorijRevalorizacija) :
                new ObjectParameter("IznosKamataMoratorijRevalorizacija", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosPreplataParameter = IznosPreplata.HasValue ?
                new ObjectParameter("IznosPreplata", IznosPreplata) :
                new ObjectParameter("IznosPreplata", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var osnovicaZateznaKamataParameter = OsnovicaZateznaKamata.HasValue ?
                new ObjectParameter("OsnovicaZateznaKamata", OsnovicaZateznaKamata) :
                new ObjectParameter("OsnovicaZateznaKamata", typeof(decimal));
    
            var datumZateznaKamataParameter = DatumZateznaKamata.HasValue ?
                new ObjectParameter("DatumZateznaKamata", DatumZateznaKamata) :
                new ObjectParameter("DatumZateznaKamata", typeof(System.DateTime));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var iznosObrokDugOstatakParameter = IznosObrokDugOstatak.HasValue ?
                new ObjectParameter("IznosObrokDugOstatak", IznosObrokDugOstatak) :
                new ObjectParameter("IznosObrokDugOstatak", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var iD_UgovorStanOtkupObrokZateznaKamataParameter = ID_UgovorStanOtkupObrokZateznaKamata.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", ID_UgovorStanOtkupObrokZateznaKamata) :
                new ObjectParameter("ID_UgovorStanOtkupObrokZateznaKamata", typeof(long));
    
            var brojObrokZateznaKamataParameter = BrojObrokZateznaKamata.HasValue ?
                new ObjectParameter("BrojObrokZateznaKamata", BrojObrokZateznaKamata) :
                new ObjectParameter("BrojObrokZateznaKamata", typeof(int));
    
            var brojPreplataParameter = BrojPreplata.HasValue ?
                new ObjectParameter("BrojPreplata", BrojPreplata) :
                new ObjectParameter("BrojPreplata", typeof(int));
    
            var iD_RacunParameter = ID_Racun.HasValue ?
                new ObjectParameter("ID_Racun", ID_Racun) :
                new ObjectParameter("ID_Racun", typeof(long));
    
            var iD_PlacanjeVrParameter = ID_PlacanjeVr.HasValue ?
                new ObjectParameter("ID_PlacanjeVr", ID_PlacanjeVr) :
                new ObjectParameter("ID_PlacanjeVr", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupObrokUplata>("USP_UgovorStanOtkupObrokUplata_UPDATE", mergeOption, iD_UgovorStanOtkupObrokUplataParameter, iD_UgovorStanOtkupObrokParameter, datumParameter, iznosZateznaKamataUplataParameter, iznosValutaParameter, iznosValutaUgovorParameter, iznosTecajnaRazlikaParameter, iznosZateznaKamataPrijeParameter, iznosKreditParameter, iznosKamataParameter, iznosKreditRevalorizacijaParameter, iznosKamataRevalorizacijaParameter, iznosKreditMoratorijParameter, iznosKamataMoratorijParameter, iznosKreditMoratorijRevalorizacijaParameter, iznosKamataMoratorijRevalorizacijaParameter, iznosJednokratnoParameter, iznosUcesceParameter, iznosPreplataParameter, iDValutaParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, osnovicaZateznaKamataParameter, datumZateznaKamataParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, iznosObrokDugOstatakParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, brojObrokParameter, iD_UgovorStanOtkupObrokZateznaKamataParameter, brojObrokZateznaKamataParameter, brojPreplataParameter, iD_RacunParameter, iD_PlacanjeVrParameter, iD_TemeljnicaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupOpomena_DELETE(long? ID_UgovorStanOtkupOpomena)
        {
            var iD_UgovorStanOtkupOpomenaParameter = ID_UgovorStanOtkupOpomena.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupOpomena", ID_UgovorStanOtkupOpomena) :
                new ObjectParameter("ID_UgovorStanOtkupOpomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupOpomena_DELETE", iD_UgovorStanOtkupOpomenaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_INSERT(long? ID_Opomena, long? ID_UgovorStanOtkup, int? BrojOpomena, int? BrojUgovor, decimal? IznosDug, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? Ispis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var ispisParameter = Ispis.HasValue ?
                new ObjectParameter("Ispis", Ispis) :
                new ObjectParameter("Ispis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_INSERT", iD_OpomenaParameter, iD_UgovorStanOtkupParameter, brojOpomenaParameter, brojUgovorParameter, iznosDugParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, ispisParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_INSERT(long? ID_Opomena, long? ID_UgovorStanOtkup, int? BrojOpomena, int? BrojUgovor, decimal? IznosDug, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? Ispis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var ispisParameter = Ispis.HasValue ?
                new ObjectParameter("Ispis", Ispis) :
                new ObjectParameter("Ispis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_INSERT", mergeOption, iD_OpomenaParameter, iD_UgovorStanOtkupParameter, brojOpomenaParameter, brojUgovorParameter, iznosDugParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, ispisParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_SELECT(long? ID_UgovorStanOtkupOpomena)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_UgovorStanOtkupOpomenaParameter = ID_UgovorStanOtkupOpomena.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupOpomena", ID_UgovorStanOtkupOpomena) :
                new ObjectParameter("ID_UgovorStanOtkupOpomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_SELECT", iD_UgovorStanOtkupOpomenaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_SELECT(long? ID_UgovorStanOtkupOpomena, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_UgovorStanOtkupOpomenaParameter = ID_UgovorStanOtkupOpomena.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupOpomena", ID_UgovorStanOtkupOpomena) :
                new ObjectParameter("ID_UgovorStanOtkupOpomena", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_SELECT", mergeOption, iD_UgovorStanOtkupOpomenaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_UPDATE(long? ID_UgovorStanOtkupOpomena, long? ID_Opomena, long? ID_UgovorStanOtkup, int? BrojOpomena, int? BrojUgovor, decimal? IznosDug, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? Ispis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_UgovorStanOtkupOpomenaParameter = ID_UgovorStanOtkupOpomena.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupOpomena", ID_UgovorStanOtkupOpomena) :
                new ObjectParameter("ID_UgovorStanOtkupOpomena", typeof(long));
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var ispisParameter = Ispis.HasValue ?
                new ObjectParameter("Ispis", Ispis) :
                new ObjectParameter("Ispis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_UPDATE", iD_UgovorStanOtkupOpomenaParameter, iD_OpomenaParameter, iD_UgovorStanOtkupParameter, brojOpomenaParameter, brojUgovorParameter, iznosDugParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, ispisParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupOpomena> USP_UgovorStanOtkupOpomena_UPDATE(long? ID_UgovorStanOtkupOpomena, long? ID_Opomena, long? ID_UgovorStanOtkup, int? BrojOpomena, int? BrojUgovor, decimal? IznosDug, decimal? IznosZateznaKamata, decimal? IznosZateznaKamataDugOstatak, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? Ispis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupOpomena).Assembly);
    
            var iD_UgovorStanOtkupOpomenaParameter = ID_UgovorStanOtkupOpomena.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupOpomena", ID_UgovorStanOtkupOpomena) :
                new ObjectParameter("ID_UgovorStanOtkupOpomena", typeof(long));
    
            var iD_OpomenaParameter = ID_Opomena.HasValue ?
                new ObjectParameter("ID_Opomena", ID_Opomena) :
                new ObjectParameter("ID_Opomena", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojOpomenaParameter = BrojOpomena.HasValue ?
                new ObjectParameter("BrojOpomena", BrojOpomena) :
                new ObjectParameter("BrojOpomena", typeof(int));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var iznosDugParameter = IznosDug.HasValue ?
                new ObjectParameter("IznosDug", IznosDug) :
                new ObjectParameter("IznosDug", typeof(decimal));
    
            var iznosZateznaKamataParameter = IznosZateznaKamata.HasValue ?
                new ObjectParameter("IznosZateznaKamata", IznosZateznaKamata) :
                new ObjectParameter("IznosZateznaKamata", typeof(decimal));
    
            var iznosZateznaKamataDugOstatakParameter = IznosZateznaKamataDugOstatak.HasValue ?
                new ObjectParameter("IznosZateznaKamataDugOstatak", IznosZateznaKamataDugOstatak) :
                new ObjectParameter("IznosZateznaKamataDugOstatak", typeof(decimal));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var ispisParameter = Ispis.HasValue ?
                new ObjectParameter("Ispis", Ispis) :
                new ObjectParameter("Ispis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupOpomena>("USP_UgovorStanOtkupOpomena_UPDATE", mergeOption, iD_UgovorStanOtkupOpomenaParameter, iD_OpomenaParameter, iD_UgovorStanOtkupParameter, brojOpomenaParameter, brojUgovorParameter, iznosDugParameter, iznosZateznaKamataParameter, iznosZateznaKamataDugOstatakParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, ispisParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupShema_DELETE(long? ID_UgovorStanOtkupShema)
        {
            var iD_UgovorStanOtkupShemaParameter = ID_UgovorStanOtkupShema.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupShema", ID_UgovorStanOtkupShema) :
                new ObjectParameter("ID_UgovorStanOtkupShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupShema_DELETE", iD_UgovorStanOtkupShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_INSERT(long? ID_UgovorStanOtkup, long? ID_Shema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_INSERT", iD_UgovorStanOtkupParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_INSERT(long? ID_UgovorStanOtkup, long? ID_Shema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_INSERT", mergeOption, iD_UgovorStanOtkupParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_SELECT(long? ID_UgovorStanOtkupShema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupShemaParameter = ID_UgovorStanOtkupShema.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupShema", ID_UgovorStanOtkupShema) :
                new ObjectParameter("ID_UgovorStanOtkupShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_SELECT", iD_UgovorStanOtkupShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_SELECT(long? ID_UgovorStanOtkupShema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupShemaParameter = ID_UgovorStanOtkupShema.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupShema", ID_UgovorStanOtkupShema) :
                new ObjectParameter("ID_UgovorStanOtkupShema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_SELECT", mergeOption, iD_UgovorStanOtkupShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_UPDATE(long? ID_UgovorStanOtkupShema, long? ID_UgovorStanOtkup, long? ID_Shema)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupShemaParameter = ID_UgovorStanOtkupShema.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupShema", ID_UgovorStanOtkupShema) :
                new ObjectParameter("ID_UgovorStanOtkupShema", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_UPDATE", iD_UgovorStanOtkupShemaParameter, iD_UgovorStanOtkupParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupShema> USP_UgovorStanOtkupShema_UPDATE(long? ID_UgovorStanOtkupShema, long? ID_UgovorStanOtkup, long? ID_Shema, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupShema).Assembly);
    
            var iD_UgovorStanOtkupShemaParameter = ID_UgovorStanOtkupShema.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupShema", ID_UgovorStanOtkupShema) :
                new ObjectParameter("ID_UgovorStanOtkupShema", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ShemaParameter = ID_Shema.HasValue ?
                new ObjectParameter("ID_Shema", ID_Shema) :
                new ObjectParameter("ID_Shema", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupShema>("USP_UgovorStanOtkupShema_UPDATE", mergeOption, iD_UgovorStanOtkupShemaParameter, iD_UgovorStanOtkupParameter, iD_ShemaParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupTrosak_DELETE(long? ID_UgovorStanOtkupTrosak)
        {
            var iD_UgovorStanOtkupTrosakParameter = ID_UgovorStanOtkupTrosak.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupTrosak", ID_UgovorStanOtkupTrosak) :
                new ObjectParameter("ID_UgovorStanOtkupTrosak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupTrosak_DELETE", iD_UgovorStanOtkupTrosakParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_INSERT(long? ID_UgovorStanOtkup, DateTime? Datum, int? Godina, decimal? Iznos, int? BrojUgovor, int? BrojIzvod, int? BrojStavka, string IDValuta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojStavkaParameter = BrojStavka.HasValue ?
                new ObjectParameter("BrojStavka", BrojStavka) :
                new ObjectParameter("BrojStavka", typeof(int));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_INSERT", iD_UgovorStanOtkupParameter, datumParameter, godinaParameter, iznosParameter, brojUgovorParameter, brojIzvodParameter, brojStavkaParameter, iDValutaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_INSERT(long? ID_UgovorStanOtkup, DateTime? Datum, int? Godina, decimal? Iznos, int? BrojUgovor, int? BrojIzvod, int? BrojStavka, string IDValuta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojStavkaParameter = BrojStavka.HasValue ?
                new ObjectParameter("BrojStavka", BrojStavka) :
                new ObjectParameter("BrojStavka", typeof(int));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_INSERT", mergeOption, iD_UgovorStanOtkupParameter, datumParameter, godinaParameter, iznosParameter, brojUgovorParameter, brojIzvodParameter, brojStavkaParameter, iDValutaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_SELECT(long? ID_UgovorStanOtkupTrosak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupTrosakParameter = ID_UgovorStanOtkupTrosak.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupTrosak", ID_UgovorStanOtkupTrosak) :
                new ObjectParameter("ID_UgovorStanOtkupTrosak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_SELECT", iD_UgovorStanOtkupTrosakParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_SELECT(long? ID_UgovorStanOtkupTrosak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupTrosakParameter = ID_UgovorStanOtkupTrosak.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupTrosak", ID_UgovorStanOtkupTrosak) :
                new ObjectParameter("ID_UgovorStanOtkupTrosak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_SELECT", mergeOption, iD_UgovorStanOtkupTrosakParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_UPDATE(long? ID_UgovorStanOtkupTrosak, long? ID_UgovorStanOtkup, DateTime? Datum, int? Godina, decimal? Iznos, int? BrojUgovor, int? BrojIzvod, int? BrojStavka, string IDValuta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupTrosakParameter = ID_UgovorStanOtkupTrosak.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupTrosak", ID_UgovorStanOtkupTrosak) :
                new ObjectParameter("ID_UgovorStanOtkupTrosak", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojStavkaParameter = BrojStavka.HasValue ?
                new ObjectParameter("BrojStavka", BrojStavka) :
                new ObjectParameter("BrojStavka", typeof(int));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_UPDATE", iD_UgovorStanOtkupTrosakParameter, iD_UgovorStanOtkupParameter, datumParameter, godinaParameter, iznosParameter, brojUgovorParameter, brojIzvodParameter, brojStavkaParameter, iDValutaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupTrosak> USP_UgovorStanOtkupTrosak_UPDATE(long? ID_UgovorStanOtkupTrosak, long? ID_UgovorStanOtkup, DateTime? Datum, int? Godina, decimal? Iznos, int? BrojUgovor, int? BrojIzvod, int? BrojStavka, string IDValuta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupTrosak).Assembly);
    
            var iD_UgovorStanOtkupTrosakParameter = ID_UgovorStanOtkupTrosak.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupTrosak", ID_UgovorStanOtkupTrosak) :
                new ObjectParameter("ID_UgovorStanOtkupTrosak", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojIzvodParameter = BrojIzvod.HasValue ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(int));
    
            var brojStavkaParameter = BrojStavka.HasValue ?
                new ObjectParameter("BrojStavka", BrojStavka) :
                new ObjectParameter("BrojStavka", typeof(int));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupTrosak>("USP_UgovorStanOtkupTrosak_UPDATE", mergeOption, iD_UgovorStanOtkupTrosakParameter, iD_UgovorStanOtkupParameter, datumParameter, godinaParameter, iznosParameter, brojUgovorParameter, brojIzvodParameter, brojStavkaParameter, iDValutaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter);
        }
    
        public virtual ObjectResult<int?> USP_Ulica_DELETE(long? ID_Ulica)
        {
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Ulica_DELETE", iD_UlicaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_INSERT(long? ID_Mjesto, long? ID_MjestoPosta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivStari, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, bool? AdresaBezUlice, long? ID_UlicaTip, string PathSlika, string PathPlan, string PathSlika2, long? ID_Zupanija, long? ID_Opcina, long? ID_MjestoOpcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivStariParameter = NazivStari != null ?
                new ObjectParameter("NazivStari", NazivStari) :
                new ObjectParameter("NazivStari", typeof(string));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var adresaBezUliceParameter = AdresaBezUlice.HasValue ?
                new ObjectParameter("AdresaBezUlice", AdresaBezUlice) :
                new ObjectParameter("AdresaBezUlice", typeof(bool));
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_INSERT", iD_MjestoParameter, iD_MjestoPostaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivStariParameter, aktivnoParameter, datumOdParameter, datumDoParameter, adresaBezUliceParameter, iD_UlicaTipParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_ZupanijaParameter, iD_OpcinaParameter, iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_INSERT(long? ID_Mjesto, long? ID_MjestoPosta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivStari, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, bool? AdresaBezUlice, long? ID_UlicaTip, string PathSlika, string PathPlan, string PathSlika2, long? ID_Zupanija, long? ID_Opcina, long? ID_MjestoOpcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivStariParameter = NazivStari != null ?
                new ObjectParameter("NazivStari", NazivStari) :
                new ObjectParameter("NazivStari", typeof(string));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var adresaBezUliceParameter = AdresaBezUlice.HasValue ?
                new ObjectParameter("AdresaBezUlice", AdresaBezUlice) :
                new ObjectParameter("AdresaBezUlice", typeof(bool));
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_INSERT", mergeOption, iD_MjestoParameter, iD_MjestoPostaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivStariParameter, aktivnoParameter, datumOdParameter, datumDoParameter, adresaBezUliceParameter, iD_UlicaTipParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_ZupanijaParameter, iD_OpcinaParameter, iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_SELECT(long? ID_Ulica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_SELECT", iD_UlicaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_SELECT(long? ID_Ulica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_SELECT", mergeOption, iD_UlicaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_UPDATE(long? ID_Ulica, long? ID_Mjesto, long? ID_MjestoPosta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivStari, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, bool? AdresaBezUlice, long? ID_UlicaTip, string PathSlika, string PathPlan, string PathSlika2, long? ID_Zupanija, long? ID_Opcina, long? ID_MjestoOpcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivStariParameter = NazivStari != null ?
                new ObjectParameter("NazivStari", NazivStari) :
                new ObjectParameter("NazivStari", typeof(string));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var adresaBezUliceParameter = AdresaBezUlice.HasValue ?
                new ObjectParameter("AdresaBezUlice", AdresaBezUlice) :
                new ObjectParameter("AdresaBezUlice", typeof(bool));
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_UPDATE", iD_UlicaParameter, iD_MjestoParameter, iD_MjestoPostaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivStariParameter, aktivnoParameter, datumOdParameter, datumDoParameter, adresaBezUliceParameter, iD_UlicaTipParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_ZupanijaParameter, iD_OpcinaParameter, iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<Ulica> USP_Ulica_UPDATE(long? ID_Ulica, long? ID_Mjesto, long? ID_MjestoPosta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string NazivStari, bool? Aktivno, DateTime? DatumOd, DateTime? DatumDo, bool? AdresaBezUlice, long? ID_UlicaTip, string PathSlika, string PathPlan, string PathSlika2, long? ID_Zupanija, long? ID_Opcina, long? ID_MjestoOpcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Ulica).Assembly);
    
            var iD_UlicaParameter = ID_Ulica.HasValue ?
                new ObjectParameter("ID_Ulica", ID_Ulica) :
                new ObjectParameter("ID_Ulica", typeof(long));
    
            var iD_MjestoParameter = ID_Mjesto.HasValue ?
                new ObjectParameter("ID_Mjesto", ID_Mjesto) :
                new ObjectParameter("ID_Mjesto", typeof(long));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var nazivStariParameter = NazivStari != null ?
                new ObjectParameter("NazivStari", NazivStari) :
                new ObjectParameter("NazivStari", typeof(string));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var adresaBezUliceParameter = AdresaBezUlice.HasValue ?
                new ObjectParameter("AdresaBezUlice", AdresaBezUlice) :
                new ObjectParameter("AdresaBezUlice", typeof(bool));
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var pathSlikaParameter = PathSlika != null ?
                new ObjectParameter("PathSlika", PathSlika) :
                new ObjectParameter("PathSlika", typeof(string));
    
            var pathPlanParameter = PathPlan != null ?
                new ObjectParameter("PathPlan", PathPlan) :
                new ObjectParameter("PathPlan", typeof(string));
    
            var pathSlika2Parameter = PathSlika2 != null ?
                new ObjectParameter("PathSlika2", PathSlika2) :
                new ObjectParameter("PathSlika2", typeof(string));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var iD_MjestoOpcinaParameter = ID_MjestoOpcina.HasValue ?
                new ObjectParameter("ID_MjestoOpcina", ID_MjestoOpcina) :
                new ObjectParameter("ID_MjestoOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ulica>("USP_Ulica_UPDATE", mergeOption, iD_UlicaParameter, iD_MjestoParameter, iD_MjestoPostaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, nazivStariParameter, aktivnoParameter, datumOdParameter, datumDoParameter, adresaBezUliceParameter, iD_UlicaTipParameter, pathSlikaParameter, pathPlanParameter, pathSlika2Parameter, iD_ZupanijaParameter, iD_OpcinaParameter, iD_MjestoOpcinaParameter);
        }
    
        public virtual ObjectResult<int?> USP_UlicaTip_DELETE(long? ID_UlicaTip)
        {
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UlicaTip_DELETE", iD_UlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsUlicaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsUlicaTipParameter = StsUlicaTip != null ?
                new ObjectParameter("StsUlicaTip", StsUlicaTip) :
                new ObjectParameter("StsUlicaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsUlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsUlicaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsUlicaTipParameter = StsUlicaTip != null ?
                new ObjectParameter("StsUlicaTip", StsUlicaTip) :
                new ObjectParameter("StsUlicaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsUlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_SELECT(long? ID_UlicaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_SELECT", iD_UlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_SELECT(long? ID_UlicaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_SELECT", mergeOption, iD_UlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_UPDATE(long? ID_UlicaTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsUlicaTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsUlicaTipParameter = StsUlicaTip != null ?
                new ObjectParameter("StsUlicaTip", StsUlicaTip) :
                new ObjectParameter("StsUlicaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_UPDATE", iD_UlicaTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsUlicaTipParameter);
        }
    
        public virtual ObjectResult<UlicaTip> USP_UlicaTip_UPDATE(long? ID_UlicaTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsUlicaTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UlicaTip).Assembly);
    
            var iD_UlicaTipParameter = ID_UlicaTip.HasValue ?
                new ObjectParameter("ID_UlicaTip", ID_UlicaTip) :
                new ObjectParameter("ID_UlicaTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsUlicaTipParameter = StsUlicaTip != null ?
                new ObjectParameter("StsUlicaTip", StsUlicaTip) :
                new ObjectParameter("StsUlicaTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlicaTip>("USP_UlicaTip_UPDATE", mergeOption, iD_UlicaTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsUlicaTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_Usluga_DELETE(long? ID_Usluga)
        {
            var iD_UslugaParameter = ID_Usluga.HasValue ?
                new ObjectParameter("ID_Usluga", ID_Usluga) :
                new ObjectParameter("ID_Usluga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Usluga_DELETE", iD_UslugaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_SELECT(long? ID_Usluga)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_UslugaParameter = ID_Usluga.HasValue ?
                new ObjectParameter("ID_Usluga", ID_Usluga) :
                new ObjectParameter("ID_Usluga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_SELECT", iD_UslugaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_SELECT(long? ID_Usluga, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_UslugaParameter = ID_Usluga.HasValue ?
                new ObjectParameter("ID_Usluga", ID_Usluga) :
                new ObjectParameter("ID_Usluga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_SELECT", mergeOption, iD_UslugaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_UPDATE(long? ID_Usluga, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_UslugaParameter = ID_Usluga.HasValue ?
                new ObjectParameter("ID_Usluga", ID_Usluga) :
                new ObjectParameter("ID_Usluga", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_UPDATE", iD_UslugaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<Usluga> USP_Usluga_UPDATE(long? ID_Usluga, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Usluga).Assembly);
    
            var iD_UslugaParameter = ID_Usluga.HasValue ?
                new ObjectParameter("ID_Usluga", ID_Usluga) :
                new ObjectParameter("ID_Usluga", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluga>("USP_Usluga_UPDATE", mergeOption, iD_UslugaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Valuta_DELETE(string IDValuta)
        {
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Valuta_DELETE", iDValutaParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_INSERT(string IDValuta, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_INSERT", iDValutaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_INSERT(string IDValuta, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_INSERT", mergeOption, iDValutaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_SELECT(string IDValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_SELECT", iDValutaParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_SELECT(string IDValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_SELECT", mergeOption, iDValutaParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_UPDATE(string IDValuta, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_UPDATE", iDValutaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<Valuta> USP_Valuta_UPDATE(string IDValuta, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Valuta).Assembly);
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Valuta>("USP_Valuta_UPDATE", mergeOption, iDValutaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<int?> USP_ValutaRadna_DELETE(long? ID_Valuta)
        {
            var iD_ValutaParameter = ID_Valuta.HasValue ?
                new ObjectParameter("ID_Valuta", ID_Valuta) :
                new ObjectParameter("ID_Valuta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ValutaRadna_DELETE", iD_ValutaParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_SELECT(long? ID_Valuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var iD_ValutaParameter = ID_Valuta.HasValue ?
                new ObjectParameter("ID_Valuta", ID_Valuta) :
                new ObjectParameter("ID_Valuta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_SELECT", iD_ValutaParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_SELECT(long? ID_Valuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var iD_ValutaParameter = ID_Valuta.HasValue ?
                new ObjectParameter("ID_Valuta", ID_Valuta) :
                new ObjectParameter("ID_Valuta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_SELECT", mergeOption, iD_ValutaParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_UPDATE(long? ID_Valuta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var iD_ValutaParameter = ID_Valuta.HasValue ?
                new ObjectParameter("ID_Valuta", ID_Valuta) :
                new ObjectParameter("ID_Valuta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_UPDATE", iD_ValutaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<ValutaRadna> USP_ValutaRadna_UPDATE(long? ID_Valuta, string Oznaka, string Naziv, string NazivKr, string Kratica, string Kratica2, int? Kod, int? Decimale, string NazivDio, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ValutaRadna).Assembly);
    
            var iD_ValutaParameter = ID_Valuta.HasValue ?
                new ObjectParameter("ID_Valuta", ID_Valuta) :
                new ObjectParameter("ID_Valuta", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var kratica2Parameter = Kratica2 != null ?
                new ObjectParameter("Kratica2", Kratica2) :
                new ObjectParameter("Kratica2", typeof(string));
    
            var kodParameter = Kod.HasValue ?
                new ObjectParameter("Kod", Kod) :
                new ObjectParameter("Kod", typeof(int));
    
            var decimaleParameter = Decimale.HasValue ?
                new ObjectParameter("Decimale", Decimale) :
                new ObjectParameter("Decimale", typeof(int));
    
            var nazivDioParameter = NazivDio != null ?
                new ObjectParameter("NazivDio", NazivDio) :
                new ObjectParameter("NazivDio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValutaRadna>("USP_ValutaRadna_UPDATE", mergeOption, iD_ValutaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, kratica2Parameter, kodParameter, decimaleParameter, nazivDioParameter);
        }
    
        public virtual ObjectResult<int?> USP_Vozilo_DELETE(long? ID_Vozilo)
        {
            var iD_VoziloParameter = ID_Vozilo.HasValue ?
                new ObjectParameter("ID_Vozilo", ID_Vozilo) :
                new ObjectParameter("ID_Vozilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Vozilo_DELETE", iD_VoziloParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string Registracija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var registracijaParameter = Registracija != null ?
                new ObjectParameter("Registracija", Registracija) :
                new ObjectParameter("Registracija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, registracijaParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string Registracija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var registracijaParameter = Registracija != null ?
                new ObjectParameter("Registracija", Registracija) :
                new ObjectParameter("Registracija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, registracijaParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_SELECT(long? ID_Vozilo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_VoziloParameter = ID_Vozilo.HasValue ?
                new ObjectParameter("ID_Vozilo", ID_Vozilo) :
                new ObjectParameter("ID_Vozilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_SELECT", iD_VoziloParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_SELECT(long? ID_Vozilo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_VoziloParameter = ID_Vozilo.HasValue ?
                new ObjectParameter("ID_Vozilo", ID_Vozilo) :
                new ObjectParameter("ID_Vozilo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_SELECT", mergeOption, iD_VoziloParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_UPDATE(long? ID_Vozilo, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string Registracija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_VoziloParameter = ID_Vozilo.HasValue ?
                new ObjectParameter("ID_Vozilo", ID_Vozilo) :
                new ObjectParameter("ID_Vozilo", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var registracijaParameter = Registracija != null ?
                new ObjectParameter("Registracija", Registracija) :
                new ObjectParameter("Registracija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_UPDATE", iD_VoziloParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, registracijaParameter);
        }
    
        public virtual ObjectResult<Vozilo> USP_Vozilo_UPDATE(long? ID_Vozilo, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, string Registracija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Vozilo).Assembly);
    
            var iD_VoziloParameter = ID_Vozilo.HasValue ?
                new ObjectParameter("ID_Vozilo", ID_Vozilo) :
                new ObjectParameter("ID_Vozilo", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var registracijaParameter = Registracija != null ?
                new ObjectParameter("Registracija", Registracija) :
                new ObjectParameter("Registracija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("USP_Vozilo_UPDATE", mergeOption, iD_VoziloParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, registracijaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Zapis_DELETE(long? ID_Zapis)
        {
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Zapis_DELETE", iD_ZapisParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_INSERT(int? IDZapisTablica, long? IDZapis, DateTime? VrijemeUpis, string UrudzbeniBroj, string Predmet, long? ID_Subjekt, long? ID_SubjektUpis, long? ID_Temeljnica, string Broj, DateTime? Datum, TimeSpan? Vrijeme)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var iDZapisParameter = IDZapis.HasValue ?
                new ObjectParameter("IDZapis", IDZapis) :
                new ObjectParameter("IDZapis", typeof(long));
    
            var vrijemeUpisParameter = VrijemeUpis.HasValue ?
                new ObjectParameter("VrijemeUpis", VrijemeUpis) :
                new ObjectParameter("VrijemeUpis", typeof(System.DateTime));
    
            var urudzbeniBrojParameter = UrudzbeniBroj != null ?
                new ObjectParameter("UrudzbeniBroj", UrudzbeniBroj) :
                new ObjectParameter("UrudzbeniBroj", typeof(string));
    
            var predmetParameter = Predmet != null ?
                new ObjectParameter("Predmet", Predmet) :
                new ObjectParameter("Predmet", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektUpisParameter = ID_SubjektUpis.HasValue ?
                new ObjectParameter("ID_SubjektUpis", ID_SubjektUpis) :
                new ObjectParameter("ID_SubjektUpis", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var vrijemeParameter = Vrijeme.HasValue ?
                new ObjectParameter("Vrijeme", Vrijeme) :
                new ObjectParameter("Vrijeme", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_INSERT", iDZapisTablicaParameter, iDZapisParameter, vrijemeUpisParameter, urudzbeniBrojParameter, predmetParameter, iD_SubjektParameter, iD_SubjektUpisParameter, iD_TemeljnicaParameter, brojParameter, datumParameter, vrijemeParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_INSERT(int? IDZapisTablica, long? IDZapis, DateTime? VrijemeUpis, string UrudzbeniBroj, string Predmet, long? ID_Subjekt, long? ID_SubjektUpis, long? ID_Temeljnica, string Broj, DateTime? Datum, TimeSpan? Vrijeme, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var iDZapisParameter = IDZapis.HasValue ?
                new ObjectParameter("IDZapis", IDZapis) :
                new ObjectParameter("IDZapis", typeof(long));
    
            var vrijemeUpisParameter = VrijemeUpis.HasValue ?
                new ObjectParameter("VrijemeUpis", VrijemeUpis) :
                new ObjectParameter("VrijemeUpis", typeof(System.DateTime));
    
            var urudzbeniBrojParameter = UrudzbeniBroj != null ?
                new ObjectParameter("UrudzbeniBroj", UrudzbeniBroj) :
                new ObjectParameter("UrudzbeniBroj", typeof(string));
    
            var predmetParameter = Predmet != null ?
                new ObjectParameter("Predmet", Predmet) :
                new ObjectParameter("Predmet", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektUpisParameter = ID_SubjektUpis.HasValue ?
                new ObjectParameter("ID_SubjektUpis", ID_SubjektUpis) :
                new ObjectParameter("ID_SubjektUpis", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var vrijemeParameter = Vrijeme.HasValue ?
                new ObjectParameter("Vrijeme", Vrijeme) :
                new ObjectParameter("Vrijeme", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_INSERT", mergeOption, iDZapisTablicaParameter, iDZapisParameter, vrijemeUpisParameter, urudzbeniBrojParameter, predmetParameter, iD_SubjektParameter, iD_SubjektUpisParameter, iD_TemeljnicaParameter, brojParameter, datumParameter, vrijemeParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_SELECT(long? ID_Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_SELECT", iD_ZapisParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_SELECT(long? ID_Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_SELECT", mergeOption, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_UPDATE(long? ID_Zapis, int? IDZapisTablica, long? IDZapis, DateTime? VrijemeUpis, string UrudzbeniBroj, string Predmet, long? ID_Subjekt, long? ID_SubjektUpis, long? ID_Temeljnica, string Broj, DateTime? Datum, TimeSpan? Vrijeme)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var iDZapisParameter = IDZapis.HasValue ?
                new ObjectParameter("IDZapis", IDZapis) :
                new ObjectParameter("IDZapis", typeof(long));
    
            var vrijemeUpisParameter = VrijemeUpis.HasValue ?
                new ObjectParameter("VrijemeUpis", VrijemeUpis) :
                new ObjectParameter("VrijemeUpis", typeof(System.DateTime));
    
            var urudzbeniBrojParameter = UrudzbeniBroj != null ?
                new ObjectParameter("UrudzbeniBroj", UrudzbeniBroj) :
                new ObjectParameter("UrudzbeniBroj", typeof(string));
    
            var predmetParameter = Predmet != null ?
                new ObjectParameter("Predmet", Predmet) :
                new ObjectParameter("Predmet", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektUpisParameter = ID_SubjektUpis.HasValue ?
                new ObjectParameter("ID_SubjektUpis", ID_SubjektUpis) :
                new ObjectParameter("ID_SubjektUpis", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var vrijemeParameter = Vrijeme.HasValue ?
                new ObjectParameter("Vrijeme", Vrijeme) :
                new ObjectParameter("Vrijeme", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_UPDATE", iD_ZapisParameter, iDZapisTablicaParameter, iDZapisParameter, vrijemeUpisParameter, urudzbeniBrojParameter, predmetParameter, iD_SubjektParameter, iD_SubjektUpisParameter, iD_TemeljnicaParameter, brojParameter, datumParameter, vrijemeParameter);
        }
    
        public virtual ObjectResult<Zapis> USP_Zapis_UPDATE(long? ID_Zapis, int? IDZapisTablica, long? IDZapis, DateTime? VrijemeUpis, string UrudzbeniBroj, string Predmet, long? ID_Subjekt, long? ID_SubjektUpis, long? ID_Temeljnica, string Broj, DateTime? Datum, TimeSpan? Vrijeme, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zapis).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var iDZapisParameter = IDZapis.HasValue ?
                new ObjectParameter("IDZapis", IDZapis) :
                new ObjectParameter("IDZapis", typeof(long));
    
            var vrijemeUpisParameter = VrijemeUpis.HasValue ?
                new ObjectParameter("VrijemeUpis", VrijemeUpis) :
                new ObjectParameter("VrijemeUpis", typeof(System.DateTime));
    
            var urudzbeniBrojParameter = UrudzbeniBroj != null ?
                new ObjectParameter("UrudzbeniBroj", UrudzbeniBroj) :
                new ObjectParameter("UrudzbeniBroj", typeof(string));
    
            var predmetParameter = Predmet != null ?
                new ObjectParameter("Predmet", Predmet) :
                new ObjectParameter("Predmet", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_SubjektUpisParameter = ID_SubjektUpis.HasValue ?
                new ObjectParameter("ID_SubjektUpis", ID_SubjektUpis) :
                new ObjectParameter("ID_SubjektUpis", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var vrijemeParameter = Vrijeme.HasValue ?
                new ObjectParameter("Vrijeme", Vrijeme) :
                new ObjectParameter("Vrijeme", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zapis>("USP_Zapis_UPDATE", mergeOption, iD_ZapisParameter, iDZapisTablicaParameter, iDZapisParameter, vrijemeUpisParameter, urudzbeniBrojParameter, predmetParameter, iD_SubjektParameter, iD_SubjektUpisParameter, iD_TemeljnicaParameter, brojParameter, datumParameter, vrijemeParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisGr_DELETE(long? ID_ZapisGr)
        {
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisGr_DELETE", iD_ZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_SELECT(long? ID_ZapisGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_SELECT", iD_ZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_SELECT(long? ID_ZapisGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_SELECT", mergeOption, iD_ZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_UPDATE(long? ID_ZapisGr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_UPDATE", iD_ZapisGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisGr> USP_ZapisGr_UPDATE(long? ID_ZapisGr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGr>("USP_ZapisGr_UPDATE", mergeOption, iD_ZapisGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisGrZapis_DELETE(long? ID_ZapisGrZapis)
        {
            var iD_ZapisGrZapisParameter = ID_ZapisGrZapis.HasValue ?
                new ObjectParameter("ID_ZapisGrZapis", ID_ZapisGrZapis) :
                new ObjectParameter("ID_ZapisGrZapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisGrZapis_DELETE", iD_ZapisGrZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_INSERT(long? ID_ZapisGr, long? ID_Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_INSERT", iD_ZapisGrParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_INSERT(long? ID_ZapisGr, long? ID_Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_INSERT", mergeOption, iD_ZapisGrParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_SELECT(long? ID_ZapisGrZapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrZapisParameter = ID_ZapisGrZapis.HasValue ?
                new ObjectParameter("ID_ZapisGrZapis", ID_ZapisGrZapis) :
                new ObjectParameter("ID_ZapisGrZapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_SELECT", iD_ZapisGrZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_SELECT(long? ID_ZapisGrZapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrZapisParameter = ID_ZapisGrZapis.HasValue ?
                new ObjectParameter("ID_ZapisGrZapis", ID_ZapisGrZapis) :
                new ObjectParameter("ID_ZapisGrZapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_SELECT", mergeOption, iD_ZapisGrZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_UPDATE(long? ID_ZapisGrZapis, long? ID_ZapisGr, long? ID_Zapis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrZapisParameter = ID_ZapisGrZapis.HasValue ?
                new ObjectParameter("ID_ZapisGrZapis", ID_ZapisGrZapis) :
                new ObjectParameter("ID_ZapisGrZapis", typeof(long));
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_UPDATE", iD_ZapisGrZapisParameter, iD_ZapisGrParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapis> USP_ZapisGrZapis_UPDATE(long? ID_ZapisGrZapis, long? ID_ZapisGr, long? ID_Zapis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapis).Assembly);
    
            var iD_ZapisGrZapisParameter = ID_ZapisGrZapis.HasValue ?
                new ObjectParameter("ID_ZapisGrZapis", ID_ZapisGrZapis) :
                new ObjectParameter("ID_ZapisGrZapis", typeof(long));
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapis>("USP_ZapisGrZapis_UPDATE", mergeOption, iD_ZapisGrZapisParameter, iD_ZapisGrParameter, iD_ZapisParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisGrZapisGr_DELETE(long? ID_ZapisGrZapisGr)
        {
            var iD_ZapisGrZapisGrParameter = ID_ZapisGrZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGrZapisGr", ID_ZapisGrZapisGr) :
                new ObjectParameter("ID_ZapisGrZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisGrZapisGr_DELETE", iD_ZapisGrZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_INSERT(long? ID_ZapisGr, long? ID_ZapisGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisGrNadParameter = ID_ZapisGrNad.HasValue ?
                new ObjectParameter("ID_ZapisGrNad", ID_ZapisGrNad) :
                new ObjectParameter("ID_ZapisGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_INSERT", iD_ZapisGrParameter, iD_ZapisGrNadParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_INSERT(long? ID_ZapisGr, long? ID_ZapisGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisGrNadParameter = ID_ZapisGrNad.HasValue ?
                new ObjectParameter("ID_ZapisGrNad", ID_ZapisGrNad) :
                new ObjectParameter("ID_ZapisGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_INSERT", mergeOption, iD_ZapisGrParameter, iD_ZapisGrNadParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_SELECT(long? ID_ZapisGrZapisGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrZapisGrParameter = ID_ZapisGrZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGrZapisGr", ID_ZapisGrZapisGr) :
                new ObjectParameter("ID_ZapisGrZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_SELECT", iD_ZapisGrZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_SELECT(long? ID_ZapisGrZapisGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrZapisGrParameter = ID_ZapisGrZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGrZapisGr", ID_ZapisGrZapisGr) :
                new ObjectParameter("ID_ZapisGrZapisGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_SELECT", mergeOption, iD_ZapisGrZapisGrParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_UPDATE(long? ID_ZapisGrZapisGr, long? ID_ZapisGr, long? ID_ZapisGrNad)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrZapisGrParameter = ID_ZapisGrZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGrZapisGr", ID_ZapisGrZapisGr) :
                new ObjectParameter("ID_ZapisGrZapisGr", typeof(long));
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisGrNadParameter = ID_ZapisGrNad.HasValue ?
                new ObjectParameter("ID_ZapisGrNad", ID_ZapisGrNad) :
                new ObjectParameter("ID_ZapisGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_UPDATE", iD_ZapisGrZapisGrParameter, iD_ZapisGrParameter, iD_ZapisGrNadParameter);
        }
    
        public virtual ObjectResult<ZapisGrZapisGr> USP_ZapisGrZapisGr_UPDATE(long? ID_ZapisGrZapisGr, long? ID_ZapisGr, long? ID_ZapisGrNad, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisGrZapisGr).Assembly);
    
            var iD_ZapisGrZapisGrParameter = ID_ZapisGrZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGrZapisGr", ID_ZapisGrZapisGr) :
                new ObjectParameter("ID_ZapisGrZapisGr", typeof(long));
    
            var iD_ZapisGrParameter = ID_ZapisGr.HasValue ?
                new ObjectParameter("ID_ZapisGr", ID_ZapisGr) :
                new ObjectParameter("ID_ZapisGr", typeof(long));
    
            var iD_ZapisGrNadParameter = ID_ZapisGrNad.HasValue ?
                new ObjectParameter("ID_ZapisGrNad", ID_ZapisGrNad) :
                new ObjectParameter("ID_ZapisGrNad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisGrZapisGr>("USP_ZapisGrZapisGr_UPDATE", mergeOption, iD_ZapisGrZapisGrParameter, iD_ZapisGrParameter, iD_ZapisGrNadParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisTablica_DELETE(int? IDZapisTablica)
        {
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisTablica_DELETE", iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_INSERT(int? IDZapisTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_INSERT", iDZapisTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_INSERT(int? IDZapisTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_INSERT", mergeOption, iDZapisTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_SELECT(int? IDZapisTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_SELECT", iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_SELECT(int? IDZapisTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_SELECT", mergeOption, iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_UPDATE(int? IDZapisTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_UPDATE", iDZapisTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZapisTablica> USP_ZapisTablica_UPDATE(int? IDZapisTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisTablica).Assembly);
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisTablica>("USP_ZapisTablica_UPDATE", mergeOption, iDZapisTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisVr_DELETE(int? IDZapisVr)
        {
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisVr_DELETE", iDZapisVrParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_INSERT(int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_INSERT", iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_INSERT(int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_INSERT", mergeOption, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_SELECT(int? IDZapisVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_SELECT", iDZapisVrParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_SELECT(int? IDZapisVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_SELECT", mergeOption, iDZapisVrParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_UPDATE(int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_UPDATE", iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZapisVr> USP_ZapisVr_UPDATE(int? IDZapisVr, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVr).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVr>("USP_ZapisVr_UPDATE", mergeOption, iDZapisVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZapisVrTablica_DELETE(int? IDZapisVr, int? IDZapisTablica)
        {
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZapisVrTablica_DELETE", iDZapisVrParameter, iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_INSERT(int? IDZapisVr, int? IDZapisTablica, bool? Odabir, bool? Analitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            var analitikaParameter = Analitika.HasValue ?
                new ObjectParameter("Analitika", Analitika) :
                new ObjectParameter("Analitika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_INSERT", iDZapisVrParameter, iDZapisTablicaParameter, odabirParameter, analitikaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_INSERT(int? IDZapisVr, int? IDZapisTablica, bool? Odabir, bool? Analitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            var analitikaParameter = Analitika.HasValue ?
                new ObjectParameter("Analitika", Analitika) :
                new ObjectParameter("Analitika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_INSERT", mergeOption, iDZapisVrParameter, iDZapisTablicaParameter, odabirParameter, analitikaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_SELECT(int? IDZapisVr, int? IDZapisTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_SELECT", iDZapisVrParameter, iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_SELECT(int? IDZapisVr, int? IDZapisTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_SELECT", mergeOption, iDZapisVrParameter, iDZapisTablicaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_UPDATE(int? IDZapisVr, int? IDZapisTablica, bool? Odabir, bool? Analitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            var analitikaParameter = Analitika.HasValue ?
                new ObjectParameter("Analitika", Analitika) :
                new ObjectParameter("Analitika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_UPDATE", iDZapisVrParameter, iDZapisTablicaParameter, odabirParameter, analitikaParameter);
        }
    
        public virtual ObjectResult<ZapisVrTablica> USP_ZapisVrTablica_UPDATE(int? IDZapisVr, int? IDZapisTablica, bool? Odabir, bool? Analitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZapisVrTablica).Assembly);
    
            var iDZapisVrParameter = IDZapisVr.HasValue ?
                new ObjectParameter("IDZapisVr", IDZapisVr) :
                new ObjectParameter("IDZapisVr", typeof(int));
    
            var iDZapisTablicaParameter = IDZapisTablica.HasValue ?
                new ObjectParameter("IDZapisTablica", IDZapisTablica) :
                new ObjectParameter("IDZapisTablica", typeof(int));
    
            var odabirParameter = Odabir.HasValue ?
                new ObjectParameter("Odabir", Odabir) :
                new ObjectParameter("Odabir", typeof(bool));
    
            var analitikaParameter = Analitika.HasValue ?
                new ObjectParameter("Analitika", Analitika) :
                new ObjectParameter("Analitika", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZapisVrTablica>("USP_ZapisVrTablica_UPDATE", mergeOption, iDZapisVrParameter, iDZapisTablicaParameter, odabirParameter, analitikaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Zaposlenje_DELETE(long? ID_Zaposlenje)
        {
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Zaposlenje_DELETE", iD_ZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_INSERT(long? ID_Osoba, long? ID_Subjekt, DateTime? DatumOd, DateTime? DatumDo, int? StazGodina, int? StazMjesec, int? StazDan, int? IDMirovinskiStup, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stazGodinaParameter = StazGodina.HasValue ?
                new ObjectParameter("StazGodina", StazGodina) :
                new ObjectParameter("StazGodina", typeof(int));
    
            var stazMjesecParameter = StazMjesec.HasValue ?
                new ObjectParameter("StazMjesec", StazMjesec) :
                new ObjectParameter("StazMjesec", typeof(int));
    
            var stazDanParameter = StazDan.HasValue ?
                new ObjectParameter("StazDan", StazDan) :
                new ObjectParameter("StazDan", typeof(int));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_INSERT", iD_OsobaParameter, iD_SubjektParameter, datumOdParameter, datumDoParameter, stazGodinaParameter, stazMjesecParameter, stazDanParameter, iDMirovinskiStupParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_INSERT(long? ID_Osoba, long? ID_Subjekt, DateTime? DatumOd, DateTime? DatumDo, int? StazGodina, int? StazMjesec, int? StazDan, int? IDMirovinskiStup, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stazGodinaParameter = StazGodina.HasValue ?
                new ObjectParameter("StazGodina", StazGodina) :
                new ObjectParameter("StazGodina", typeof(int));
    
            var stazMjesecParameter = StazMjesec.HasValue ?
                new ObjectParameter("StazMjesec", StazMjesec) :
                new ObjectParameter("StazMjesec", typeof(int));
    
            var stazDanParameter = StazDan.HasValue ?
                new ObjectParameter("StazDan", StazDan) :
                new ObjectParameter("StazDan", typeof(int));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_INSERT", mergeOption, iD_OsobaParameter, iD_SubjektParameter, datumOdParameter, datumDoParameter, stazGodinaParameter, stazMjesecParameter, stazDanParameter, iDMirovinskiStupParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_SELECT(long? ID_Zaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_SELECT", iD_ZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_SELECT(long? ID_Zaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_SELECT", mergeOption, iD_ZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_UPDATE(long? ID_Zaposlenje, long? ID_Osoba, long? ID_Subjekt, DateTime? DatumOd, DateTime? DatumDo, int? StazGodina, int? StazMjesec, int? StazDan, int? IDMirovinskiStup, bool? PrvoZaposlenje)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stazGodinaParameter = StazGodina.HasValue ?
                new ObjectParameter("StazGodina", StazGodina) :
                new ObjectParameter("StazGodina", typeof(int));
    
            var stazMjesecParameter = StazMjesec.HasValue ?
                new ObjectParameter("StazMjesec", StazMjesec) :
                new ObjectParameter("StazMjesec", typeof(int));
    
            var stazDanParameter = StazDan.HasValue ?
                new ObjectParameter("StazDan", StazDan) :
                new ObjectParameter("StazDan", typeof(int));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_UPDATE", iD_ZaposlenjeParameter, iD_OsobaParameter, iD_SubjektParameter, datumOdParameter, datumDoParameter, stazGodinaParameter, stazMjesecParameter, stazDanParameter, iDMirovinskiStupParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<Zaposlenje> USP_Zaposlenje_UPDATE(long? ID_Zaposlenje, long? ID_Osoba, long? ID_Subjekt, DateTime? DatumOd, DateTime? DatumDo, int? StazGodina, int? StazMjesec, int? StazDan, int? IDMirovinskiStup, bool? PrvoZaposlenje, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zaposlenje).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OsobaParameter = ID_Osoba.HasValue ?
                new ObjectParameter("ID_Osoba", ID_Osoba) :
                new ObjectParameter("ID_Osoba", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var stazGodinaParameter = StazGodina.HasValue ?
                new ObjectParameter("StazGodina", StazGodina) :
                new ObjectParameter("StazGodina", typeof(int));
    
            var stazMjesecParameter = StazMjesec.HasValue ?
                new ObjectParameter("StazMjesec", StazMjesec) :
                new ObjectParameter("StazMjesec", typeof(int));
    
            var stazDanParameter = StazDan.HasValue ?
                new ObjectParameter("StazDan", StazDan) :
                new ObjectParameter("StazDan", typeof(int));
    
            var iDMirovinskiStupParameter = IDMirovinskiStup.HasValue ?
                new ObjectParameter("IDMirovinskiStup", IDMirovinskiStup) :
                new ObjectParameter("IDMirovinskiStup", typeof(int));
    
            var prvoZaposlenjeParameter = PrvoZaposlenje.HasValue ?
                new ObjectParameter("PrvoZaposlenje", PrvoZaposlenje) :
                new ObjectParameter("PrvoZaposlenje", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenje>("USP_Zaposlenje_UPDATE", mergeOption, iD_ZaposlenjeParameter, iD_OsobaParameter, iD_SubjektParameter, datumOdParameter, datumDoParameter, stazGodinaParameter, stazMjesecParameter, stazDanParameter, iDMirovinskiStupParameter, prvoZaposlenjeParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZaposlenjeOpcina_DELETE(long? ID_ZaposlenjeOpcina)
        {
            var iD_ZaposlenjeOpcinaParameter = ID_ZaposlenjeOpcina.HasValue ?
                new ObjectParameter("ID_ZaposlenjeOpcina", ID_ZaposlenjeOpcina) :
                new ObjectParameter("ID_ZaposlenjeOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZaposlenjeOpcina_DELETE", iD_ZaposlenjeOpcinaParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_INSERT(long? ID_Zaposlenje, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_INSERT", iD_ZaposlenjeParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_INSERT(long? ID_Zaposlenje, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_INSERT", mergeOption, iD_ZaposlenjeParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_SELECT(long? ID_ZaposlenjeOpcina)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeOpcinaParameter = ID_ZaposlenjeOpcina.HasValue ?
                new ObjectParameter("ID_ZaposlenjeOpcina", ID_ZaposlenjeOpcina) :
                new ObjectParameter("ID_ZaposlenjeOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_SELECT", iD_ZaposlenjeOpcinaParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_SELECT(long? ID_ZaposlenjeOpcina, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeOpcinaParameter = ID_ZaposlenjeOpcina.HasValue ?
                new ObjectParameter("ID_ZaposlenjeOpcina", ID_ZaposlenjeOpcina) :
                new ObjectParameter("ID_ZaposlenjeOpcina", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_SELECT", mergeOption, iD_ZaposlenjeOpcinaParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_UPDATE(long? ID_ZaposlenjeOpcina, long? ID_Zaposlenje, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeOpcinaParameter = ID_ZaposlenjeOpcina.HasValue ?
                new ObjectParameter("ID_ZaposlenjeOpcina", ID_ZaposlenjeOpcina) :
                new ObjectParameter("ID_ZaposlenjeOpcina", typeof(long));
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_UPDATE", iD_ZaposlenjeOpcinaParameter, iD_ZaposlenjeParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeOpcina> USP_ZaposlenjeOpcina_UPDATE(long? ID_ZaposlenjeOpcina, long? ID_Zaposlenje, long? ID_Opcina, DateTime? DatumOd, DateTime? DatumDo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeOpcina).Assembly);
    
            var iD_ZaposlenjeOpcinaParameter = ID_ZaposlenjeOpcina.HasValue ?
                new ObjectParameter("ID_ZaposlenjeOpcina", ID_ZaposlenjeOpcina) :
                new ObjectParameter("ID_ZaposlenjeOpcina", typeof(long));
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_OpcinaParameter = ID_Opcina.HasValue ?
                new ObjectParameter("ID_Opcina", ID_Opcina) :
                new ObjectParameter("ID_Opcina", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeOpcina>("USP_ZaposlenjeOpcina_UPDATE", mergeOption, iD_ZaposlenjeOpcinaParameter, iD_ZaposlenjeParameter, iD_OpcinaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZaposlenjeRadnoMjesto_DELETE(long? ID_ZaposlenjeRadnoMjesto)
        {
            var iD_ZaposlenjeRadnoMjestoParameter = ID_ZaposlenjeRadnoMjesto.HasValue ?
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", ID_ZaposlenjeRadnoMjesto) :
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZaposlenjeRadnoMjesto_DELETE", iD_ZaposlenjeRadnoMjestoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_INSERT(long? ID_Zaposlenje, long? ID_RadnoMjesto, DateTime? DatumOd, DateTime? DatumDo, long? ID_StrucnaSprema, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_INSERT", iD_ZaposlenjeParameter, iD_RadnoMjestoParameter, datumOdParameter, datumDoParameter, iD_StrucnaSpremaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_INSERT(long? ID_Zaposlenje, long? ID_RadnoMjesto, DateTime? DatumOd, DateTime? DatumDo, long? ID_StrucnaSprema, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_INSERT", mergeOption, iD_ZaposlenjeParameter, iD_RadnoMjestoParameter, datumOdParameter, datumDoParameter, iD_StrucnaSpremaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_SELECT(long? ID_ZaposlenjeRadnoMjesto)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeRadnoMjestoParameter = ID_ZaposlenjeRadnoMjesto.HasValue ?
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", ID_ZaposlenjeRadnoMjesto) :
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_SELECT", iD_ZaposlenjeRadnoMjestoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_SELECT(long? ID_ZaposlenjeRadnoMjesto, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeRadnoMjestoParameter = ID_ZaposlenjeRadnoMjesto.HasValue ?
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", ID_ZaposlenjeRadnoMjesto) :
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_SELECT", mergeOption, iD_ZaposlenjeRadnoMjestoParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_UPDATE(long? ID_ZaposlenjeRadnoMjesto, long? ID_Zaposlenje, long? ID_RadnoMjesto, DateTime? DatumOd, DateTime? DatumDo, long? ID_StrucnaSprema, decimal? Koeficijent)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeRadnoMjestoParameter = ID_ZaposlenjeRadnoMjesto.HasValue ?
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", ID_ZaposlenjeRadnoMjesto) :
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", typeof(long));
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_UPDATE", iD_ZaposlenjeRadnoMjestoParameter, iD_ZaposlenjeParameter, iD_RadnoMjestoParameter, datumOdParameter, datumDoParameter, iD_StrucnaSpremaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<ZaposlenjeRadnoMjesto> USP_ZaposlenjeRadnoMjesto_UPDATE(long? ID_ZaposlenjeRadnoMjesto, long? ID_Zaposlenje, long? ID_RadnoMjesto, DateTime? DatumOd, DateTime? DatumDo, long? ID_StrucnaSprema, decimal? Koeficijent, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZaposlenjeRadnoMjesto).Assembly);
    
            var iD_ZaposlenjeRadnoMjestoParameter = ID_ZaposlenjeRadnoMjesto.HasValue ?
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", ID_ZaposlenjeRadnoMjesto) :
                new ObjectParameter("ID_ZaposlenjeRadnoMjesto", typeof(long));
    
            var iD_ZaposlenjeParameter = ID_Zaposlenje.HasValue ?
                new ObjectParameter("ID_Zaposlenje", ID_Zaposlenje) :
                new ObjectParameter("ID_Zaposlenje", typeof(long));
    
            var iD_RadnoMjestoParameter = ID_RadnoMjesto.HasValue ?
                new ObjectParameter("ID_RadnoMjesto", ID_RadnoMjesto) :
                new ObjectParameter("ID_RadnoMjesto", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var iD_StrucnaSpremaParameter = ID_StrucnaSprema.HasValue ?
                new ObjectParameter("ID_StrucnaSprema", ID_StrucnaSprema) :
                new ObjectParameter("ID_StrucnaSprema", typeof(long));
    
            var koeficijentParameter = Koeficijent.HasValue ?
                new ObjectParameter("Koeficijent", Koeficijent) :
                new ObjectParameter("Koeficijent", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaposlenjeRadnoMjesto>("USP_ZaposlenjeRadnoMjesto_UPDATE", mergeOption, iD_ZaposlenjeRadnoMjestoParameter, iD_ZaposlenjeParameter, iD_RadnoMjestoParameter, datumOdParameter, datumDoParameter, iD_StrucnaSpremaParameter, koeficijentParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZbrojniNalog_DELETE(long? ID_ZbrojniNalog)
        {
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZbrojniNalog_DELETE", iD_ZbrojniNalogParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_INSERT(long? ID_Zapis, int? IDZbrojniNalogVerzija, DateTime? DatumPredaje, DateTime? DatumValuta, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumPredajeParameter = DatumPredaje.HasValue ?
                new ObjectParameter("DatumPredaje", DatumPredaje) :
                new ObjectParameter("DatumPredaje", typeof(System.DateTime));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_INSERT", iD_ZapisParameter, iDZbrojniNalogVerzijaParameter, datumPredajeParameter, datumValutaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_INSERT(long? ID_Zapis, int? IDZbrojniNalogVerzija, DateTime? DatumPredaje, DateTime? DatumValuta, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumPredajeParameter = DatumPredaje.HasValue ?
                new ObjectParameter("DatumPredaje", DatumPredaje) :
                new ObjectParameter("DatumPredaje", typeof(System.DateTime));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_INSERT", mergeOption, iD_ZapisParameter, iDZbrojniNalogVerzijaParameter, datumPredajeParameter, datumValutaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_SELECT(long? ID_ZbrojniNalog)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_SELECT", iD_ZbrojniNalogParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_SELECT(long? ID_ZbrojniNalog, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_SELECT", mergeOption, iD_ZbrojniNalogParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_UPDATE(long? ID_ZbrojniNalog, long? ID_Zapis, int? IDZbrojniNalogVerzija, DateTime? DatumPredaje, DateTime? DatumValuta, string DatotekaNaziv, string Datoteka)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumPredajeParameter = DatumPredaje.HasValue ?
                new ObjectParameter("DatumPredaje", DatumPredaje) :
                new ObjectParameter("DatumPredaje", typeof(System.DateTime));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_UPDATE", iD_ZbrojniNalogParameter, iD_ZapisParameter, iDZbrojniNalogVerzijaParameter, datumPredajeParameter, datumValutaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog> USP_ZbrojniNalog_UPDATE(long? ID_ZbrojniNalog, long? ID_Zapis, int? IDZbrojniNalogVerzija, DateTime? DatumPredaje, DateTime? DatumValuta, string DatotekaNaziv, string Datoteka, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumPredajeParameter = DatumPredaje.HasValue ?
                new ObjectParameter("DatumPredaje", DatumPredaje) :
                new ObjectParameter("DatumPredaje", typeof(System.DateTime));
    
            var datumValutaParameter = DatumValuta.HasValue ?
                new ObjectParameter("DatumValuta", DatumValuta) :
                new ObjectParameter("DatumValuta", typeof(System.DateTime));
    
            var datotekaNazivParameter = DatotekaNaziv != null ?
                new ObjectParameter("DatotekaNaziv", DatotekaNaziv) :
                new ObjectParameter("DatotekaNaziv", typeof(string));
    
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog>("USP_ZbrojniNalog_UPDATE", mergeOption, iD_ZbrojniNalogParameter, iD_ZapisParameter, iDZbrojniNalogVerzijaParameter, datumPredajeParameter, datumValutaParameter, datotekaNazivParameter, datotekaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZbrojniNalog2013A_DELETE(long? ID_ZbrojniNalog2013A)
        {
            var iD_ZbrojniNalog2013AParameter = ID_ZbrojniNalog2013A.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog2013A", ID_ZbrojniNalog2013A) :
                new ObjectParameter("ID_ZbrojniNalog2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZbrojniNalog2013A_DELETE", iD_ZbrojniNalog2013AParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_INSERT(long? ID_ZbrojniNalog, int? IDHUBDokumentIzvor2013A, int? IDHUBNalogVrsta2013A, string IDValutaPlacanje, string IDValutaNaknada, DateTime? DatumIzvrsenja, string RacunPlatitelj, string RacunNaknada, bool? Predan, bool? Izvrsen)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaNaknadaParameter = IDValutaNaknada != null ?
                new ObjectParameter("IDValutaNaknada", IDValutaNaknada) :
                new ObjectParameter("IDValutaNaknada", typeof(string));
    
            var datumIzvrsenjaParameter = DatumIzvrsenja.HasValue ?
                new ObjectParameter("DatumIzvrsenja", DatumIzvrsenja) :
                new ObjectParameter("DatumIzvrsenja", typeof(System.DateTime));
    
            var racunPlatiteljParameter = RacunPlatitelj != null ?
                new ObjectParameter("RacunPlatitelj", RacunPlatitelj) :
                new ObjectParameter("RacunPlatitelj", typeof(string));
    
            var racunNaknadaParameter = RacunNaknada != null ?
                new ObjectParameter("RacunNaknada", RacunNaknada) :
                new ObjectParameter("RacunNaknada", typeof(string));
    
            var predanParameter = Predan.HasValue ?
                new ObjectParameter("Predan", Predan) :
                new ObjectParameter("Predan", typeof(bool));
    
            var izvrsenParameter = Izvrsen.HasValue ?
                new ObjectParameter("Izvrsen", Izvrsen) :
                new ObjectParameter("Izvrsen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_INSERT", iD_ZbrojniNalogParameter, iDHUBDokumentIzvor2013AParameter, iDHUBNalogVrsta2013AParameter, iDValutaPlacanjeParameter, iDValutaNaknadaParameter, datumIzvrsenjaParameter, racunPlatiteljParameter, racunNaknadaParameter, predanParameter, izvrsenParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_INSERT(long? ID_ZbrojniNalog, int? IDHUBDokumentIzvor2013A, int? IDHUBNalogVrsta2013A, string IDValutaPlacanje, string IDValutaNaknada, DateTime? DatumIzvrsenja, string RacunPlatitelj, string RacunNaknada, bool? Predan, bool? Izvrsen, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaNaknadaParameter = IDValutaNaknada != null ?
                new ObjectParameter("IDValutaNaknada", IDValutaNaknada) :
                new ObjectParameter("IDValutaNaknada", typeof(string));
    
            var datumIzvrsenjaParameter = DatumIzvrsenja.HasValue ?
                new ObjectParameter("DatumIzvrsenja", DatumIzvrsenja) :
                new ObjectParameter("DatumIzvrsenja", typeof(System.DateTime));
    
            var racunPlatiteljParameter = RacunPlatitelj != null ?
                new ObjectParameter("RacunPlatitelj", RacunPlatitelj) :
                new ObjectParameter("RacunPlatitelj", typeof(string));
    
            var racunNaknadaParameter = RacunNaknada != null ?
                new ObjectParameter("RacunNaknada", RacunNaknada) :
                new ObjectParameter("RacunNaknada", typeof(string));
    
            var predanParameter = Predan.HasValue ?
                new ObjectParameter("Predan", Predan) :
                new ObjectParameter("Predan", typeof(bool));
    
            var izvrsenParameter = Izvrsen.HasValue ?
                new ObjectParameter("Izvrsen", Izvrsen) :
                new ObjectParameter("Izvrsen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_INSERT", mergeOption, iD_ZbrojniNalogParameter, iDHUBDokumentIzvor2013AParameter, iDHUBNalogVrsta2013AParameter, iDValutaPlacanjeParameter, iDValutaNaknadaParameter, datumIzvrsenjaParameter, racunPlatiteljParameter, racunNaknadaParameter, predanParameter, izvrsenParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_SELECT(long? ID_ZbrojniNalog2013A)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalog2013AParameter = ID_ZbrojniNalog2013A.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog2013A", ID_ZbrojniNalog2013A) :
                new ObjectParameter("ID_ZbrojniNalog2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_SELECT", iD_ZbrojniNalog2013AParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_SELECT(long? ID_ZbrojniNalog2013A, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalog2013AParameter = ID_ZbrojniNalog2013A.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog2013A", ID_ZbrojniNalog2013A) :
                new ObjectParameter("ID_ZbrojniNalog2013A", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_SELECT", mergeOption, iD_ZbrojniNalog2013AParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_UPDATE(long? ID_ZbrojniNalog2013A, long? ID_ZbrojniNalog, int? IDHUBDokumentIzvor2013A, int? IDHUBNalogVrsta2013A, string IDValutaPlacanje, string IDValutaNaknada, DateTime? DatumIzvrsenja, string RacunPlatitelj, string RacunNaknada, bool? Predan, bool? Izvrsen)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalog2013AParameter = ID_ZbrojniNalog2013A.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog2013A", ID_ZbrojniNalog2013A) :
                new ObjectParameter("ID_ZbrojniNalog2013A", typeof(long));
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaNaknadaParameter = IDValutaNaknada != null ?
                new ObjectParameter("IDValutaNaknada", IDValutaNaknada) :
                new ObjectParameter("IDValutaNaknada", typeof(string));
    
            var datumIzvrsenjaParameter = DatumIzvrsenja.HasValue ?
                new ObjectParameter("DatumIzvrsenja", DatumIzvrsenja) :
                new ObjectParameter("DatumIzvrsenja", typeof(System.DateTime));
    
            var racunPlatiteljParameter = RacunPlatitelj != null ?
                new ObjectParameter("RacunPlatitelj", RacunPlatitelj) :
                new ObjectParameter("RacunPlatitelj", typeof(string));
    
            var racunNaknadaParameter = RacunNaknada != null ?
                new ObjectParameter("RacunNaknada", RacunNaknada) :
                new ObjectParameter("RacunNaknada", typeof(string));
    
            var predanParameter = Predan.HasValue ?
                new ObjectParameter("Predan", Predan) :
                new ObjectParameter("Predan", typeof(bool));
    
            var izvrsenParameter = Izvrsen.HasValue ?
                new ObjectParameter("Izvrsen", Izvrsen) :
                new ObjectParameter("Izvrsen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_UPDATE", iD_ZbrojniNalog2013AParameter, iD_ZbrojniNalogParameter, iDHUBDokumentIzvor2013AParameter, iDHUBNalogVrsta2013AParameter, iDValutaPlacanjeParameter, iDValutaNaknadaParameter, datumIzvrsenjaParameter, racunPlatiteljParameter, racunNaknadaParameter, predanParameter, izvrsenParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalog2013A> USP_ZbrojniNalog2013A_UPDATE(long? ID_ZbrojniNalog2013A, long? ID_ZbrojniNalog, int? IDHUBDokumentIzvor2013A, int? IDHUBNalogVrsta2013A, string IDValutaPlacanje, string IDValutaNaknada, DateTime? DatumIzvrsenja, string RacunPlatitelj, string RacunNaknada, bool? Predan, bool? Izvrsen, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalog2013A).Assembly);
    
            var iD_ZbrojniNalog2013AParameter = ID_ZbrojniNalog2013A.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog2013A", ID_ZbrojniNalog2013A) :
                new ObjectParameter("ID_ZbrojniNalog2013A", typeof(long));
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iDHUBDokumentIzvor2013AParameter = IDHUBDokumentIzvor2013A.HasValue ?
                new ObjectParameter("IDHUBDokumentIzvor2013A", IDHUBDokumentIzvor2013A) :
                new ObjectParameter("IDHUBDokumentIzvor2013A", typeof(int));
    
            var iDHUBNalogVrsta2013AParameter = IDHUBNalogVrsta2013A.HasValue ?
                new ObjectParameter("IDHUBNalogVrsta2013A", IDHUBNalogVrsta2013A) :
                new ObjectParameter("IDHUBNalogVrsta2013A", typeof(int));
    
            var iDValutaPlacanjeParameter = IDValutaPlacanje != null ?
                new ObjectParameter("IDValutaPlacanje", IDValutaPlacanje) :
                new ObjectParameter("IDValutaPlacanje", typeof(string));
    
            var iDValutaNaknadaParameter = IDValutaNaknada != null ?
                new ObjectParameter("IDValutaNaknada", IDValutaNaknada) :
                new ObjectParameter("IDValutaNaknada", typeof(string));
    
            var datumIzvrsenjaParameter = DatumIzvrsenja.HasValue ?
                new ObjectParameter("DatumIzvrsenja", DatumIzvrsenja) :
                new ObjectParameter("DatumIzvrsenja", typeof(System.DateTime));
    
            var racunPlatiteljParameter = RacunPlatitelj != null ?
                new ObjectParameter("RacunPlatitelj", RacunPlatitelj) :
                new ObjectParameter("RacunPlatitelj", typeof(string));
    
            var racunNaknadaParameter = RacunNaknada != null ?
                new ObjectParameter("RacunNaknada", RacunNaknada) :
                new ObjectParameter("RacunNaknada", typeof(string));
    
            var predanParameter = Predan.HasValue ?
                new ObjectParameter("Predan", Predan) :
                new ObjectParameter("Predan", typeof(bool));
    
            var izvrsenParameter = Izvrsen.HasValue ?
                new ObjectParameter("Izvrsen", Izvrsen) :
                new ObjectParameter("Izvrsen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalog2013A>("USP_ZbrojniNalog2013A_UPDATE", mergeOption, iD_ZbrojniNalog2013AParameter, iD_ZbrojniNalogParameter, iDHUBDokumentIzvor2013AParameter, iDHUBNalogVrsta2013AParameter, iDValutaPlacanjeParameter, iDValutaNaknadaParameter, datumIzvrsenjaParameter, racunPlatiteljParameter, racunNaknadaParameter, predanParameter, izvrsenParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZbrojniNalogHUB_DELETE(long? ID_ZbrojniNalogHUB)
        {
            var iD_ZbrojniNalogHUBParameter = ID_ZbrojniNalogHUB.HasValue ?
                new ObjectParameter("ID_ZbrojniNalogHUB", ID_ZbrojniNalogHUB) :
                new ObjectParameter("ID_ZbrojniNalogHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZbrojniNalogHUB_DELETE", iD_ZbrojniNalogHUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_INSERT(long? ID_ZbrojniNalog, long? ID_HUB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_INSERT", iD_ZbrojniNalogParameter, iD_HUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_INSERT(long? ID_ZbrojniNalog, long? ID_HUB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_INSERT", mergeOption, iD_ZbrojniNalogParameter, iD_HUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_SELECT(long? ID_ZbrojniNalogHUB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogHUBParameter = ID_ZbrojniNalogHUB.HasValue ?
                new ObjectParameter("ID_ZbrojniNalogHUB", ID_ZbrojniNalogHUB) :
                new ObjectParameter("ID_ZbrojniNalogHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_SELECT", iD_ZbrojniNalogHUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_SELECT(long? ID_ZbrojniNalogHUB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogHUBParameter = ID_ZbrojniNalogHUB.HasValue ?
                new ObjectParameter("ID_ZbrojniNalogHUB", ID_ZbrojniNalogHUB) :
                new ObjectParameter("ID_ZbrojniNalogHUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_SELECT", mergeOption, iD_ZbrojniNalogHUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_UPDATE(long? ID_ZbrojniNalogHUB, long? ID_ZbrojniNalog, long? ID_HUB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogHUBParameter = ID_ZbrojniNalogHUB.HasValue ?
                new ObjectParameter("ID_ZbrojniNalogHUB", ID_ZbrojniNalogHUB) :
                new ObjectParameter("ID_ZbrojniNalogHUB", typeof(long));
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_UPDATE", iD_ZbrojniNalogHUBParameter, iD_ZbrojniNalogParameter, iD_HUBParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogHUB> USP_ZbrojniNalogHUB_UPDATE(long? ID_ZbrojniNalogHUB, long? ID_ZbrojniNalog, long? ID_HUB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogHUB).Assembly);
    
            var iD_ZbrojniNalogHUBParameter = ID_ZbrojniNalogHUB.HasValue ?
                new ObjectParameter("ID_ZbrojniNalogHUB", ID_ZbrojniNalogHUB) :
                new ObjectParameter("ID_ZbrojniNalogHUB", typeof(long));
    
            var iD_ZbrojniNalogParameter = ID_ZbrojniNalog.HasValue ?
                new ObjectParameter("ID_ZbrojniNalog", ID_ZbrojniNalog) :
                new ObjectParameter("ID_ZbrojniNalog", typeof(long));
    
            var iD_HUBParameter = ID_HUB.HasValue ?
                new ObjectParameter("ID_HUB", ID_HUB) :
                new ObjectParameter("ID_HUB", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogHUB>("USP_ZbrojniNalogHUB_UPDATE", mergeOption, iD_ZbrojniNalogHUBParameter, iD_ZbrojniNalogParameter, iD_HUBParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZbrojniNalogVerzija_DELETE(int? IDZbrojniNalogVerzija)
        {
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZbrojniNalogVerzija_DELETE", iDZbrojniNalogVerzijaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_INSERT(int? IDZbrojniNalogVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_INSERT", iDZbrojniNalogVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_INSERT(int? IDZbrojniNalogVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_INSERT", mergeOption, iDZbrojniNalogVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_SELECT(int? IDZbrojniNalogVerzija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_SELECT", iDZbrojniNalogVerzijaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_SELECT(int? IDZbrojniNalogVerzija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_SELECT", mergeOption, iDZbrojniNalogVerzijaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_UPDATE(int? IDZbrojniNalogVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_UPDATE", iDZbrojniNalogVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzija> USP_ZbrojniNalogVerzija_UPDATE(int? IDZbrojniNalogVerzija, DateTime? DatumOd, DateTime? DatumDo, string Opis, string Napomena, string OpisHTML, string NapomenaHTML, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzija).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var opisHTMLParameter = OpisHTML != null ?
                new ObjectParameter("OpisHTML", OpisHTML) :
                new ObjectParameter("OpisHTML", typeof(string));
    
            var napomenaHTMLParameter = NapomenaHTML != null ?
                new ObjectParameter("NapomenaHTML", NapomenaHTML) :
                new ObjectParameter("NapomenaHTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzija>("USP_ZbrojniNalogVerzija_UPDATE", mergeOption, iDZbrojniNalogVerzijaParameter, datumOdParameter, datumDoParameter, opisParameter, napomenaParameter, opisHTMLParameter, napomenaHTMLParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZbrojniNalogVerzijaTablica_DELETE(int? IDZbrojniNalogVerzijaTablica)
        {
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZbrojniNalogVerzijaTablica_DELETE", iDZbrojniNalogVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_INSERT(int? IDZbrojniNalogVerzija, int? IDZbrojniNalogVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_INSERT", iDZbrojniNalogVerzijaParameter, iDZbrojniNalogVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_INSERT(int? IDZbrojniNalogVerzija, int? IDZbrojniNalogVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_INSERT", mergeOption, iDZbrojniNalogVerzijaParameter, iDZbrojniNalogVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_SELECT(int? IDZbrojniNalogVerzijaTablica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_SELECT", iDZbrojniNalogVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_SELECT(int? IDZbrojniNalogVerzijaTablica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_SELECT", mergeOption, iDZbrojniNalogVerzijaTablicaParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_UPDATE(int? IDZbrojniNalogVerzija, int? IDZbrojniNalogVerzijaTablica, string TablicaShema, string TablicaNaziv)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_UPDATE", iDZbrojniNalogVerzijaParameter, iDZbrojniNalogVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<ZbrojniNalogVerzijaTablica> USP_ZbrojniNalogVerzijaTablica_UPDATE(int? IDZbrojniNalogVerzija, int? IDZbrojniNalogVerzijaTablica, string TablicaShema, string TablicaNaziv, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZbrojniNalogVerzijaTablica).Assembly);
    
            var iDZbrojniNalogVerzijaParameter = IDZbrojniNalogVerzija.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzija", IDZbrojniNalogVerzija) :
                new ObjectParameter("IDZbrojniNalogVerzija", typeof(int));
    
            var iDZbrojniNalogVerzijaTablicaParameter = IDZbrojniNalogVerzijaTablica.HasValue ?
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", IDZbrojniNalogVerzijaTablica) :
                new ObjectParameter("IDZbrojniNalogVerzijaTablica", typeof(int));
    
            var tablicaShemaParameter = TablicaShema != null ?
                new ObjectParameter("TablicaShema", TablicaShema) :
                new ObjectParameter("TablicaShema", typeof(string));
    
            var tablicaNazivParameter = TablicaNaziv != null ?
                new ObjectParameter("TablicaNaziv", TablicaNaziv) :
                new ObjectParameter("TablicaNaziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZbrojniNalogVerzijaTablica>("USP_ZbrojniNalogVerzijaTablica_UPDATE", mergeOption, iDZbrojniNalogVerzijaParameter, iDZbrojniNalogVerzijaTablicaParameter, tablicaShemaParameter, tablicaNazivParameter);
        }
    
        public virtual ObjectResult<int?> USP_Zgrada_DELETE(long? ID_Zgrada)
        {
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Zgrada_DELETE", iD_ZgradaParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Adresa, int? BrojUgovor)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_INSERT", iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_AdresaParameter, brojUgovorParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_INSERT(long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Adresa, int? BrojUgovor, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_INSERT", mergeOption, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_AdresaParameter, brojUgovorParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_SELECT(long? ID_Zgrada)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_SELECT", iD_ZgradaParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_SELECT(long? ID_Zgrada, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_SELECT", mergeOption, iD_ZgradaParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_UPDATE(long? ID_Zgrada, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Adresa, int? BrojUgovor)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_UPDATE", iD_ZgradaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_AdresaParameter, brojUgovorParameter);
        }
    
        public virtual ObjectResult<Zgrada> USP_Zgrada_UPDATE(long? ID_Zgrada, long? ID_Objekt, string Oznaka, string Naziv, string NazivKr, string Kratica, long? ID_Adresa, int? BrojUgovor, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zgrada).Assembly);
    
            var iD_ZgradaParameter = ID_Zgrada.HasValue ?
                new ObjectParameter("ID_Zgrada", ID_Zgrada) :
                new ObjectParameter("ID_Zgrada", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var iD_AdresaParameter = ID_Adresa.HasValue ?
                new ObjectParameter("ID_Adresa", ID_Adresa) :
                new ObjectParameter("ID_Adresa", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zgrada>("USP_Zgrada_UPDATE", mergeOption, iD_ZgradaParameter, iD_ObjektParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, iD_AdresaParameter, brojUgovorParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZN14OsnovaPlacanja_DELETE(int? IDZN14OsnovaPlacanja)
        {
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZN14OsnovaPlacanja_DELETE", iDZN14OsnovaPlacanjaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_INSERT(int? IDZN14OsnovaPlacanja, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_INSERT", iDZN14OsnovaPlacanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_INSERT(int? IDZN14OsnovaPlacanja, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_INSERT", mergeOption, iDZN14OsnovaPlacanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_SELECT(int? IDZN14OsnovaPlacanja)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_SELECT", iDZN14OsnovaPlacanjaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_SELECT(int? IDZN14OsnovaPlacanja, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_SELECT", mergeOption, iDZN14OsnovaPlacanjaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_UPDATE(int? IDZN14OsnovaPlacanja, string Oznaka, string Naziv, string NazivKr, string Kratica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_UPDATE", iDZN14OsnovaPlacanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<ZN14OsnovaPlacanja> USP_ZN14OsnovaPlacanja_UPDATE(int? IDZN14OsnovaPlacanja, string Oznaka, string Naziv, string NazivKr, string Kratica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZN14OsnovaPlacanja).Assembly);
    
            var iDZN14OsnovaPlacanjaParameter = IDZN14OsnovaPlacanja.HasValue ?
                new ObjectParameter("IDZN14OsnovaPlacanja", IDZN14OsnovaPlacanja) :
                new ObjectParameter("IDZN14OsnovaPlacanja", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZN14OsnovaPlacanja>("USP_ZN14OsnovaPlacanja_UPDATE", mergeOption, iDZN14OsnovaPlacanjaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter);
        }
    
        public virtual ObjectResult<int?> USP_Zupanija_DELETE(long? ID_Zupanija)
        {
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_Zupanija_DELETE", iD_ZupanijaParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_MjestoPosta, string TelPozBr, string SjedZup, string SjedisteZup, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var telPozBrParameter = TelPozBr != null ?
                new ObjectParameter("TelPozBr", TelPozBr) :
                new ObjectParameter("TelPozBr", typeof(string));
    
            var sjedZupParameter = SjedZup != null ?
                new ObjectParameter("SjedZup", SjedZup) :
                new ObjectParameter("SjedZup", typeof(string));
    
            var sjedisteZupParameter = SjedisteZup != null ?
                new ObjectParameter("SjedisteZup", SjedisteZup) :
                new ObjectParameter("SjedisteZup", typeof(string));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoPostaParameter, telPozBrParameter, sjedZupParameter, sjedisteZupParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_MjestoPosta, string TelPozBr, string SjedZup, string SjedisteZup, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var telPozBrParameter = TelPozBr != null ?
                new ObjectParameter("TelPozBr", TelPozBr) :
                new ObjectParameter("TelPozBr", typeof(string));
    
            var sjedZupParameter = SjedZup != null ?
                new ObjectParameter("SjedZup", SjedZup) :
                new ObjectParameter("SjedZup", typeof(string));
    
            var sjedisteZupParameter = SjedisteZup != null ?
                new ObjectParameter("SjedisteZup", SjedisteZup) :
                new ObjectParameter("SjedisteZup", typeof(string));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoPostaParameter, telPozBrParameter, sjedZupParameter, sjedisteZupParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_SELECT(long? ID_Zupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_SELECT", iD_ZupanijaParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_SELECT(long? ID_Zupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_SELECT", mergeOption, iD_ZupanijaParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_UPDATE(long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_MjestoPosta, string TelPozBr, string SjedZup, string SjedisteZup, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var telPozBrParameter = TelPozBr != null ?
                new ObjectParameter("TelPozBr", TelPozBr) :
                new ObjectParameter("TelPozBr", typeof(string));
    
            var sjedZupParameter = SjedZup != null ?
                new ObjectParameter("SjedZup", SjedZup) :
                new ObjectParameter("SjedZup", typeof(string));
    
            var sjedisteZupParameter = SjedisteZup != null ?
                new ObjectParameter("SjedisteZup", SjedisteZup) :
                new ObjectParameter("SjedisteZup", typeof(string));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_UPDATE", iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoPostaParameter, telPozBrParameter, sjedZupParameter, sjedisteZupParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<Zupanija> USP_Zupanija_UPDATE(long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_MjestoPosta, string TelPozBr, string SjedZup, string SjedisteZup, string PathGrb, byte[] GrbSlika, string PathKarta, byte[] KartaSlika, byte[] KartaSlika2, string IDDrzava, long? ID_Subjekt, string OIB, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Zupanija).Assembly);
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_MjestoPostaParameter = ID_MjestoPosta.HasValue ?
                new ObjectParameter("ID_MjestoPosta", ID_MjestoPosta) :
                new ObjectParameter("ID_MjestoPosta", typeof(long));
    
            var telPozBrParameter = TelPozBr != null ?
                new ObjectParameter("TelPozBr", TelPozBr) :
                new ObjectParameter("TelPozBr", typeof(string));
    
            var sjedZupParameter = SjedZup != null ?
                new ObjectParameter("SjedZup", SjedZup) :
                new ObjectParameter("SjedZup", typeof(string));
    
            var sjedisteZupParameter = SjedisteZup != null ?
                new ObjectParameter("SjedisteZup", SjedisteZup) :
                new ObjectParameter("SjedisteZup", typeof(string));
    
            var pathGrbParameter = PathGrb != null ?
                new ObjectParameter("PathGrb", PathGrb) :
                new ObjectParameter("PathGrb", typeof(string));
    
            var grbSlikaParameter = GrbSlika != null ?
                new ObjectParameter("GrbSlika", GrbSlika) :
                new ObjectParameter("GrbSlika", typeof(byte[]));
    
            var pathKartaParameter = PathKarta != null ?
                new ObjectParameter("PathKarta", PathKarta) :
                new ObjectParameter("PathKarta", typeof(string));
    
            var kartaSlikaParameter = KartaSlika != null ?
                new ObjectParameter("KartaSlika", KartaSlika) :
                new ObjectParameter("KartaSlika", typeof(byte[]));
    
            var kartaSlika2Parameter = KartaSlika2 != null ?
                new ObjectParameter("KartaSlika2", KartaSlika2) :
                new ObjectParameter("KartaSlika2", typeof(byte[]));
    
            var iDDrzavaParameter = IDDrzava != null ?
                new ObjectParameter("IDDrzava", IDDrzava) :
                new ObjectParameter("IDDrzava", typeof(string));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var oIBParameter = OIB != null ?
                new ObjectParameter("OIB", OIB) :
                new ObjectParameter("OIB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zupanija>("USP_Zupanija_UPDATE", mergeOption, iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_MjestoPostaParameter, telPozBrParameter, sjedZupParameter, sjedisteZupParameter, pathGrbParameter, grbSlikaParameter, pathKartaParameter, kartaSlikaParameter, kartaSlika2Parameter, iDDrzavaParameter, iD_SubjektParameter, oIBParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZupanijaGr_DELETE(long? ID_ZupanijaGr)
        {
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZupanijaGr_DELETE", iD_ZupanijaGrParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_ZupanijaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_ZupanijaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_SELECT(long? ID_ZupanijaGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_SELECT", iD_ZupanijaGrParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_SELECT(long? ID_ZupanijaGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_SELECT", mergeOption, iD_ZupanijaGrParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_UPDATE(long? ID_ZupanijaGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_ZupanijaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_UPDATE", iD_ZupanijaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGr> USP_ZupanijaGr_UPDATE(long? ID_ZupanijaGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, long? ID_ZupanijaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGr).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGr>("USP_ZupanijaGr_UPDATE", mergeOption, iD_ZupanijaGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZupanijaGrTip_DELETE(long? ID_ZupanijaGrTip)
        {
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZupanijaGrTip_DELETE", iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsZupanijaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsZupanijaGrTipParameter = StsZupanijaGrTip != null ?
                new ObjectParameter("StsZupanijaGrTip", StsZupanijaGrTip) :
                new ObjectParameter("StsZupanijaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsZupanijaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsZupanijaGrTipParameter = StsZupanijaGrTip != null ?
                new ObjectParameter("StsZupanijaGrTip", StsZupanijaGrTip) :
                new ObjectParameter("StsZupanijaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_SELECT(long? ID_ZupanijaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_SELECT", iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_SELECT(long? ID_ZupanijaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_SELECT", mergeOption, iD_ZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_UPDATE(long? ID_ZupanijaGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsZupanijaGrTip)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsZupanijaGrTipParameter = StsZupanijaGrTip != null ?
                new ObjectParameter("StsZupanijaGrTip", StsZupanijaGrTip) :
                new ObjectParameter("StsZupanijaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_UPDATE", iD_ZupanijaGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrTip> USP_ZupanijaGrTip_UPDATE(long? ID_ZupanijaGrTip, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, string StsZupanijaGrTip, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrTip).Assembly);
    
            var iD_ZupanijaGrTipParameter = ID_ZupanijaGrTip.HasValue ?
                new ObjectParameter("ID_ZupanijaGrTip", ID_ZupanijaGrTip) :
                new ObjectParameter("ID_ZupanijaGrTip", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var stsZupanijaGrTipParameter = StsZupanijaGrTip != null ?
                new ObjectParameter("StsZupanijaGrTip", StsZupanijaGrTip) :
                new ObjectParameter("StsZupanijaGrTip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrTip>("USP_ZupanijaGrTip_UPDATE", mergeOption, iD_ZupanijaGrTipParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, stsZupanijaGrTipParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZupanijaGrZupanija_DELETE(long? ID_ZupanijaGrZupanija)
        {
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZupanijaGrZupanija_DELETE", iD_ZupanijaGrZupanijaParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_INSERT(long? ID_ZupanijaGr, long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_INSERT", iD_ZupanijaGrParameter, iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_INSERT(long? ID_ZupanijaGr, long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_INSERT", mergeOption, iD_ZupanijaGrParameter, iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_SELECT(long? ID_ZupanijaGrZupanija)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_SELECT", iD_ZupanijaGrZupanijaParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_SELECT(long? ID_ZupanijaGrZupanija, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_SELECT", mergeOption, iD_ZupanijaGrZupanijaParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_UPDATE(long? ID_ZupanijaGrZupanija, long? ID_ZupanijaGr, long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_UPDATE", iD_ZupanijaGrZupanijaParameter, iD_ZupanijaGrParameter, iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanija> USP_ZupanijaGrZupanija_UPDATE(long? ID_ZupanijaGrZupanija, long? ID_ZupanijaGr, long? ID_Zupanija, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanija).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var iD_ZupanijaGrParameter = ID_ZupanijaGr.HasValue ?
                new ObjectParameter("ID_ZupanijaGr", ID_ZupanijaGr) :
                new ObjectParameter("ID_ZupanijaGr", typeof(long));
    
            var iD_ZupanijaParameter = ID_Zupanija.HasValue ?
                new ObjectParameter("ID_Zupanija", ID_Zupanija) :
                new ObjectParameter("ID_Zupanija", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanija>("USP_ZupanijaGrZupanija_UPDATE", mergeOption, iD_ZupanijaGrZupanijaParameter, iD_ZupanijaGrParameter, iD_ZupanijaParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZupanijaGrZupanijaDatum_DELETE(long? ID_ZupanijaGrZupanijaDatum)
        {
            var iD_ZupanijaGrZupanijaDatumParameter = ID_ZupanijaGrZupanijaDatum.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", ID_ZupanijaGrZupanijaDatum) :
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZupanijaGrZupanijaDatum_DELETE", iD_ZupanijaGrZupanijaDatumParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_INSERT(long? ID_ZupanijaGrZupanija, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_INSERT", iD_ZupanijaGrZupanijaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_INSERT(long? ID_ZupanijaGrZupanija, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_INSERT", mergeOption, iD_ZupanijaGrZupanijaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_SELECT(long? ID_ZupanijaGrZupanijaDatum)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaDatumParameter = ID_ZupanijaGrZupanijaDatum.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", ID_ZupanijaGrZupanijaDatum) :
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_SELECT", iD_ZupanijaGrZupanijaDatumParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_SELECT(long? ID_ZupanijaGrZupanijaDatum, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaDatumParameter = ID_ZupanijaGrZupanijaDatum.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", ID_ZupanijaGrZupanijaDatum) :
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_SELECT", mergeOption, iD_ZupanijaGrZupanijaDatumParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_UPDATE(long? ID_ZupanijaGrZupanijaDatum, long? ID_ZupanijaGrZupanija, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaDatumParameter = ID_ZupanijaGrZupanijaDatum.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", ID_ZupanijaGrZupanijaDatum) :
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", typeof(long));
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_UPDATE", iD_ZupanijaGrZupanijaDatumParameter, iD_ZupanijaGrZupanijaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<ZupanijaGrZupanijaDatum> USP_ZupanijaGrZupanijaDatum_UPDATE(long? ID_ZupanijaGrZupanijaDatum, long? ID_ZupanijaGrZupanija, DateTime? DatumOd, DateTime? DatumDo, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZupanijaGrZupanijaDatum).Assembly);
    
            var iD_ZupanijaGrZupanijaDatumParameter = ID_ZupanijaGrZupanijaDatum.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", ID_ZupanijaGrZupanijaDatum) :
                new ObjectParameter("ID_ZupanijaGrZupanijaDatum", typeof(long));
    
            var iD_ZupanijaGrZupanijaParameter = ID_ZupanijaGrZupanija.HasValue ?
                new ObjectParameter("ID_ZupanijaGrZupanija", ID_ZupanijaGrZupanija) :
                new ObjectParameter("ID_ZupanijaGrZupanija", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = DatumDo.HasValue ?
                new ObjectParameter("DatumDo", DatumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZupanijaGrZupanijaDatum>("USP_ZupanijaGrZupanijaDatum_UPDATE", mergeOption, iD_ZupanijaGrZupanijaDatumParameter, iD_ZupanijaGrZupanijaParameter, datumOdParameter, datumDoParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual int C_USP_HUB_IMPORT_TestBrojUgovora(string Datoteka, int? Godina, int? Mjesec, int? IDHUBNamjena2013A, int? BrojUgovorMin, int? BrojUgovorMax)
        {
            var datotekaParameter = Datoteka != null ?
                new ObjectParameter("Datoteka", Datoteka) :
                new ObjectParameter("Datoteka", typeof(string));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            var iDHUBNamjena2013AParameter = IDHUBNamjena2013A.HasValue ?
                new ObjectParameter("IDHUBNamjena2013A", IDHUBNamjena2013A) :
                new ObjectParameter("IDHUBNamjena2013A", typeof(int));
    
            var brojUgovorMinParameter = BrojUgovorMin.HasValue ?
                new ObjectParameter("BrojUgovorMin", BrojUgovorMin) :
                new ObjectParameter("BrojUgovorMin", typeof(int));
    
            var brojUgovorMaxParameter = BrojUgovorMax.HasValue ?
                new ObjectParameter("BrojUgovorMax", BrojUgovorMax) :
                new ObjectParameter("BrojUgovorMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("C_USP_HUB_IMPORT_TestBrojUgovora", datotekaParameter, godinaParameter, mjesecParameter, iDHUBNamjena2013AParameter, brojUgovorMinParameter, brojUgovorMaxParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_INSERT(long? ID_Zapis, int? IDIzvodVerzija, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, long? ID_SubjektRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_INSERT", iD_ZapisParameter, iDIzvodVerzijaParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_INSERT(long? ID_Zapis, int? IDIzvodVerzija, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, long? ID_SubjektRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_INSERT", mergeOption, iD_ZapisParameter, iDIzvodVerzijaParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_UPDATE(long? ID_Izvod, long? ID_Zapis, int? IDIzvodVerzija, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, long? ID_SubjektRacun)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_UPDATE", iD_IzvodParameter, iD_ZapisParameter, iDIzvodVerzijaParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<Izvod> USP_Izvod_UPDATE(long? ID_Izvod, long? ID_Zapis, int? IDIzvodVerzija, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? SaldoStaro, decimal? SaldoNovo, long? ID_SubjektRacun, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Izvod).Assembly);
    
            var iD_IzvodParameter = ID_Izvod.HasValue ?
                new ObjectParameter("ID_Izvod", ID_Izvod) :
                new ObjectParameter("ID_Izvod", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iDIzvodVerzijaParameter = IDIzvodVerzija.HasValue ?
                new ObjectParameter("IDIzvodVerzija", IDIzvodVerzija) :
                new ObjectParameter("IDIzvodVerzija", typeof(int));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var saldoStaroParameter = SaldoStaro.HasValue ?
                new ObjectParameter("SaldoStaro", SaldoStaro) :
                new ObjectParameter("SaldoStaro", typeof(decimal));
    
            var saldoNovoParameter = SaldoNovo.HasValue ?
                new ObjectParameter("SaldoNovo", SaldoNovo) :
                new ObjectParameter("SaldoNovo", typeof(decimal));
    
            var iD_SubjektRacunParameter = ID_SubjektRacun.HasValue ?
                new ObjectParameter("ID_SubjektRacun", ID_SubjektRacun) :
                new ObjectParameter("ID_SubjektRacun", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Izvod>("USP_Izvod_UPDATE", mergeOption, iD_IzvodParameter, iD_ZapisParameter, iDIzvodVerzijaParameter, iznosDugujeParameter, iznosPotrazujeParameter, saldoStaroParameter, saldoNovoParameter, iD_SubjektRacunParameter);
        }
    
        public virtual ObjectResult<int?> USP_TemeljnicaSt_DELETE(long? ID_TemeljnicaSt)
        {
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_TemeljnicaSt_DELETE", iD_TemeljnicaStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_INSERT(long? ID_Temeljnica, int? RedniBroj, DateTime? Datum, DateTime? DatumDospijeca, long? ID_KontniPlanSt, long? ID_Subjekt, long? ID_Objekt, long? ID_Zapis, long? ID_Davanje, decimal? IznosDuguje, decimal? IznosPotrazuje, string IDValuta, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, decimal? Tecaj, long? ID_Tecaj, string Opis, string ZapisOpis, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var datumDospijecaParameter = DatumDospijeca.HasValue ?
                new ObjectParameter("DatumDospijeca", DatumDospijeca) :
                new ObjectParameter("DatumDospijeca", typeof(System.DateTime));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var zapisOpisParameter = ZapisOpis != null ?
                new ObjectParameter("ZapisOpis", ZapisOpis) :
                new ObjectParameter("ZapisOpis", typeof(string));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_INSERT", iD_TemeljnicaParameter, redniBrojParameter, datumParameter, datumDospijecaParameter, iD_KontniPlanStParameter, iD_SubjektParameter, iD_ObjektParameter, iD_ZapisParameter, iD_DavanjeParameter, iznosDugujeParameter, iznosPotrazujeParameter, iDValutaParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, tecajParameter, iD_TecajParameter, opisParameter, zapisOpisParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_INSERT(long? ID_Temeljnica, int? RedniBroj, DateTime? Datum, DateTime? DatumDospijeca, long? ID_KontniPlanSt, long? ID_Subjekt, long? ID_Objekt, long? ID_Zapis, long? ID_Davanje, decimal? IznosDuguje, decimal? IznosPotrazuje, string IDValuta, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, decimal? Tecaj, long? ID_Tecaj, string Opis, string ZapisOpis, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var datumDospijecaParameter = DatumDospijeca.HasValue ?
                new ObjectParameter("DatumDospijeca", DatumDospijeca) :
                new ObjectParameter("DatumDospijeca", typeof(System.DateTime));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var zapisOpisParameter = ZapisOpis != null ?
                new ObjectParameter("ZapisOpis", ZapisOpis) :
                new ObjectParameter("ZapisOpis", typeof(string));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_INSERT", mergeOption, iD_TemeljnicaParameter, redniBrojParameter, datumParameter, datumDospijecaParameter, iD_KontniPlanStParameter, iD_SubjektParameter, iD_ObjektParameter, iD_ZapisParameter, iD_DavanjeParameter, iznosDugujeParameter, iznosPotrazujeParameter, iDValutaParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, tecajParameter, iD_TecajParameter, opisParameter, zapisOpisParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_SELECT(long? ID_TemeljnicaSt)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_SELECT", iD_TemeljnicaStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_SELECT(long? ID_TemeljnicaSt, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_SELECT", mergeOption, iD_TemeljnicaStParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_UPDATE(long? ID_TemeljnicaSt, long? ID_Temeljnica, int? RedniBroj, DateTime? Datum, DateTime? DatumDospijeca, long? ID_KontniPlanSt, long? ID_Subjekt, long? ID_Objekt, long? ID_Zapis, long? ID_Davanje, decimal? IznosDuguje, decimal? IznosPotrazuje, string IDValuta, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, decimal? Tecaj, long? ID_Tecaj, string Opis, string ZapisOpis, long? ID_KontniPlanAnalitika)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var datumDospijecaParameter = DatumDospijeca.HasValue ?
                new ObjectParameter("DatumDospijeca", DatumDospijeca) :
                new ObjectParameter("DatumDospijeca", typeof(System.DateTime));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var zapisOpisParameter = ZapisOpis != null ?
                new ObjectParameter("ZapisOpis", ZapisOpis) :
                new ObjectParameter("ZapisOpis", typeof(string));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_UPDATE", iD_TemeljnicaStParameter, iD_TemeljnicaParameter, redniBrojParameter, datumParameter, datumDospijecaParameter, iD_KontniPlanStParameter, iD_SubjektParameter, iD_ObjektParameter, iD_ZapisParameter, iD_DavanjeParameter, iznosDugujeParameter, iznosPotrazujeParameter, iDValutaParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, tecajParameter, iD_TecajParameter, opisParameter, zapisOpisParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<TemeljnicaSt> USP_TemeljnicaSt_UPDATE(long? ID_TemeljnicaSt, long? ID_Temeljnica, int? RedniBroj, DateTime? Datum, DateTime? DatumDospijeca, long? ID_KontniPlanSt, long? ID_Subjekt, long? ID_Objekt, long? ID_Zapis, long? ID_Davanje, decimal? IznosDuguje, decimal? IznosPotrazuje, string IDValuta, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, decimal? Tecaj, long? ID_Tecaj, string Opis, string ZapisOpis, long? ID_KontniPlanAnalitika, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TemeljnicaSt).Assembly);
    
            var iD_TemeljnicaStParameter = ID_TemeljnicaSt.HasValue ?
                new ObjectParameter("ID_TemeljnicaSt", ID_TemeljnicaSt) :
                new ObjectParameter("ID_TemeljnicaSt", typeof(long));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var datumDospijecaParameter = DatumDospijeca.HasValue ?
                new ObjectParameter("DatumDospijeca", DatumDospijeca) :
                new ObjectParameter("DatumDospijeca", typeof(System.DateTime));
    
            var iD_KontniPlanStParameter = ID_KontniPlanSt.HasValue ?
                new ObjectParameter("ID_KontniPlanSt", ID_KontniPlanSt) :
                new ObjectParameter("ID_KontniPlanSt", typeof(long));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var iD_ObjektParameter = ID_Objekt.HasValue ?
                new ObjectParameter("ID_Objekt", ID_Objekt) :
                new ObjectParameter("ID_Objekt", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_DavanjeParameter = ID_Davanje.HasValue ?
                new ObjectParameter("ID_Davanje", ID_Davanje) :
                new ObjectParameter("ID_Davanje", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var tecajParameter = Tecaj.HasValue ?
                new ObjectParameter("Tecaj", Tecaj) :
                new ObjectParameter("Tecaj", typeof(decimal));
    
            var iD_TecajParameter = ID_Tecaj.HasValue ?
                new ObjectParameter("ID_Tecaj", ID_Tecaj) :
                new ObjectParameter("ID_Tecaj", typeof(long));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var zapisOpisParameter = ZapisOpis != null ?
                new ObjectParameter("ZapisOpis", ZapisOpis) :
                new ObjectParameter("ZapisOpis", typeof(string));
    
            var iD_KontniPlanAnalitikaParameter = ID_KontniPlanAnalitika.HasValue ?
                new ObjectParameter("ID_KontniPlanAnalitika", ID_KontniPlanAnalitika) :
                new ObjectParameter("ID_KontniPlanAnalitika", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TemeljnicaSt>("USP_TemeljnicaSt_UPDATE", mergeOption, iD_TemeljnicaStParameter, iD_TemeljnicaParameter, redniBrojParameter, datumParameter, datumDospijecaParameter, iD_KontniPlanStParameter, iD_SubjektParameter, iD_ObjektParameter, iD_ZapisParameter, iD_DavanjeParameter, iznosDugujeParameter, iznosPotrazujeParameter, iDValutaParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, tecajParameter, iD_TecajParameter, opisParameter, zapisOpisParameter, iD_KontniPlanAnalitikaParameter);
        }
    
        public virtual ObjectResult<int?> USP_DokumentVr_DELETE(long? ID_DokumentVr)
        {
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DokumentVr_DELETE", iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? IDDokumentGr, bool? Obrocni, bool? Jednokratni, bool? Kupac, bool? Partner, bool? Ugovor, bool? Faktura, bool? Nalog)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var obrocniParameter = Obrocni.HasValue ?
                new ObjectParameter("Obrocni", Obrocni) :
                new ObjectParameter("Obrocni", typeof(bool));
    
            var jednokratniParameter = Jednokratni.HasValue ?
                new ObjectParameter("Jednokratni", Jednokratni) :
                new ObjectParameter("Jednokratni", typeof(bool));
    
            var kupacParameter = Kupac.HasValue ?
                new ObjectParameter("Kupac", Kupac) :
                new ObjectParameter("Kupac", typeof(bool));
    
            var partnerParameter = Partner.HasValue ?
                new ObjectParameter("Partner", Partner) :
                new ObjectParameter("Partner", typeof(bool));
    
            var ugovorParameter = Ugovor.HasValue ?
                new ObjectParameter("Ugovor", Ugovor) :
                new ObjectParameter("Ugovor", typeof(bool));
    
            var fakturaParameter = Faktura.HasValue ?
                new ObjectParameter("Faktura", Faktura) :
                new ObjectParameter("Faktura", typeof(bool));
    
            var nalogParameter = Nalog.HasValue ?
                new ObjectParameter("Nalog", Nalog) :
                new ObjectParameter("Nalog", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iDDokumentGrParameter, obrocniParameter, jednokratniParameter, kupacParameter, partnerParameter, ugovorParameter, fakturaParameter, nalogParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? IDDokumentGr, bool? Obrocni, bool? Jednokratni, bool? Kupac, bool? Partner, bool? Ugovor, bool? Faktura, bool? Nalog, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var obrocniParameter = Obrocni.HasValue ?
                new ObjectParameter("Obrocni", Obrocni) :
                new ObjectParameter("Obrocni", typeof(bool));
    
            var jednokratniParameter = Jednokratni.HasValue ?
                new ObjectParameter("Jednokratni", Jednokratni) :
                new ObjectParameter("Jednokratni", typeof(bool));
    
            var kupacParameter = Kupac.HasValue ?
                new ObjectParameter("Kupac", Kupac) :
                new ObjectParameter("Kupac", typeof(bool));
    
            var partnerParameter = Partner.HasValue ?
                new ObjectParameter("Partner", Partner) :
                new ObjectParameter("Partner", typeof(bool));
    
            var ugovorParameter = Ugovor.HasValue ?
                new ObjectParameter("Ugovor", Ugovor) :
                new ObjectParameter("Ugovor", typeof(bool));
    
            var fakturaParameter = Faktura.HasValue ?
                new ObjectParameter("Faktura", Faktura) :
                new ObjectParameter("Faktura", typeof(bool));
    
            var nalogParameter = Nalog.HasValue ?
                new ObjectParameter("Nalog", Nalog) :
                new ObjectParameter("Nalog", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iDDokumentGrParameter, obrocniParameter, jednokratniParameter, kupacParameter, partnerParameter, ugovorParameter, fakturaParameter, nalogParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_SELECT(long? ID_DokumentVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_SELECT", iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_SELECT(long? ID_DokumentVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_SELECT", mergeOption, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_UPDATE(long? ID_DokumentVr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? IDDokumentGr, bool? Obrocni, bool? Jednokratni, bool? Kupac, bool? Partner, bool? Ugovor, bool? Faktura, bool? Nalog)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var obrocniParameter = Obrocni.HasValue ?
                new ObjectParameter("Obrocni", Obrocni) :
                new ObjectParameter("Obrocni", typeof(bool));
    
            var jednokratniParameter = Jednokratni.HasValue ?
                new ObjectParameter("Jednokratni", Jednokratni) :
                new ObjectParameter("Jednokratni", typeof(bool));
    
            var kupacParameter = Kupac.HasValue ?
                new ObjectParameter("Kupac", Kupac) :
                new ObjectParameter("Kupac", typeof(bool));
    
            var partnerParameter = Partner.HasValue ?
                new ObjectParameter("Partner", Partner) :
                new ObjectParameter("Partner", typeof(bool));
    
            var ugovorParameter = Ugovor.HasValue ?
                new ObjectParameter("Ugovor", Ugovor) :
                new ObjectParameter("Ugovor", typeof(bool));
    
            var fakturaParameter = Faktura.HasValue ?
                new ObjectParameter("Faktura", Faktura) :
                new ObjectParameter("Faktura", typeof(bool));
    
            var nalogParameter = Nalog.HasValue ?
                new ObjectParameter("Nalog", Nalog) :
                new ObjectParameter("Nalog", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_UPDATE", iD_DokumentVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iDDokumentGrParameter, obrocniParameter, jednokratniParameter, kupacParameter, partnerParameter, ugovorParameter, fakturaParameter, nalogParameter);
        }
    
        public virtual ObjectResult<DokumentVr> USP_DokumentVr_UPDATE(long? ID_DokumentVr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, int? IDDokumentGr, bool? Obrocni, bool? Jednokratni, bool? Kupac, bool? Partner, bool? Ugovor, bool? Faktura, bool? Nalog, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentVr).Assembly);
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var obrocniParameter = Obrocni.HasValue ?
                new ObjectParameter("Obrocni", Obrocni) :
                new ObjectParameter("Obrocni", typeof(bool));
    
            var jednokratniParameter = Jednokratni.HasValue ?
                new ObjectParameter("Jednokratni", Jednokratni) :
                new ObjectParameter("Jednokratni", typeof(bool));
    
            var kupacParameter = Kupac.HasValue ?
                new ObjectParameter("Kupac", Kupac) :
                new ObjectParameter("Kupac", typeof(bool));
    
            var partnerParameter = Partner.HasValue ?
                new ObjectParameter("Partner", Partner) :
                new ObjectParameter("Partner", typeof(bool));
    
            var ugovorParameter = Ugovor.HasValue ?
                new ObjectParameter("Ugovor", Ugovor) :
                new ObjectParameter("Ugovor", typeof(bool));
    
            var fakturaParameter = Faktura.HasValue ?
                new ObjectParameter("Faktura", Faktura) :
                new ObjectParameter("Faktura", typeof(bool));
    
            var nalogParameter = Nalog.HasValue ?
                new ObjectParameter("Nalog", Nalog) :
                new ObjectParameter("Nalog", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentVr>("USP_DokumentVr_UPDATE", mergeOption, iD_DokumentVrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter, iDDokumentGrParameter, obrocniParameter, jednokratniParameter, kupacParameter, partnerParameter, ugovorParameter, fakturaParameter, nalogParameter);
        }
    
        public virtual ObjectResult<int?> USP_IzvodStTemeljnica_DELETE(long? ID_IzvodStTemeljnica)
        {
            var iD_IzvodStTemeljnicaParameter = ID_IzvodStTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodStTemeljnica", ID_IzvodStTemeljnica) :
                new ObjectParameter("ID_IzvodStTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_IzvodStTemeljnica_DELETE", iD_IzvodStTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_INSERT(long? ID_IzvodSt, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_DokumentVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_INSERT", iD_IzvodStParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_INSERT(long? ID_IzvodSt, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_DokumentVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_INSERT", mergeOption, iD_IzvodStParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_SELECT(long? ID_IzvodStTemeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStTemeljnicaParameter = ID_IzvodStTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodStTemeljnica", ID_IzvodStTemeljnica) :
                new ObjectParameter("ID_IzvodStTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_SELECT", iD_IzvodStTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_SELECT(long? ID_IzvodStTemeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStTemeljnicaParameter = ID_IzvodStTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodStTemeljnica", ID_IzvodStTemeljnica) :
                new ObjectParameter("ID_IzvodStTemeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_SELECT", mergeOption, iD_IzvodStTemeljnicaParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_UPDATE(long? ID_IzvodStTemeljnica, long? ID_IzvodSt, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_DokumentVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStTemeljnicaParameter = ID_IzvodStTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodStTemeljnica", ID_IzvodStTemeljnica) :
                new ObjectParameter("ID_IzvodStTemeljnica", typeof(long));
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_UPDATE", iD_IzvodStTemeljnicaParameter, iD_IzvodStParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<IzvodStTemeljnica> USP_IzvodStTemeljnica_UPDATE(long? ID_IzvodStTemeljnica, long? ID_IzvodSt, decimal? IznosDuguje, decimal? IznosPotrazuje, decimal? IznosDugujeValuta, decimal? IznosPotrazujeValuta, long? ID_DokumentVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(IzvodStTemeljnica).Assembly);
    
            var iD_IzvodStTemeljnicaParameter = ID_IzvodStTemeljnica.HasValue ?
                new ObjectParameter("ID_IzvodStTemeljnica", ID_IzvodStTemeljnica) :
                new ObjectParameter("ID_IzvodStTemeljnica", typeof(long));
    
            var iD_IzvodStParameter = ID_IzvodSt.HasValue ?
                new ObjectParameter("ID_IzvodSt", ID_IzvodSt) :
                new ObjectParameter("ID_IzvodSt", typeof(long));
    
            var iznosDugujeParameter = IznosDuguje.HasValue ?
                new ObjectParameter("IznosDuguje", IznosDuguje) :
                new ObjectParameter("IznosDuguje", typeof(decimal));
    
            var iznosPotrazujeParameter = IznosPotrazuje.HasValue ?
                new ObjectParameter("IznosPotrazuje", IznosPotrazuje) :
                new ObjectParameter("IznosPotrazuje", typeof(decimal));
    
            var iznosDugujeValutaParameter = IznosDugujeValuta.HasValue ?
                new ObjectParameter("IznosDugujeValuta", IznosDugujeValuta) :
                new ObjectParameter("IznosDugujeValuta", typeof(decimal));
    
            var iznosPotrazujeValutaParameter = IznosPotrazujeValuta.HasValue ?
                new ObjectParameter("IznosPotrazujeValuta", IznosPotrazujeValuta) :
                new ObjectParameter("IznosPotrazujeValuta", typeof(decimal));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvodStTemeljnica>("USP_IzvodStTemeljnica_UPDATE", mergeOption, iD_IzvodStTemeljnicaParameter, iD_IzvodStParameter, iznosDugujeParameter, iznosPotrazujeParameter, iznosDugujeValutaParameter, iznosPotrazujeValutaParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkup_DELETE(long? ID_UgovorStanOtkup)
        {
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkup_DELETE", iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_INSERT(long? ID_Zapis, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, long? ID_Stan, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, DateTime? DatumDospijeceJednokratno, DateTime? DatumDospijeceUcesce, int? BrojObrok, DateTime? DatumDospijeceTrosakSud, long? ID_Subjekt, int? BrojObrokDospjelo, DateTime? DatumDospijeceObrok, bool? Pretvorba, string Napomena, bool? NadstojnickiAdaptiran, long? ID_UgovorStanOtkupStorno, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, bool? UgovorTuzen, bool? OtkupNadstojnicki, long? ID_DokumentVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var datumDospijeceJednokratnoParameter = DatumDospijeceJednokratno.HasValue ?
                new ObjectParameter("DatumDospijeceJednokratno", DatumDospijeceJednokratno) :
                new ObjectParameter("DatumDospijeceJednokratno", typeof(System.DateTime));
    
            var datumDospijeceUcesceParameter = DatumDospijeceUcesce.HasValue ?
                new ObjectParameter("DatumDospijeceUcesce", DatumDospijeceUcesce) :
                new ObjectParameter("DatumDospijeceUcesce", typeof(System.DateTime));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumDospijeceTrosakSudParameter = DatumDospijeceTrosakSud.HasValue ?
                new ObjectParameter("DatumDospijeceTrosakSud", DatumDospijeceTrosakSud) :
                new ObjectParameter("DatumDospijeceTrosakSud", typeof(System.DateTime));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var datumDospijeceObrokParameter = DatumDospijeceObrok.HasValue ?
                new ObjectParameter("DatumDospijeceObrok", DatumDospijeceObrok) :
                new ObjectParameter("DatumDospijeceObrok", typeof(System.DateTime));
    
            var pretvorbaParameter = Pretvorba.HasValue ?
                new ObjectParameter("Pretvorba", Pretvorba) :
                new ObjectParameter("Pretvorba", typeof(bool));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var iD_UgovorStanOtkupStornoParameter = ID_UgovorStanOtkupStorno.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupStorno", ID_UgovorStanOtkupStorno) :
                new ObjectParameter("ID_UgovorStanOtkupStorno", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var ugovorTuzenParameter = UgovorTuzen.HasValue ?
                new ObjectParameter("UgovorTuzen", UgovorTuzen) :
                new ObjectParameter("UgovorTuzen", typeof(bool));
    
            var otkupNadstojnickiParameter = OtkupNadstojnicki.HasValue ?
                new ObjectParameter("OtkupNadstojnicki", OtkupNadstojnicki) :
                new ObjectParameter("OtkupNadstojnicki", typeof(bool));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_INSERT", iD_ZapisParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iD_StanParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, datumDospijeceJednokratnoParameter, datumDospijeceUcesceParameter, brojObrokParameter, datumDospijeceTrosakSudParameter, iD_SubjektParameter, brojObrokDospjeloParameter, datumDospijeceObrokParameter, pretvorbaParameter, napomenaParameter, nadstojnickiAdaptiranParameter, iD_UgovorStanOtkupStornoParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter, ugovorTuzenParameter, otkupNadstojnickiParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_INSERT(long? ID_Zapis, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, long? ID_Stan, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, DateTime? DatumDospijeceJednokratno, DateTime? DatumDospijeceUcesce, int? BrojObrok, DateTime? DatumDospijeceTrosakSud, long? ID_Subjekt, int? BrojObrokDospjelo, DateTime? DatumDospijeceObrok, bool? Pretvorba, string Napomena, bool? NadstojnickiAdaptiran, long? ID_UgovorStanOtkupStorno, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, bool? UgovorTuzen, bool? OtkupNadstojnicki, long? ID_DokumentVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var datumDospijeceJednokratnoParameter = DatumDospijeceJednokratno.HasValue ?
                new ObjectParameter("DatumDospijeceJednokratno", DatumDospijeceJednokratno) :
                new ObjectParameter("DatumDospijeceJednokratno", typeof(System.DateTime));
    
            var datumDospijeceUcesceParameter = DatumDospijeceUcesce.HasValue ?
                new ObjectParameter("DatumDospijeceUcesce", DatumDospijeceUcesce) :
                new ObjectParameter("DatumDospijeceUcesce", typeof(System.DateTime));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumDospijeceTrosakSudParameter = DatumDospijeceTrosakSud.HasValue ?
                new ObjectParameter("DatumDospijeceTrosakSud", DatumDospijeceTrosakSud) :
                new ObjectParameter("DatumDospijeceTrosakSud", typeof(System.DateTime));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var datumDospijeceObrokParameter = DatumDospijeceObrok.HasValue ?
                new ObjectParameter("DatumDospijeceObrok", DatumDospijeceObrok) :
                new ObjectParameter("DatumDospijeceObrok", typeof(System.DateTime));
    
            var pretvorbaParameter = Pretvorba.HasValue ?
                new ObjectParameter("Pretvorba", Pretvorba) :
                new ObjectParameter("Pretvorba", typeof(bool));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var iD_UgovorStanOtkupStornoParameter = ID_UgovorStanOtkupStorno.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupStorno", ID_UgovorStanOtkupStorno) :
                new ObjectParameter("ID_UgovorStanOtkupStorno", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var ugovorTuzenParameter = UgovorTuzen.HasValue ?
                new ObjectParameter("UgovorTuzen", UgovorTuzen) :
                new ObjectParameter("UgovorTuzen", typeof(bool));
    
            var otkupNadstojnickiParameter = OtkupNadstojnicki.HasValue ?
                new ObjectParameter("OtkupNadstojnicki", OtkupNadstojnicki) :
                new ObjectParameter("OtkupNadstojnicki", typeof(bool));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_INSERT", mergeOption, iD_ZapisParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iD_StanParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, datumDospijeceJednokratnoParameter, datumDospijeceUcesceParameter, brojObrokParameter, datumDospijeceTrosakSudParameter, iD_SubjektParameter, brojObrokDospjeloParameter, datumDospijeceObrokParameter, pretvorbaParameter, napomenaParameter, nadstojnickiAdaptiranParameter, iD_UgovorStanOtkupStornoParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter, ugovorTuzenParameter, otkupNadstojnickiParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_SELECT(long? ID_UgovorStanOtkup)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_SELECT", iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_SELECT(long? ID_UgovorStanOtkup, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_SELECT", mergeOption, iD_UgovorStanOtkupParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_UPDATE(long? ID_UgovorStanOtkup, long? ID_Zapis, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, long? ID_Stan, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, DateTime? DatumDospijeceJednokratno, DateTime? DatumDospijeceUcesce, int? BrojObrok, DateTime? DatumDospijeceTrosakSud, long? ID_Subjekt, int? BrojObrokDospjelo, DateTime? DatumDospijeceObrok, bool? Pretvorba, string Napomena, bool? NadstojnickiAdaptiran, long? ID_UgovorStanOtkupStorno, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, bool? UgovorTuzen, bool? OtkupNadstojnicki, long? ID_DokumentVr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var datumDospijeceJednokratnoParameter = DatumDospijeceJednokratno.HasValue ?
                new ObjectParameter("DatumDospijeceJednokratno", DatumDospijeceJednokratno) :
                new ObjectParameter("DatumDospijeceJednokratno", typeof(System.DateTime));
    
            var datumDospijeceUcesceParameter = DatumDospijeceUcesce.HasValue ?
                new ObjectParameter("DatumDospijeceUcesce", DatumDospijeceUcesce) :
                new ObjectParameter("DatumDospijeceUcesce", typeof(System.DateTime));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumDospijeceTrosakSudParameter = DatumDospijeceTrosakSud.HasValue ?
                new ObjectParameter("DatumDospijeceTrosakSud", DatumDospijeceTrosakSud) :
                new ObjectParameter("DatumDospijeceTrosakSud", typeof(System.DateTime));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var datumDospijeceObrokParameter = DatumDospijeceObrok.HasValue ?
                new ObjectParameter("DatumDospijeceObrok", DatumDospijeceObrok) :
                new ObjectParameter("DatumDospijeceObrok", typeof(System.DateTime));
    
            var pretvorbaParameter = Pretvorba.HasValue ?
                new ObjectParameter("Pretvorba", Pretvorba) :
                new ObjectParameter("Pretvorba", typeof(bool));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var iD_UgovorStanOtkupStornoParameter = ID_UgovorStanOtkupStorno.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupStorno", ID_UgovorStanOtkupStorno) :
                new ObjectParameter("ID_UgovorStanOtkupStorno", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var ugovorTuzenParameter = UgovorTuzen.HasValue ?
                new ObjectParameter("UgovorTuzen", UgovorTuzen) :
                new ObjectParameter("UgovorTuzen", typeof(bool));
    
            var otkupNadstojnickiParameter = OtkupNadstojnicki.HasValue ?
                new ObjectParameter("OtkupNadstojnicki", OtkupNadstojnicki) :
                new ObjectParameter("OtkupNadstojnicki", typeof(bool));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_UPDATE", iD_UgovorStanOtkupParameter, iD_ZapisParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iD_StanParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, datumDospijeceJednokratnoParameter, datumDospijeceUcesceParameter, brojObrokParameter, datumDospijeceTrosakSudParameter, iD_SubjektParameter, brojObrokDospjeloParameter, datumDospijeceObrokParameter, pretvorbaParameter, napomenaParameter, nadstojnickiAdaptiranParameter, iD_UgovorStanOtkupStornoParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter, ugovorTuzenParameter, otkupNadstojnickiParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkup> USP_UgovorStanOtkup_UPDATE(long? ID_UgovorStanOtkup, long? ID_Zapis, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, long? ID_Stan, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, DateTime? DatumDospijeceJednokratno, DateTime? DatumDospijeceUcesce, int? BrojObrok, DateTime? DatumDospijeceTrosakSud, long? ID_Subjekt, int? BrojObrokDospjelo, DateTime? DatumDospijeceObrok, bool? Pretvorba, string Napomena, bool? NadstojnickiAdaptiran, long? ID_UgovorStanOtkupStorno, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, bool? NeZateznaKamata, bool? UgovorTuzen, bool? OtkupNadstojnicki, long? ID_DokumentVr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkup).Assembly);
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iD_StanParameter = ID_Stan.HasValue ?
                new ObjectParameter("ID_Stan", ID_Stan) :
                new ObjectParameter("ID_Stan", typeof(long));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var datumDospijeceJednokratnoParameter = DatumDospijeceJednokratno.HasValue ?
                new ObjectParameter("DatumDospijeceJednokratno", DatumDospijeceJednokratno) :
                new ObjectParameter("DatumDospijeceJednokratno", typeof(System.DateTime));
    
            var datumDospijeceUcesceParameter = DatumDospijeceUcesce.HasValue ?
                new ObjectParameter("DatumDospijeceUcesce", DatumDospijeceUcesce) :
                new ObjectParameter("DatumDospijeceUcesce", typeof(System.DateTime));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var datumDospijeceTrosakSudParameter = DatumDospijeceTrosakSud.HasValue ?
                new ObjectParameter("DatumDospijeceTrosakSud", DatumDospijeceTrosakSud) :
                new ObjectParameter("DatumDospijeceTrosakSud", typeof(System.DateTime));
    
            var iD_SubjektParameter = ID_Subjekt.HasValue ?
                new ObjectParameter("ID_Subjekt", ID_Subjekt) :
                new ObjectParameter("ID_Subjekt", typeof(long));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var datumDospijeceObrokParameter = DatumDospijeceObrok.HasValue ?
                new ObjectParameter("DatumDospijeceObrok", DatumDospijeceObrok) :
                new ObjectParameter("DatumDospijeceObrok", typeof(System.DateTime));
    
            var pretvorbaParameter = Pretvorba.HasValue ?
                new ObjectParameter("Pretvorba", Pretvorba) :
                new ObjectParameter("Pretvorba", typeof(bool));
    
            var napomenaParameter = Napomena != null ?
                new ObjectParameter("Napomena", Napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var iD_UgovorStanOtkupStornoParameter = ID_UgovorStanOtkupStorno.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupStorno", ID_UgovorStanOtkupStorno) :
                new ObjectParameter("ID_UgovorStanOtkupStorno", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var neZateznaKamataParameter = NeZateznaKamata.HasValue ?
                new ObjectParameter("NeZateznaKamata", NeZateznaKamata) :
                new ObjectParameter("NeZateznaKamata", typeof(bool));
    
            var ugovorTuzenParameter = UgovorTuzen.HasValue ?
                new ObjectParameter("UgovorTuzen", UgovorTuzen) :
                new ObjectParameter("UgovorTuzen", typeof(bool));
    
            var otkupNadstojnickiParameter = OtkupNadstojnicki.HasValue ?
                new ObjectParameter("OtkupNadstojnicki", OtkupNadstojnicki) :
                new ObjectParameter("OtkupNadstojnicki", typeof(bool));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkup>("USP_UgovorStanOtkup_UPDATE", mergeOption, iD_UgovorStanOtkupParameter, iD_ZapisParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iD_StanParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, datumDospijeceJednokratnoParameter, datumDospijeceUcesceParameter, brojObrokParameter, datumDospijeceTrosakSudParameter, iD_SubjektParameter, brojObrokDospjeloParameter, datumDospijeceObrokParameter, pretvorbaParameter, napomenaParameter, nadstojnickiAdaptiranParameter, iD_UgovorStanOtkupStornoParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, neZateznaKamataParameter, ugovorTuzenParameter, otkupNadstojnickiParameter, iD_DokumentVrParameter);
        }
    
        public virtual ObjectResult<int?> USP_UgovorStanOtkupAneks_DELETE(long? ID_UgovorStanOtkupAneks)
        {
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_UgovorStanOtkupAneks_DELETE", iD_UgovorStanOtkupAneksParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_INSERT(long? ID_Zapis, long? ID_UgovorStanOtkup, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, int? BrojObrok, int? BrojObrokDospjelo, bool? NadstojnickiAdaptiran, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? BrojObrokOd, long? ID_DokumentVr, int? Godina, int? Mjesec)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var brojObrokOdParameter = BrojObrokOd.HasValue ?
                new ObjectParameter("BrojObrokOd", BrojObrokOd) :
                new ObjectParameter("BrojObrokOd", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_INSERT", iD_ZapisParameter, iD_UgovorStanOtkupParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, brojObrokParameter, brojObrokDospjeloParameter, nadstojnickiAdaptiranParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, brojObrokOdParameter, iD_DokumentVrParameter, godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_INSERT(long? ID_Zapis, long? ID_UgovorStanOtkup, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, int? BrojObrok, int? BrojObrokDospjelo, bool? NadstojnickiAdaptiran, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? BrojObrokOd, long? ID_DokumentVr, int? Godina, int? Mjesec, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var brojObrokOdParameter = BrojObrokOd.HasValue ?
                new ObjectParameter("BrojObrokOd", BrojObrokOd) :
                new ObjectParameter("BrojObrokOd", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_INSERT", mergeOption, iD_ZapisParameter, iD_UgovorStanOtkupParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, brojObrokParameter, brojObrokDospjeloParameter, nadstojnickiAdaptiranParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, brojObrokOdParameter, iD_DokumentVrParameter, godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_SELECT(long? ID_UgovorStanOtkupAneks)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_SELECT", iD_UgovorStanOtkupAneksParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_SELECT(long? ID_UgovorStanOtkupAneks, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_SELECT", mergeOption, iD_UgovorStanOtkupAneksParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_UPDATE(long? ID_UgovorStanOtkupAneks, long? ID_Zapis, long? ID_UgovorStanOtkup, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, int? BrojObrok, int? BrojObrokDospjelo, bool? NadstojnickiAdaptiran, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? BrojObrokOd, long? ID_DokumentVr, int? Godina, int? Mjesec)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var brojObrokOdParameter = BrojObrokOd.HasValue ?
                new ObjectParameter("BrojObrokOd", BrojObrokOd) :
                new ObjectParameter("BrojObrokOd", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_UPDATE", iD_UgovorStanOtkupAneksParameter, iD_ZapisParameter, iD_UgovorStanOtkupParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, brojObrokParameter, brojObrokDospjeloParameter, nadstojnickiAdaptiranParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, brojObrokOdParameter, iD_DokumentVrParameter, godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<UgovorStanOtkupAneks> USP_UgovorStanOtkupAneks_UPDATE(long? ID_UgovorStanOtkupAneks, long? ID_Zapis, long? ID_UgovorStanOtkup, int? BrojUgovor, int? BrojAneks, int? BrojStorno, DateTime? Datum, decimal? IznosUcesce, decimal? IznosUcescePlaceno, decimal? IznosUcesceNeplaceno, decimal? IznosKredit, decimal? IznosKreditPlaceno, decimal? IznosKreditNeplaceno, decimal? IznosKreditRevalorizacija, decimal? IznosKreditRevalorizacijaPlaceno, decimal? IznosKreditRevalorizacijaNeplaceno, decimal? IznosKamata, decimal? IznosKamataPlaceno, decimal? IznosKamataNeplaceno, decimal? IznosKamataRevalorizacija, decimal? IznosKamataRevalorizacijaPlaceno, decimal? IznosKamataRevalorizacijaNeplaceno, decimal? IznosJednokratno, decimal? IznosJednokratnoPlaceno, decimal? IznosJednokratnoNeplaceno, decimal? IznosJednokratnoValuta, decimal? IznosJednokratnoValutaPlaceno, decimal? IznosJednokratnoValutaNeplaceno, decimal? IznosKreditObrok, decimal? IznosKamataObrok, decimal? IznosUkupnoObrok, decimal? IznosTrosakSud, decimal? IznosPovrat, string IDValuta, decimal? TecajDM, int? BrojObrok, int? BrojObrokDospjelo, bool? NadstojnickiAdaptiran, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, int? DokumentGrupa, int? DokumentVrsta, DateTime? DatumInsert, string OsobaInsert, DateTime? DatumUpdate, string OsobaUpdate, long? ID_OsobaInsert, long? ID_OsobaUpdate, int? BrojObrokOd, long? ID_DokumentVr, int? Godina, int? Mjesec, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UgovorStanOtkupAneks).Assembly);
    
            var iD_UgovorStanOtkupAneksParameter = ID_UgovorStanOtkupAneks.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkupAneks", ID_UgovorStanOtkupAneks) :
                new ObjectParameter("ID_UgovorStanOtkupAneks", typeof(long));
    
            var iD_ZapisParameter = ID_Zapis.HasValue ?
                new ObjectParameter("ID_Zapis", ID_Zapis) :
                new ObjectParameter("ID_Zapis", typeof(long));
    
            var iD_UgovorStanOtkupParameter = ID_UgovorStanOtkup.HasValue ?
                new ObjectParameter("ID_UgovorStanOtkup", ID_UgovorStanOtkup) :
                new ObjectParameter("ID_UgovorStanOtkup", typeof(long));
    
            var brojUgovorParameter = BrojUgovor.HasValue ?
                new ObjectParameter("BrojUgovor", BrojUgovor) :
                new ObjectParameter("BrojUgovor", typeof(int));
    
            var brojAneksParameter = BrojAneks.HasValue ?
                new ObjectParameter("BrojAneks", BrojAneks) :
                new ObjectParameter("BrojAneks", typeof(int));
    
            var brojStornoParameter = BrojStorno.HasValue ?
                new ObjectParameter("BrojStorno", BrojStorno) :
                new ObjectParameter("BrojStorno", typeof(int));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosUcesceParameter = IznosUcesce.HasValue ?
                new ObjectParameter("IznosUcesce", IznosUcesce) :
                new ObjectParameter("IznosUcesce", typeof(decimal));
    
            var iznosUcescePlacenoParameter = IznosUcescePlaceno.HasValue ?
                new ObjectParameter("IznosUcescePlaceno", IznosUcescePlaceno) :
                new ObjectParameter("IznosUcescePlaceno", typeof(decimal));
    
            var iznosUcesceNeplacenoParameter = IznosUcesceNeplaceno.HasValue ?
                new ObjectParameter("IznosUcesceNeplaceno", IznosUcesceNeplaceno) :
                new ObjectParameter("IznosUcesceNeplaceno", typeof(decimal));
    
            var iznosKreditParameter = IznosKredit.HasValue ?
                new ObjectParameter("IznosKredit", IznosKredit) :
                new ObjectParameter("IznosKredit", typeof(decimal));
    
            var iznosKreditPlacenoParameter = IznosKreditPlaceno.HasValue ?
                new ObjectParameter("IznosKreditPlaceno", IznosKreditPlaceno) :
                new ObjectParameter("IznosKreditPlaceno", typeof(decimal));
    
            var iznosKreditNeplacenoParameter = IznosKreditNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditNeplaceno", IznosKreditNeplaceno) :
                new ObjectParameter("IznosKreditNeplaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaParameter = IznosKreditRevalorizacija.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacija", IznosKreditRevalorizacija) :
                new ObjectParameter("IznosKreditRevalorizacija", typeof(decimal));
    
            var iznosKreditRevalorizacijaPlacenoParameter = IznosKreditRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", IznosKreditRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKreditRevalorizacijaNeplacenoParameter = IznosKreditRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", IznosKreditRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKreditRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosKamataParameter = IznosKamata.HasValue ?
                new ObjectParameter("IznosKamata", IznosKamata) :
                new ObjectParameter("IznosKamata", typeof(decimal));
    
            var iznosKamataPlacenoParameter = IznosKamataPlaceno.HasValue ?
                new ObjectParameter("IznosKamataPlaceno", IznosKamataPlaceno) :
                new ObjectParameter("IznosKamataPlaceno", typeof(decimal));
    
            var iznosKamataNeplacenoParameter = IznosKamataNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataNeplaceno", IznosKamataNeplaceno) :
                new ObjectParameter("IznosKamataNeplaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaParameter = IznosKamataRevalorizacija.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacija", IznosKamataRevalorizacija) :
                new ObjectParameter("IznosKamataRevalorizacija", typeof(decimal));
    
            var iznosKamataRevalorizacijaPlacenoParameter = IznosKamataRevalorizacijaPlaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", IznosKamataRevalorizacijaPlaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaPlaceno", typeof(decimal));
    
            var iznosKamataRevalorizacijaNeplacenoParameter = IznosKamataRevalorizacijaNeplaceno.HasValue ?
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", IznosKamataRevalorizacijaNeplaceno) :
                new ObjectParameter("IznosKamataRevalorizacijaNeplaceno", typeof(decimal));
    
            var iznosJednokratnoParameter = IznosJednokratno.HasValue ?
                new ObjectParameter("IznosJednokratno", IznosJednokratno) :
                new ObjectParameter("IznosJednokratno", typeof(decimal));
    
            var iznosJednokratnoPlacenoParameter = IznosJednokratnoPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoPlaceno", IznosJednokratnoPlaceno) :
                new ObjectParameter("IznosJednokratnoPlaceno", typeof(decimal));
    
            var iznosJednokratnoNeplacenoParameter = IznosJednokratnoNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoNeplaceno", IznosJednokratnoNeplaceno) :
                new ObjectParameter("IznosJednokratnoNeplaceno", typeof(decimal));
    
            var iznosJednokratnoValutaParameter = IznosJednokratnoValuta.HasValue ?
                new ObjectParameter("IznosJednokratnoValuta", IznosJednokratnoValuta) :
                new ObjectParameter("IznosJednokratnoValuta", typeof(decimal));
    
            var iznosJednokratnoValutaPlacenoParameter = IznosJednokratnoValutaPlaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaPlaceno", IznosJednokratnoValutaPlaceno) :
                new ObjectParameter("IznosJednokratnoValutaPlaceno", typeof(decimal));
    
            var iznosJednokratnoValutaNeplacenoParameter = IznosJednokratnoValutaNeplaceno.HasValue ?
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", IznosJednokratnoValutaNeplaceno) :
                new ObjectParameter("IznosJednokratnoValutaNeplaceno", typeof(decimal));
    
            var iznosKreditObrokParameter = IznosKreditObrok.HasValue ?
                new ObjectParameter("IznosKreditObrok", IznosKreditObrok) :
                new ObjectParameter("IznosKreditObrok", typeof(decimal));
    
            var iznosKamataObrokParameter = IznosKamataObrok.HasValue ?
                new ObjectParameter("IznosKamataObrok", IznosKamataObrok) :
                new ObjectParameter("IznosKamataObrok", typeof(decimal));
    
            var iznosUkupnoObrokParameter = IznosUkupnoObrok.HasValue ?
                new ObjectParameter("IznosUkupnoObrok", IznosUkupnoObrok) :
                new ObjectParameter("IznosUkupnoObrok", typeof(decimal));
    
            var iznosTrosakSudParameter = IznosTrosakSud.HasValue ?
                new ObjectParameter("IznosTrosakSud", IznosTrosakSud) :
                new ObjectParameter("IznosTrosakSud", typeof(decimal));
    
            var iznosPovratParameter = IznosPovrat.HasValue ?
                new ObjectParameter("IznosPovrat", IznosPovrat) :
                new ObjectParameter("IznosPovrat", typeof(decimal));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var tecajDMParameter = TecajDM.HasValue ?
                new ObjectParameter("TecajDM", TecajDM) :
                new ObjectParameter("TecajDM", typeof(decimal));
    
            var brojObrokParameter = BrojObrok.HasValue ?
                new ObjectParameter("BrojObrok", BrojObrok) :
                new ObjectParameter("BrojObrok", typeof(int));
    
            var brojObrokDospjeloParameter = BrojObrokDospjelo.HasValue ?
                new ObjectParameter("BrojObrokDospjelo", BrojObrokDospjelo) :
                new ObjectParameter("BrojObrokDospjelo", typeof(int));
    
            var nadstojnickiAdaptiranParameter = NadstojnickiAdaptiran.HasValue ?
                new ObjectParameter("NadstojnickiAdaptiran", NadstojnickiAdaptiran) :
                new ObjectParameter("NadstojnickiAdaptiran", typeof(bool));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var datumInsertParameter = DatumInsert.HasValue ?
                new ObjectParameter("DatumInsert", DatumInsert) :
                new ObjectParameter("DatumInsert", typeof(System.DateTime));
    
            var osobaInsertParameter = OsobaInsert != null ?
                new ObjectParameter("OsobaInsert", OsobaInsert) :
                new ObjectParameter("OsobaInsert", typeof(string));
    
            var datumUpdateParameter = DatumUpdate.HasValue ?
                new ObjectParameter("DatumUpdate", DatumUpdate) :
                new ObjectParameter("DatumUpdate", typeof(System.DateTime));
    
            var osobaUpdateParameter = OsobaUpdate != null ?
                new ObjectParameter("OsobaUpdate", OsobaUpdate) :
                new ObjectParameter("OsobaUpdate", typeof(string));
    
            var iD_OsobaInsertParameter = ID_OsobaInsert.HasValue ?
                new ObjectParameter("ID_OsobaInsert", ID_OsobaInsert) :
                new ObjectParameter("ID_OsobaInsert", typeof(long));
    
            var iD_OsobaUpdateParameter = ID_OsobaUpdate.HasValue ?
                new ObjectParameter("ID_OsobaUpdate", ID_OsobaUpdate) :
                new ObjectParameter("ID_OsobaUpdate", typeof(long));
    
            var brojObrokOdParameter = BrojObrokOd.HasValue ?
                new ObjectParameter("BrojObrokOd", BrojObrokOd) :
                new ObjectParameter("BrojObrokOd", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mjesecParameter = Mjesec.HasValue ?
                new ObjectParameter("Mjesec", Mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgovorStanOtkupAneks>("USP_UgovorStanOtkupAneks_UPDATE", mergeOption, iD_UgovorStanOtkupAneksParameter, iD_ZapisParameter, iD_UgovorStanOtkupParameter, brojUgovorParameter, brojAneksParameter, brojStornoParameter, datumParameter, iznosUcesceParameter, iznosUcescePlacenoParameter, iznosUcesceNeplacenoParameter, iznosKreditParameter, iznosKreditPlacenoParameter, iznosKreditNeplacenoParameter, iznosKreditRevalorizacijaParameter, iznosKreditRevalorizacijaPlacenoParameter, iznosKreditRevalorizacijaNeplacenoParameter, iznosKamataParameter, iznosKamataPlacenoParameter, iznosKamataNeplacenoParameter, iznosKamataRevalorizacijaParameter, iznosKamataRevalorizacijaPlacenoParameter, iznosKamataRevalorizacijaNeplacenoParameter, iznosJednokratnoParameter, iznosJednokratnoPlacenoParameter, iznosJednokratnoNeplacenoParameter, iznosJednokratnoValutaParameter, iznosJednokratnoValutaPlacenoParameter, iznosJednokratnoValutaNeplacenoParameter, iznosKreditObrokParameter, iznosKamataObrokParameter, iznosUkupnoObrokParameter, iznosTrosakSudParameter, iznosPovratParameter, iDValutaParameter, tecajDMParameter, brojObrokParameter, brojObrokDospjeloParameter, nadstojnickiAdaptiranParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, dokumentGrupaParameter, dokumentVrstaParameter, datumInsertParameter, osobaInsertParameter, datumUpdateParameter, osobaUpdateParameter, iD_OsobaInsertParameter, iD_OsobaUpdateParameter, brojObrokOdParameter, iD_DokumentVrParameter, godinaParameter, mjesecParameter);
        }
    
        public virtual ObjectResult<int?> USP_DokumentGr_DELETE(int? IDDokumentGr)
        {
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_DokumentGr_DELETE", iDDokumentGrParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_INSERT", oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_INSERT(string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_INSERT", mergeOption, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_SELECT(int? IDDokumentGr)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_SELECT", iDDokumentGrParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_SELECT(int? IDDokumentGr, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_SELECT", mergeOption, iDDokumentGrParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_UPDATE(int? IDDokumentGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_UPDATE", iDDokumentGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<DokumentGr> USP_DokumentGr_UPDATE(int? IDDokumentGr, string Oznaka, string Naziv, string NazivKr, string Kratica, string Opis, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DokumentGr).Assembly);
    
            var iDDokumentGrParameter = IDDokumentGr.HasValue ?
                new ObjectParameter("IDDokumentGr", IDDokumentGr) :
                new ObjectParameter("IDDokumentGr", typeof(int));
    
            var oznakaParameter = Oznaka != null ?
                new ObjectParameter("Oznaka", Oznaka) :
                new ObjectParameter("Oznaka", typeof(string));
    
            var nazivParameter = Naziv != null ?
                new ObjectParameter("Naziv", Naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var nazivKrParameter = NazivKr != null ?
                new ObjectParameter("NazivKr", NazivKr) :
                new ObjectParameter("NazivKr", typeof(string));
    
            var kraticaParameter = Kratica != null ?
                new ObjectParameter("Kratica", Kratica) :
                new ObjectParameter("Kratica", typeof(string));
    
            var opisParameter = Opis != null ?
                new ObjectParameter("Opis", Opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DokumentGr>("USP_DokumentGr_UPDATE", mergeOption, iDDokumentGrParameter, oznakaParameter, nazivParameter, nazivKrParameter, kraticaParameter, opisParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObveznicaJavnogDuga_DELETE(long? ID_ObveznicaJavnogDuga)
        {
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObveznicaJavnogDuga_DELETE", iD_ObveznicaJavnogDugaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_INSERT(string Broj, DateTime? Datum, int? DokumentVrsta, int? DokumentGrupa, long? ID_DokumentVr, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_INSERT", brojParameter, datumParameter, dokumentVrstaParameter, dokumentGrupaParameter, iD_DokumentVrParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_INSERT(string Broj, DateTime? Datum, int? DokumentVrsta, int? DokumentGrupa, long? ID_DokumentVr, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_INSERT", mergeOption, brojParameter, datumParameter, dokumentVrstaParameter, dokumentGrupaParameter, iD_DokumentVrParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_SELECT(long? ID_ObveznicaJavnogDuga)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_SELECT", iD_ObveznicaJavnogDugaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_SELECT(long? ID_ObveznicaJavnogDuga, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_SELECT", mergeOption, iD_ObveznicaJavnogDugaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_UPDATE(long? ID_ObveznicaJavnogDuga, string Broj, DateTime? Datum, int? DokumentVrsta, int? DokumentGrupa, long? ID_DokumentVr, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_UPDATE", iD_ObveznicaJavnogDugaParameter, brojParameter, datumParameter, dokumentVrstaParameter, dokumentGrupaParameter, iD_DokumentVrParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDuga> USP_ObveznicaJavnogDuga_UPDATE(long? ID_ObveznicaJavnogDuga, string Broj, DateTime? Datum, int? DokumentVrsta, int? DokumentGrupa, long? ID_DokumentVr, int? TemeljnicaGodina, int? TemeljnicaVrsta, int? TemeljnicaBroj, long? ID_Temeljnica, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDuga).Assembly);
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var brojParameter = Broj != null ?
                new ObjectParameter("Broj", Broj) :
                new ObjectParameter("Broj", typeof(string));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var dokumentVrstaParameter = DokumentVrsta.HasValue ?
                new ObjectParameter("DokumentVrsta", DokumentVrsta) :
                new ObjectParameter("DokumentVrsta", typeof(int));
    
            var dokumentGrupaParameter = DokumentGrupa.HasValue ?
                new ObjectParameter("DokumentGrupa", DokumentGrupa) :
                new ObjectParameter("DokumentGrupa", typeof(int));
    
            var iD_DokumentVrParameter = ID_DokumentVr.HasValue ?
                new ObjectParameter("ID_DokumentVr", ID_DokumentVr) :
                new ObjectParameter("ID_DokumentVr", typeof(long));
    
            var temeljnicaGodinaParameter = TemeljnicaGodina.HasValue ?
                new ObjectParameter("TemeljnicaGodina", TemeljnicaGodina) :
                new ObjectParameter("TemeljnicaGodina", typeof(int));
    
            var temeljnicaVrstaParameter = TemeljnicaVrsta.HasValue ?
                new ObjectParameter("TemeljnicaVrsta", TemeljnicaVrsta) :
                new ObjectParameter("TemeljnicaVrsta", typeof(int));
    
            var temeljnicaBrojParameter = TemeljnicaBroj.HasValue ?
                new ObjectParameter("TemeljnicaBroj", TemeljnicaBroj) :
                new ObjectParameter("TemeljnicaBroj", typeof(int));
    
            var iD_TemeljnicaParameter = ID_Temeljnica.HasValue ?
                new ObjectParameter("ID_Temeljnica", ID_Temeljnica) :
                new ObjectParameter("ID_Temeljnica", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDuga>("USP_ObveznicaJavnogDuga_UPDATE", mergeOption, iD_ObveznicaJavnogDugaParameter, brojParameter, datumParameter, dokumentVrstaParameter, dokumentGrupaParameter, iD_DokumentVrParameter, temeljnicaGodinaParameter, temeljnicaVrstaParameter, temeljnicaBrojParameter, iD_TemeljnicaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ObveznicaJavnogDugaIspravak_DELETE(long? ID_ObveznicaJavnogDugaIspravak)
        {
            var iD_ObveznicaJavnogDugaIspravakParameter = ID_ObveznicaJavnogDugaIspravak.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", ID_ObveznicaJavnogDugaIspravak) :
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ObveznicaJavnogDugaIspravak_DELETE", iD_ObveznicaJavnogDugaIspravakParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_INSERT(string GodinaIzvod, string RacunIzvod, string RacunVrIzvod, string BrojIzvod, string BrojIzvodSt, string IDValuta, long? ID_ObveznicaJavnogDuga, int? RedniBroj, bool? Aktivno, decimal? Iznos, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var godinaIzvodParameter = GodinaIzvod != null ?
                new ObjectParameter("GodinaIzvod", GodinaIzvod) :
                new ObjectParameter("GodinaIzvod", typeof(string));
    
            var racunIzvodParameter = RacunIzvod != null ?
                new ObjectParameter("RacunIzvod", RacunIzvod) :
                new ObjectParameter("RacunIzvod", typeof(string));
    
            var racunVrIzvodParameter = RacunVrIzvod != null ?
                new ObjectParameter("RacunVrIzvod", RacunVrIzvod) :
                new ObjectParameter("RacunVrIzvod", typeof(string));
    
            var brojIzvodParameter = BrojIzvod != null ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(string));
    
            var brojIzvodStParameter = BrojIzvodSt != null ?
                new ObjectParameter("BrojIzvodSt", BrojIzvodSt) :
                new ObjectParameter("BrojIzvodSt", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_INSERT", godinaIzvodParameter, racunIzvodParameter, racunVrIzvodParameter, brojIzvodParameter, brojIzvodStParameter, iDValutaParameter, iD_ObveznicaJavnogDugaParameter, redniBrojParameter, aktivnoParameter, iznosParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_INSERT(string GodinaIzvod, string RacunIzvod, string RacunVrIzvod, string BrojIzvod, string BrojIzvodSt, string IDValuta, long? ID_ObveznicaJavnogDuga, int? RedniBroj, bool? Aktivno, decimal? Iznos, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var godinaIzvodParameter = GodinaIzvod != null ?
                new ObjectParameter("GodinaIzvod", GodinaIzvod) :
                new ObjectParameter("GodinaIzvod", typeof(string));
    
            var racunIzvodParameter = RacunIzvod != null ?
                new ObjectParameter("RacunIzvod", RacunIzvod) :
                new ObjectParameter("RacunIzvod", typeof(string));
    
            var racunVrIzvodParameter = RacunVrIzvod != null ?
                new ObjectParameter("RacunVrIzvod", RacunVrIzvod) :
                new ObjectParameter("RacunVrIzvod", typeof(string));
    
            var brojIzvodParameter = BrojIzvod != null ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(string));
    
            var brojIzvodStParameter = BrojIzvodSt != null ?
                new ObjectParameter("BrojIzvodSt", BrojIzvodSt) :
                new ObjectParameter("BrojIzvodSt", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_INSERT", mergeOption, godinaIzvodParameter, racunIzvodParameter, racunVrIzvodParameter, brojIzvodParameter, brojIzvodStParameter, iDValutaParameter, iD_ObveznicaJavnogDugaParameter, redniBrojParameter, aktivnoParameter, iznosParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_SELECT(long? ID_ObveznicaJavnogDugaIspravak)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var iD_ObveznicaJavnogDugaIspravakParameter = ID_ObveznicaJavnogDugaIspravak.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", ID_ObveznicaJavnogDugaIspravak) :
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_SELECT", iD_ObveznicaJavnogDugaIspravakParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_SELECT(long? ID_ObveznicaJavnogDugaIspravak, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var iD_ObveznicaJavnogDugaIspravakParameter = ID_ObveznicaJavnogDugaIspravak.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", ID_ObveznicaJavnogDugaIspravak) :
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_SELECT", mergeOption, iD_ObveznicaJavnogDugaIspravakParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_UPDATE(long? ID_ObveznicaJavnogDugaIspravak, string GodinaIzvod, string RacunIzvod, string RacunVrIzvod, string BrojIzvod, string BrojIzvodSt, string IDValuta, long? ID_ObveznicaJavnogDuga, int? RedniBroj, bool? Aktivno, decimal? Iznos, decimal? IznosValuta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var iD_ObveznicaJavnogDugaIspravakParameter = ID_ObveznicaJavnogDugaIspravak.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", ID_ObveznicaJavnogDugaIspravak) :
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", typeof(long));
    
            var godinaIzvodParameter = GodinaIzvod != null ?
                new ObjectParameter("GodinaIzvod", GodinaIzvod) :
                new ObjectParameter("GodinaIzvod", typeof(string));
    
            var racunIzvodParameter = RacunIzvod != null ?
                new ObjectParameter("RacunIzvod", RacunIzvod) :
                new ObjectParameter("RacunIzvod", typeof(string));
    
            var racunVrIzvodParameter = RacunVrIzvod != null ?
                new ObjectParameter("RacunVrIzvod", RacunVrIzvod) :
                new ObjectParameter("RacunVrIzvod", typeof(string));
    
            var brojIzvodParameter = BrojIzvod != null ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(string));
    
            var brojIzvodStParameter = BrojIzvodSt != null ?
                new ObjectParameter("BrojIzvodSt", BrojIzvodSt) :
                new ObjectParameter("BrojIzvodSt", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_UPDATE", iD_ObveznicaJavnogDugaIspravakParameter, godinaIzvodParameter, racunIzvodParameter, racunVrIzvodParameter, brojIzvodParameter, brojIzvodStParameter, iDValutaParameter, iD_ObveznicaJavnogDugaParameter, redniBrojParameter, aktivnoParameter, iznosParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<ObveznicaJavnogDugaIspravak> USP_ObveznicaJavnogDugaIspravak_UPDATE(long? ID_ObveznicaJavnogDugaIspravak, string GodinaIzvod, string RacunIzvod, string RacunVrIzvod, string BrojIzvod, string BrojIzvodSt, string IDValuta, long? ID_ObveznicaJavnogDuga, int? RedniBroj, bool? Aktivno, decimal? Iznos, decimal? IznosValuta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ObveznicaJavnogDugaIspravak).Assembly);
    
            var iD_ObveznicaJavnogDugaIspravakParameter = ID_ObveznicaJavnogDugaIspravak.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", ID_ObveznicaJavnogDugaIspravak) :
                new ObjectParameter("ID_ObveznicaJavnogDugaIspravak", typeof(long));
    
            var godinaIzvodParameter = GodinaIzvod != null ?
                new ObjectParameter("GodinaIzvod", GodinaIzvod) :
                new ObjectParameter("GodinaIzvod", typeof(string));
    
            var racunIzvodParameter = RacunIzvod != null ?
                new ObjectParameter("RacunIzvod", RacunIzvod) :
                new ObjectParameter("RacunIzvod", typeof(string));
    
            var racunVrIzvodParameter = RacunVrIzvod != null ?
                new ObjectParameter("RacunVrIzvod", RacunVrIzvod) :
                new ObjectParameter("RacunVrIzvod", typeof(string));
    
            var brojIzvodParameter = BrojIzvod != null ?
                new ObjectParameter("BrojIzvod", BrojIzvod) :
                new ObjectParameter("BrojIzvod", typeof(string));
    
            var brojIzvodStParameter = BrojIzvodSt != null ?
                new ObjectParameter("BrojIzvodSt", BrojIzvodSt) :
                new ObjectParameter("BrojIzvodSt", typeof(string));
    
            var iDValutaParameter = IDValuta != null ?
                new ObjectParameter("IDValuta", IDValuta) :
                new ObjectParameter("IDValuta", typeof(string));
    
            var iD_ObveznicaJavnogDugaParameter = ID_ObveznicaJavnogDuga.HasValue ?
                new ObjectParameter("ID_ObveznicaJavnogDuga", ID_ObveznicaJavnogDuga) :
                new ObjectParameter("ID_ObveznicaJavnogDuga", typeof(long));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var aktivnoParameter = Aktivno.HasValue ?
                new ObjectParameter("Aktivno", Aktivno) :
                new ObjectParameter("Aktivno", typeof(bool));
    
            var iznosParameter = Iznos.HasValue ?
                new ObjectParameter("Iznos", Iznos) :
                new ObjectParameter("Iznos", typeof(decimal));
    
            var iznosValutaParameter = IznosValuta.HasValue ?
                new ObjectParameter("IznosValuta", IznosValuta) :
                new ObjectParameter("IznosValuta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObveznicaJavnogDugaIspravak>("USP_ObveznicaJavnogDugaIspravak_UPDATE", mergeOption, iD_ObveznicaJavnogDugaIspravakParameter, godinaIzvodParameter, racunIzvodParameter, racunVrIzvodParameter, brojIzvodParameter, brojIzvodStParameter, iDValutaParameter, iD_ObveznicaJavnogDugaParameter, redniBrojParameter, aktivnoParameter, iznosParameter, iznosValutaParameter);
        }
    
        public virtual ObjectResult<int?> USP_ZateznaKamata_DELETE(long? ID_ZateznaKamata)
        {
            var iD_ZateznaKamataParameter = ID_ZateznaKamata.HasValue ?
                new ObjectParameter("ID_ZateznaKamata", ID_ZateznaKamata) :
                new ObjectParameter("ID_ZateznaKamata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("USP_ZateznaKamata_DELETE", iD_ZateznaKamataParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_INSERT(DateTime? DatumOd, decimal? Stopa)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_INSERT", datumOdParameter, stopaParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_INSERT(DateTime? DatumOd, decimal? Stopa, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_INSERT", mergeOption, datumOdParameter, stopaParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_SELECT(long? ID_ZateznaKamata)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var iD_ZateznaKamataParameter = ID_ZateznaKamata.HasValue ?
                new ObjectParameter("ID_ZateznaKamata", ID_ZateznaKamata) :
                new ObjectParameter("ID_ZateznaKamata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_SELECT", iD_ZateznaKamataParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_SELECT(long? ID_ZateznaKamata, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var iD_ZateznaKamataParameter = ID_ZateznaKamata.HasValue ?
                new ObjectParameter("ID_ZateznaKamata", ID_ZateznaKamata) :
                new ObjectParameter("ID_ZateznaKamata", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_SELECT", mergeOption, iD_ZateznaKamataParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_UPDATE(long? ID_ZateznaKamata, DateTime? DatumOd, decimal? Stopa)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var iD_ZateznaKamataParameter = ID_ZateznaKamata.HasValue ?
                new ObjectParameter("ID_ZateznaKamata", ID_ZateznaKamata) :
                new ObjectParameter("ID_ZateznaKamata", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_UPDATE", iD_ZateznaKamataParameter, datumOdParameter, stopaParameter);
        }
    
        public virtual ObjectResult<ZateznaKamata> USP_ZateznaKamata_UPDATE(long? ID_ZateznaKamata, DateTime? DatumOd, decimal? Stopa, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ZateznaKamata).Assembly);
    
            var iD_ZateznaKamataParameter = ID_ZateznaKamata.HasValue ?
                new ObjectParameter("ID_ZateznaKamata", ID_ZateznaKamata) :
                new ObjectParameter("ID_ZateznaKamata", typeof(long));
    
            var datumOdParameter = DatumOd.HasValue ?
                new ObjectParameter("DatumOd", DatumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var stopaParameter = Stopa.HasValue ?
                new ObjectParameter("Stopa", Stopa) :
                new ObjectParameter("Stopa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZateznaKamata>("USP_ZateznaKamata_UPDATE", mergeOption, iD_ZateznaKamataParameter, datumOdParameter, stopaParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> C_USP_TecajListaSt_INSERT(long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, string XMLdataString)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("C_USP_TecajListaSt_INSERT", iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter, xMLdataStringParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> C_USP_TecajListaSt_INSERT(long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, string XMLdataString, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("C_USP_TecajListaSt_INSERT", mergeOption, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter, xMLdataStringParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> C_USP_TecajListaSt_UPDATE(long? ID_TecajListaSt, long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, string XMLdataString)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("C_USP_TecajListaSt_UPDATE", iD_TecajListaStParameter, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter, xMLdataStringParameter);
        }
    
        public virtual ObjectResult<TecajListaSt> C_USP_TecajListaSt_UPDATE(long? ID_TecajListaSt, long? ID_TecajLista, string IDDrzavaIz, string IDDrzavaU, string IDValutaIz, string IDValutaU, int? BrojJedinica, string XMLdataString, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajListaSt).Assembly);
    
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            var iD_TecajListaParameter = ID_TecajLista.HasValue ?
                new ObjectParameter("ID_TecajLista", ID_TecajLista) :
                new ObjectParameter("ID_TecajLista", typeof(long));
    
            var iDDrzavaIzParameter = IDDrzavaIz != null ?
                new ObjectParameter("IDDrzavaIz", IDDrzavaIz) :
                new ObjectParameter("IDDrzavaIz", typeof(string));
    
            var iDDrzavaUParameter = IDDrzavaU != null ?
                new ObjectParameter("IDDrzavaU", IDDrzavaU) :
                new ObjectParameter("IDDrzavaU", typeof(string));
    
            var iDValutaIzParameter = IDValutaIz != null ?
                new ObjectParameter("IDValutaIz", IDValutaIz) :
                new ObjectParameter("IDValutaIz", typeof(string));
    
            var iDValutaUParameter = IDValutaU != null ?
                new ObjectParameter("IDValutaU", IDValutaU) :
                new ObjectParameter("IDValutaU", typeof(string));
    
            var brojJedinicaParameter = BrojJedinica.HasValue ?
                new ObjectParameter("BrojJedinica", BrojJedinica) :
                new ObjectParameter("BrojJedinica", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajListaSt>("C_USP_TecajListaSt_UPDATE", mergeOption, iD_TecajListaStParameter, iD_TecajListaParameter, iDDrzavaIzParameter, iDDrzavaUParameter, iDValutaIzParameter, iDValutaUParameter, brojJedinicaParameter, xMLdataStringParameter);
        }
    
        public virtual ObjectResult<int?> C_USP_TecajListaSt_DELETE(long? ID_TecajListaSt)
        {
            var iD_TecajListaStParameter = ID_TecajListaSt.HasValue ?
                new ObjectParameter("ID_TecajListaSt", ID_TecajListaSt) :
                new ObjectParameter("ID_TecajListaSt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<int?>("C_USP_TecajListaSt_DELETE", iD_TecajListaStParameter);
        }
    
        public virtual ObjectResult<TecajLista> C_USP_TecajListaDownload_INSERT(long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj, string XMLdataString)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("C_USP_TecajListaDownload_INSERT", iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter, xMLdataStringParameter);
        }
    
        public virtual ObjectResult<TecajLista> C_USP_TecajListaDownload_INSERT(long? ID_Banka, DateTime? Datum, int? RedniBroj, int? Godina, int? GodinaRedniBroj, string XMLdataString, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(TecajLista).Assembly);
    
            var iD_BankaParameter = ID_Banka.HasValue ?
                new ObjectParameter("ID_Banka", ID_Banka) :
                new ObjectParameter("ID_Banka", typeof(long));
    
            var datumParameter = Datum.HasValue ?
                new ObjectParameter("Datum", Datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var redniBrojParameter = RedniBroj.HasValue ?
                new ObjectParameter("RedniBroj", RedniBroj) :
                new ObjectParameter("RedniBroj", typeof(int));
    
            var godinaParameter = Godina.HasValue ?
                new ObjectParameter("Godina", Godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var godinaRedniBrojParameter = GodinaRedniBroj.HasValue ?
                new ObjectParameter("GodinaRedniBroj", GodinaRedniBroj) :
                new ObjectParameter("GodinaRedniBroj", typeof(int));
    
            var xMLdataStringParameter = XMLdataString != null ?
                new ObjectParameter("XMLdataString", XMLdataString) :
                new ObjectParameter("XMLdataString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TecajLista>("C_USP_TecajListaDownload_INSERT", mergeOption, iD_BankaParameter, datumParameter, redniBrojParameter, godinaParameter, godinaRedniBrojParameter, xMLdataStringParameter);
        }
    }
}
