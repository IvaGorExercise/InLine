//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InLine.UI.Web.T4.FormFormattedTemplate
{
    
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Collections.Specialized;
    using System.Linq;
    using System.Web;
    using System.ComponentModel;
    using Lib.Web.Mvc.JQuery.JqGrid.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid;
    using System.ComponentModel.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid.Constants;
    using System.Web.Mvc;
    using InLine;
    using InLine.UI.Web.T4.FormFormattedTemplate;
    using InLine.UI.Web.Helper;
    
    
    public partial class ShemaStFormFormattedBase
    {
    	#region Properities
    
        [Required(ErrorMessage = AtributClass.ShemaSt.ID_ShemaSt.Required)]
    	[DisplayName(AtributClass.ShemaSt.ID_ShemaSt.DisplayName)]
        	public long ID_ShemaSt { get; set; }
    
        [Required(ErrorMessage = AtributClass.ShemaSt.ID_Shema.Required)]
    	[DisplayName(AtributClass.ShemaSt.ID_Shema.DisplayName)]
       	public long ID_Shema { get; set; }
    
        [Required(ErrorMessage = AtributClass.ShemaSt.ID_KontniPlanSt.Required)]
    	[DisplayName(AtributClass.ShemaSt.ID_KontniPlanSt.DisplayName)]
       	public long ID_KontniPlanSt { get; set; }
    
        [Required(ErrorMessage = AtributClass.ShemaSt.Potrazuje.Required)]
    	[DisplayName(AtributClass.ShemaSt.Potrazuje.DisplayName)]
       	public bool Potrazuje { get; set; }
    
        [Required(ErrorMessage = AtributClass.ShemaSt.Negativno.Required)]
    	[DisplayName(AtributClass.ShemaSt.Negativno.DisplayName)]
       	public bool Negativno { get; set; }
    
        [Required(ErrorMessage = AtributClass.ShemaSt.Sintetika.Required)]
    	[DisplayName(AtributClass.ShemaSt.Sintetika.DisplayName)]
       	public bool Sintetika { get; set; }
    
    	#endregion
    
    	#region Constructor
    	
    	public ShemaStFormFormattedBase()
        { }
    	
    	public ShemaStFormFormattedBase(Model.Data.ShemaSt formformated)
    	{
    	    this.ID_ShemaSt = formformated.ID_ShemaSt;
    	    this.ID_Shema = formformated.ID_Shema;
    	    this.ID_KontniPlanSt = formformated.ID_KontniPlanSt;
    	    this.Potrazuje = formformated.Potrazuje;
    	    this.Negativno = formformated.Negativno;
    	    this.Sintetika = formformated.Sintetika;
    	}
    
    	/*
    	    mymodel.ID_ShemaSt = model.ID_ShemaSt;
    	    mymodel.ID_Shema = model.ID_Shema;
    	    mymodel.ID_KontniPlanSt = model.ID_KontniPlanSt;
    	    mymodel.Potrazuje = model.Potrazuje;
    	    mymodel.Negativno = model.Negativno;
    	    mymodel.Sintetika = model.Sintetika;
    		
    	*/
    
    		#endregion
    	
    }
}
