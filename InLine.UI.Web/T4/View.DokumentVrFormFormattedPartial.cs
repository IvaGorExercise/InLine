//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InLine.UI.Web.T4.FormFormattedTemplate.View
{
    
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Collections.Specialized;
    using System.Linq;
    using System.Web;
    using System.ComponentModel;
    using Lib.Web.Mvc.JQuery.JqGrid.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid;
    using System.ComponentModel.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid.Constants;
    using System.Web.Mvc;
    using InLine;
    using InLine.UI.Web.T4.FormFormattedTemplate;
    using InLine.UI.Web.Helper;
    
    
    public partial class DokumentVrFormFormattedBase
    {
    	#region Properities
    
        [Required(ErrorMessage = AtributClass.DokumentVr.ID_DokumentVr.Required)]
    	[DisplayName(AtributClass.DokumentVr.ID_DokumentVr.DisplayName)]
        	public long ID_DokumentVr { get; set; }
    
    	
        [StringLength(20, ErrorMessage = AtributClass.DokumentVr.Oznaka.StringLength)]
        [Required(ErrorMessage = AtributClass.DokumentVr.Oznaka.Required)]
    	[DisplayName(AtributClass.DokumentVr.Oznaka.DisplayName)]
       	public string Oznaka { get; set; }
    
    	
        [StringLength(255, ErrorMessage = AtributClass.DokumentVr.Naziv.StringLength)]
        [Required(ErrorMessage = AtributClass.DokumentVr.Naziv.Required)]
    	[DisplayName(AtributClass.DokumentVr.Naziv.DisplayName)]
       	public string Naziv { get; set; }
    
    	
        [StringLength(30, ErrorMessage = AtributClass.DokumentVr.NazivKr.StringLength)]
        [Required(ErrorMessage = AtributClass.DokumentVr.NazivKr.Required)]
    	[DisplayName(AtributClass.DokumentVr.NazivKr.DisplayName)]
       	public string NazivKr { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.DokumentVr.Kratica.StringLength)]
        [Required(ErrorMessage = AtributClass.DokumentVr.Kratica.Required)]
    	[DisplayName(AtributClass.DokumentVr.Kratica.DisplayName)]
       	public string Kratica { get; set; }
    
    	
        [StringLength(255, ErrorMessage = AtributClass.DokumentVr.Opis.StringLength)]
        [Required(ErrorMessage = AtributClass.DokumentVr.Opis.Required)]
    	[DisplayName(AtributClass.DokumentVr.Opis.DisplayName)]
       	public string Opis { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.IDDokumentGr.Required)]
    	[DisplayName(AtributClass.DokumentVr.IDDokumentGr.DisplayName)]
       	public int IDDokumentGr { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Obrocni.Required)]
    	[DisplayName(AtributClass.DokumentVr.Obrocni.DisplayName)]
       	public bool Obrocni { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Jednokratni.Required)]
    	[DisplayName(AtributClass.DokumentVr.Jednokratni.DisplayName)]
       	public bool Jednokratni { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Kupac.Required)]
    	[DisplayName(AtributClass.DokumentVr.Kupac.DisplayName)]
       	public bool Kupac { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Partner.Required)]
    	[DisplayName(AtributClass.DokumentVr.Partner.DisplayName)]
       	public bool Partner { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Ugovor.Required)]
    	[DisplayName(AtributClass.DokumentVr.Ugovor.DisplayName)]
       	public bool Ugovor { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Faktura.Required)]
    	[DisplayName(AtributClass.DokumentVr.Faktura.DisplayName)]
       	public bool Faktura { get; set; }
    
        [Required(ErrorMessage = AtributClass.DokumentVr.Nalog.Required)]
    	[DisplayName(AtributClass.DokumentVr.Nalog.DisplayName)]
       	public bool Nalog { get; set; }
    
    	#endregion
    
    	#region Constructor
    	
    	public DokumentVrFormFormattedBase()
        { }
    	
    	public DokumentVrFormFormattedBase(Model.Data.View.DokumentVr formformated)
    	{
    	    this.ID_DokumentVr = formformated.ID_DokumentVr;
    	    this.Oznaka = formformated.Oznaka;
    	    this.Naziv = formformated.Naziv;
    	    this.NazivKr = formformated.NazivKr;
    	    this.Kratica = formformated.Kratica;
    	    this.Opis = formformated.Opis;
    	    this.IDDokumentGr = formformated.IDDokumentGr;
    	    this.Obrocni = formformated.Obrocni;
    	    this.Jednokratni = formformated.Jednokratni;
    	    this.Kupac = formformated.Kupac;
    	    this.Partner = formformated.Partner;
    	    this.Ugovor = formformated.Ugovor;
    	    this.Faktura = formformated.Faktura;
    	    this.Nalog = formformated.Nalog;
    	}
    
    	/*
    	    mymodel.ID_DokumentVr = model.ID_DokumentVr;
    	    mymodel.Oznaka = model.Oznaka;
    	    mymodel.Naziv = model.Naziv;
    	    mymodel.NazivKr = model.NazivKr;
    	    mymodel.Kratica = model.Kratica;
    	    mymodel.Opis = model.Opis;
    	    mymodel.IDDokumentGr = model.IDDokumentGr;
    	    mymodel.Obrocni = model.Obrocni;
    	    mymodel.Jednokratni = model.Jednokratni;
    	    mymodel.Kupac = model.Kupac;
    	    mymodel.Partner = model.Partner;
    	    mymodel.Ugovor = model.Ugovor;
    	    mymodel.Faktura = model.Faktura;
    	    mymodel.Nalog = model.Nalog;
    		
    	*/
    
    		#endregion
    	
    }
}
