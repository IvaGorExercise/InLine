//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InLine.UI.Web.T4.FormFormattedTemplate.View
{
    
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Collections.Specialized;
    using System.Linq;
    using System.Web;
    using System.ComponentModel;
    using Lib.Web.Mvc.JQuery.JqGrid.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid;
    using System.ComponentModel.DataAnnotations;
    using Lib.Web.Mvc.JQuery.JqGrid.Constants;
    using System.Web.Mvc;
    using InLine;
    using InLine.UI.Web.T4.FormFormattedTemplate;
    using InLine.UI.Web.Helper;
    
    
    public partial class StanFormFormattedBase
    {
    	#region Properities
    
        [Required(ErrorMessage = AtributClass.Stan.ID_Stan.Required)]
    	[DisplayName(AtributClass.Stan.ID_Stan.DisplayName)]
        	public long ID_Stan { get; set; }
    
    	[DisplayName(AtributClass.Stan.ID_Objekt.DisplayName)]
       	public Nullable<long> ID_Objekt { get; set; }
    
    	
        [StringLength(20, ErrorMessage = AtributClass.Stan.Oznaka.StringLength)]
        [Required(ErrorMessage = AtributClass.Stan.Oznaka.Required)]
    	[DisplayName(AtributClass.Stan.Oznaka.DisplayName)]
       	public string Oznaka { get; set; }
    
    	
        [StringLength(255, ErrorMessage = AtributClass.Stan.Naziv.StringLength)]
        [Required(ErrorMessage = AtributClass.Stan.Naziv.Required)]
    	[DisplayName(AtributClass.Stan.Naziv.DisplayName)]
       	public string Naziv { get; set; }
    
    	
        [StringLength(30, ErrorMessage = AtributClass.Stan.NazivKr.StringLength)]
        [Required(ErrorMessage = AtributClass.Stan.NazivKr.Required)]
    	[DisplayName(AtributClass.Stan.NazivKr.DisplayName)]
       	public string NazivKr { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.Stan.Kratica.StringLength)]
        [Required(ErrorMessage = AtributClass.Stan.Kratica.Required)]
    	[DisplayName(AtributClass.Stan.Kratica.DisplayName)]
       	public string Kratica { get; set; }
    
    	[DisplayName(AtributClass.Stan.Povrsina.DisplayName)]
       	[DisplayFormat(DataFormatString = KeyWord.FormaterRazno.DecimalFormat.TockaZarez, ApplyFormatInEditMode = true)]
    	public Nullable<decimal> Povrsina { get; set; }
    
    	[DisplayName(AtributClass.Stan.BrojSoba.DisplayName)]
       	[DisplayFormat(DataFormatString = KeyWord.FormaterRazno.DecimalFormat.TockaZarez, ApplyFormatInEditMode = true)]
    	public Nullable<decimal> BrojSoba { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.Stan.Broj.StringLength)]
    	[DisplayName(AtributClass.Stan.Broj.DisplayName)]
       	public string Broj { get; set; }
    
    	
        [StringLength(50, ErrorMessage = AtributClass.Stan.Ulica.StringLength)]
    	[DisplayName(AtributClass.Stan.Ulica.DisplayName)]
       	public string Ulica { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.Stan.KucniBrojDodatak.StringLength)]
    	[DisplayName(AtributClass.Stan.KucniBrojDodatak.DisplayName)]
       	public string KucniBrojDodatak { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.Stan.KucniBroj.StringLength)]
    	[DisplayName(AtributClass.Stan.KucniBroj.DisplayName)]
       	public string KucniBroj { get; set; }
    
    	
        [StringLength(10, ErrorMessage = AtributClass.Stan.Kat.StringLength)]
    	[DisplayName(AtributClass.Stan.Kat.DisplayName)]
       	public string Kat { get; set; }
    
    	[DisplayName(AtributClass.Stan.ID_Zgrada.DisplayName)]
       	public Nullable<long> ID_Zgrada { get; set; }
    
    	
        [StringLength(30, ErrorMessage = AtributClass.Stan.Opis.StringLength)]
    	[DisplayName(AtributClass.Stan.Opis.DisplayName)]
       	public string Opis { get; set; }
    
    	
        [StringLength(20, ErrorMessage = AtributClass.Stan.KatastarskaCestica.StringLength)]
    	[DisplayName(AtributClass.Stan.KatastarskaCestica.DisplayName)]
       	public string KatastarskaCestica { get; set; }
    
    	
        [StringLength(20, ErrorMessage = AtributClass.Stan.KatastarskaCesticaOpcina.StringLength)]
    	[DisplayName(AtributClass.Stan.KatastarskaCesticaOpcina.DisplayName)]
       	public string KatastarskaCesticaOpcina { get; set; }
    
    	[DisplayName(AtributClass.Stan.ID_Adresa.DisplayName)]
       	public Nullable<long> ID_Adresa { get; set; }
    
    	[DisplayName(AtributClass.Stan.BrojUgovor.DisplayName)]
       	public Nullable<int> BrojUgovor { get; set; }
    
    	
        [StringLength(5, ErrorMessage = AtributClass.Stan.PostanskiBroj.StringLength)]
    	[DisplayName(AtributClass.Stan.PostanskiBroj.DisplayName)]
       	public string PostanskiBroj { get; set; }
    
    	
        [StringLength(50, ErrorMessage = AtributClass.Stan.Posta.StringLength)]
    	[DisplayName(AtributClass.Stan.Posta.DisplayName)]
       	public string Posta { get; set; }
    
    	[DisplayName(AtributClass.Stan.ID_Posta.DisplayName)]
       	public Nullable<long> ID_Posta { get; set; }
    
    	#endregion
    
    	#region Constructor
    	
    	public StanFormFormattedBase()
        { }
    	
    	public StanFormFormattedBase(Model.Data.View.Stan formformated)
    	{
    	    this.ID_Stan = formformated.ID_Stan;
    	    this.ID_Objekt = formformated.ID_Objekt;
    	    this.Oznaka = formformated.Oznaka;
    	    this.Naziv = formformated.Naziv;
    	    this.NazivKr = formformated.NazivKr;
    	    this.Kratica = formformated.Kratica;
    	    this.Povrsina = formformated.Povrsina;
    	    this.BrojSoba = formformated.BrojSoba;
    	    this.Broj = formformated.Broj;
    	    this.Ulica = formformated.Ulica;
    	    this.KucniBrojDodatak = formformated.KucniBrojDodatak;
    	    this.KucniBroj = formformated.KucniBroj;
    	    this.Kat = formformated.Kat;
    	    this.ID_Zgrada = formformated.ID_Zgrada;
    	    this.Opis = formformated.Opis;
    	    this.KatastarskaCestica = formformated.KatastarskaCestica;
    	    this.KatastarskaCesticaOpcina = formformated.KatastarskaCesticaOpcina;
    	    this.ID_Adresa = formformated.ID_Adresa;
    	    this.BrojUgovor = formformated.BrojUgovor;
    	    this.PostanskiBroj = formformated.PostanskiBroj;
    	    this.Posta = formformated.Posta;
    	    this.ID_Posta = formformated.ID_Posta;
    	}
    
    	/*
    	    mymodel.ID_Stan = model.ID_Stan;
    	    mymodel.ID_Objekt = model.ID_Objekt;
    	    mymodel.Oznaka = model.Oznaka;
    	    mymodel.Naziv = model.Naziv;
    	    mymodel.NazivKr = model.NazivKr;
    	    mymodel.Kratica = model.Kratica;
    	    mymodel.Povrsina = model.Povrsina;
    	    mymodel.BrojSoba = model.BrojSoba;
    	    mymodel.Broj = model.Broj;
    	    mymodel.Ulica = model.Ulica;
    	    mymodel.KucniBrojDodatak = model.KucniBrojDodatak;
    	    mymodel.KucniBroj = model.KucniBroj;
    	    mymodel.Kat = model.Kat;
    	    mymodel.ID_Zgrada = model.ID_Zgrada;
    	    mymodel.Opis = model.Opis;
    	    mymodel.KatastarskaCestica = model.KatastarskaCestica;
    	    mymodel.KatastarskaCesticaOpcina = model.KatastarskaCesticaOpcina;
    	    mymodel.ID_Adresa = model.ID_Adresa;
    	    mymodel.BrojUgovor = model.BrojUgovor;
    	    mymodel.PostanskiBroj = model.PostanskiBroj;
    	    mymodel.Posta = model.Posta;
    	    mymodel.ID_Posta = model.ID_Posta;
    		
    	*/
    
    		#endregion
    	
    }
}
