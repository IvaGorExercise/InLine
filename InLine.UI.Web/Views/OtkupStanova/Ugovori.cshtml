
@using InLine.Repository.Data.Helper;

@{

    Layout = "~/Views/Shared/_LayoutFinancijsko.cshtml";
}


<style type="text/css">
   
</style>

@{
    var grid1 = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity,
   dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
   hiddenEnabled: true,
   footerEnabled: false,
   userDataOnFooter: false,
   dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
   methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
   pager: true,
   caption: "1. UGOVOR",
   parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
   width: 840,
   rowsNumber: 25,
   height: 250,
   url: Url.Action("UgovorStanOtkupGrid"),
   loadComplete: "$.UgovoriMasterLoad",
   onSelectRow: "$.UgovorStanOtkupOnSelectRow",
   onDoubleClickRow: "$.UgovorStanOtkupDetail",
   sortingName: @InLine.Model.Data.FieldString.View.UgovorStanOtkup.BrojUgovor,
   sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Desc,
   viewRecords: false).FilterToolbar(new Lib.Web.Mvc.JQuery.JqGrid.JqGridFilterToolbarOptions() { StringResult = true })
   .Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions())
   .AddNavigatorButton("", "ui-icon-plus", "$.addUgovorStanOtkup", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Novi ugovor")
   .AddNavigatorButton("", "ui-icon-pencil", "$.UgovorStanOtkupDetail", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena ugovora")
   .AddNavigatorButton("", "ui-icon-trash", "$.deleteUgovorStanOtkup", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje ugovora");


    var gridKupci = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupKupacGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity,
    dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
    hiddenEnabled: true,
    dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
    methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
    onDoubleClickRow: "$.UgovorStanOtkupKupacDetail",
    pager: true,
    caption: "2. KUPAC NA UGOVORU",
    parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
    width: 945,
    rowsNumber: 5,
    height: 80,
    sortingName: "BrojUgovor",
    sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Asc,
    viewRecords: false).Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions() { Search = false, Add = false, Delete = false, Edit = false, Refresh = true })
    .Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions())
    .AddNavigatorButton("", "ui-icon-plus", "$.addUgovorStanOtkupKupac", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Novi kupac")
    .AddNavigatorButton("", "ui-icon-pencil", "$.UgovorStanOtkupKupacDetail", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena kupca")
    .AddNavigatorButton("", "ui-icon-trash", "$.deleteUgovorStanOtkupKupac", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje kupca");


    var gridZavrsetakOtkupa = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupZavrsetakGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity,
   dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
   hiddenEnabled: true,
   dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
   methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
   onDoubleClickRow: "$.kupacdetailXXX",
   pager: true,
   caption: "3. ZAVRŠETAK OTKUPA",
   parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
   width: 945,
   rowsNumber: 5,
   height: 80,
   sortingName: "BrojUgovor",
   sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Asc,
   viewRecords: false).Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions() { Search = false, Add = false, Delete = false, Edit = false, Refresh = true })
   .Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions())
   .AddNavigatorButton("", "ui-icon-pencil", "$.KupacDetailXXX", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena završetka optkupa")
   .AddNavigatorButton("", "ui-icon-trash", "$.deleteKupacXXX", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje završetka otkupa");


    var gridAneksi = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupAneksGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity,
    dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
    hiddenEnabled: true,
    dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
    methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
    pager: true,
    caption: "4. ANEKS",
    parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
    width: 1000,
    autoWidth: false,
    shrinkToFit: true,
    rowsNumber: 80,
    height: 70,
    onDoubleClickRow: "$.UgovorStanOtkupAneksDetail",
    sortingName: "Datum",
    sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Desc,
    viewRecords: false).Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions() { Search = false, Add = false, Delete = false, Edit = false, Refresh = true })
    .AddNavigatorButton("", "ui-icon-plus", "$.addUgovorStanOtkupAneks", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Novi aneks")
    .AddNavigatorButton("", "ui-icon-pencil", "$.UgovorStanOtkupAneksDetail", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena aneks")
    .AddNavigatorButton("", "ui-icon-trash", "$.deleteUgovorStanOtkupAneks", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje aneks");


    var gridMoratorij = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupMoratorijGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity,
    dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
    hiddenEnabled: true,
    dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
    methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
    loadComplete: "$.MoratorijMasterLoad",
    onSelectRow: "$.moratorijmjesec",
    onDoubleClickRow: "$.UgovorStanOtkupMoratorijDetail",
    pager: true,
    caption: "5. MORATORIJ RJEŠENJE",
    parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
    width: 715,
    autoWidth: false,
    shrinkToFit: true,
    rowsNumber: 10,
    height: 70,
    sortingName: "BrojMoratorij",
    sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Desc,
    viewRecords: false).Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions() { Search = false, Add = false, Delete = false, Edit = false, Refresh = true })
    .AddNavigatorButton("", "ui-icon-plus", "$.addUgovorStanOtkupMoratorij", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Novo rješenje moratorija")
    .AddNavigatorButton("", "ui-icon-pencil", "$.UgovorStanOtkupMoratorijDetail", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena rješenja moratorija")
    .AddNavigatorButton("", "ui-icon-trash", "$.deleteUgovorStanOtkupMoratorij", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje rješenja moratorija");



    var gridMoratorijMjesec = new Lib.Web.Mvc.JQuery.JqGrid.JqGridHelper<InLine.UI.Web.T4.GridFormattedTemplate.View.UgovorStanOtkupMoratorijMjesecGridFormatted>(InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity,
   dynamicScrollingMode: Lib.Web.Mvc.JQuery.JqGrid.JqGridDynamicScrollingModes.HoldAllRows,
   hiddenEnabled: true,
   dataType: Lib.Web.Mvc.JQuery.JqGrid.JqGridDataTypes.Json,
   methodType: Lib.Web.Mvc.JQuery.JqGrid.JqGridMethodTypes.Post,
   onSelectRow: "$.moratorijmjesecdetail",
   onDoubleClickRow: "$.UgovorStanOtkupMoratorijMjesecDetail",
   pager: true,
   caption: "6. MORATORIJ ZA MJESEC I GODINU",
   parametersNames: new Lib.Web.Mvc.JQuery.JqGrid.JqGridParametersNames() { PagesCount = "npage" },
   width: 365,
   autoWidth: false,
   shrinkToFit: true,
   rowsNumber: 10,
   height: 70,
   sortingName: "Godina",
   sortingOrder: Lib.Web.Mvc.JQuery.JqGrid.JqGridSortingOrders.Desc,
   viewRecords: false).Navigator(new Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorOptions() { Search = false, Add = false, Delete = false, Edit = false, Refresh = true })
   .AddNavigatorButton("", "ui-icon-plus", "$.addUgovorStanOtkupMoratorijMjesec", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Novi moratorij mjesec/godina")
   .AddNavigatorButton("", "ui-icon-pencil", "$.UgovorStanOtkupMoratorijMjesecDetail", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Izmjena moratorij mjesec/godina")
   .AddNavigatorButton("", "ui-icon-trash", "$.deleteUgovorStanOtkupMoratorijMjesec", Lib.Web.Mvc.JQuery.JqGrid.JqGridNavigatorButtonPositions.Last, "Brisanje moratorij mjesec/godina");
   

 }


 <div class="PrviRed">
          @Html.Partial("~/Views/" + InLine.UI.Web.T4.ControllerName.ControllerName.PregledUgovora + "/" + ViewList.PregledUgovora.ViewPregledUgovoraMenu + ".cshtml")
 </div>

   <table style="width:100%; vertical-align: top;">
        <tbody>
            <tr>
                <td id="grid" colspan="2" style="width: 100%; vertical-align: top;">
                    @grid1.GetHtml()
                </td>
            </tr>
            <tr>
              <td>
                <table style="width:100%; vertical-align: top;">
                <tr style="vertical-align: top;">
                    <td style="width:40%; vertical-align: top;">
                           <div id="loadNapomenaHOLDER" style="opacity: 1; visibility: visible;">
                                                        <div style="margin-right:0;margin-top:0px;margin-bottom:0px;" class="dodPodHolder">
                                                        <div><label>NAPOMENA</label></div>
                                                        	<textarea id="napomenaHolder" style="width:100%;height:510px;" cols="" rows=""> </textarea> 
                                                        </div>
                           </div>
                    </td>
                    <td>
                    <table style="width:100%; vertical-align: top;">
                        <tr>
                         <td>@gridKupci.GetHtml()</td>
                         <td>@gridZavrsetakOtkupa.GetHtml()</td>
                        </tr>
                         <tr>
                         <td colspan="2">@gridAneksi.GetHtml()</td>
                        </tr>
                            <tr>
                         <td>@gridMoratorij.GetHtml()</td>
                         <td>@gridMoratorijMjesec.GetHtml()</td>
                        </tr>
                    </table>
                    </td>
                </tr>
                </table>
                </td>
            </tr>
        </tbody>
    </table>

 <div id="KupacDialog" class="hidden"></div>
 <div id="UgovorStanOtkupDialog" class="hidden"></div>
 <div id="UgovorStanOtkupKupacDialog" class="hidden"></div>
 <div id="UgovorStanOtkupAneksDialog" class="hidden"></div>
 <div id="UgovorStanOtkupMoratorijDialog" class="hidden"></div>
 <div id="UgovorStanOtkupMoratorijMjesecDialog" class="hidden"></div>
 <div id="poruka_Master"></div>				





@section JavaScript {

    <script src="@Url.Content("~/Scripts/jquery.jqGrid.addons-4.4.1.js")" type="text/javascript"></script>
    <script type="text/javascript">

    $(document).ready(function () 
        {
            @grid1.GetJavaScript()
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_Zapis');
               jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.BrojAneks');
                jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_Stan');
                 jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_UgovorStanOtkupStorno');
                  jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.DatumInsert');
                   jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.OsobaInsert');
                    jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.DatumInsert');
                     jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.DatumUpdate');
                      jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.OsobaUpdate');
                       jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_OsobaInsert');
                        jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_OsobaUpdate');
                         jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_Subjekt');
                          jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.TemeljnicaGodina');
                           jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.TemeljnicaVrsta');
                            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.TemeljnicaBroj');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.OtkupNadstojnicki');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_DokumentVr');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.Pretvorba');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.NeZateznaKamata');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.IznosKamata');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.IznosKreditObrok');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.IznosKamataObrok');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.KucniBroj');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.KucniBrojDodatak');
                             jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity).hideCol('@InLine.Model.Data.FieldString.View.UgovorStanOtkup.Napomena');


           @gridKupci.GetJavaScript()
               jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupKupac.ID_UgovorStanOtkup');
               jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupKupac.ID_UgovorStanOtkupKupac');
               jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupKupac.ID_Kupac');
               jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupKupac.BrojUgovor');


           @gridZavrsetakOtkupa.GetJavaScript()


            @gridAneksi.GetJavaScript()
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.ID_UgovorStanOtkupAneks');
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.ID_UgovorStanOtkup');
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.BrojUgovor');
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.BrojStorno');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.TecajDM');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.TemeljnicaGodina');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.TemeljnicaVrsta');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.TemeljnicaBroj');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.DokumentGrupa');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.DokumentVrsta');
//              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.BrojObrokOd');
              jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupAneks.ID_DokumentVr');



            @gridMoratorij.GetJavaScript()
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupMoratorij.ID_UgovorStanOtkup');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupMoratorij.BrojUgovor');



            @gridMoratorijMjesec.GetJavaScript()
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.BrojUgovor');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.ID_DokumentVr');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.DokumentGrupa');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.DokumentVrsta');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.TemeljnicaVrsta');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.TemeljnicaGodina');
            jQuery(@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity).hideCol('@InLine.Model.Data.Field.View.UgovorStanOtkupZavrsetak.TemeljnicaBroj');


            var gridK = '@InLine.UI.Web.Helper.KeyWord.JQueryRijec.Hash' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity';
            var gridA = '@InLine.UI.Web.Helper.KeyWord.JQueryRijec.Hash' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity';
            var gridM = '@InLine.UI.Web.Helper.KeyWord.JQueryRijec.Hash' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity';
            setTimeout(function () {
             jQuery(gridK).trigger('@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.reloadGrid');
              jQuery(gridA).trigger('@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.reloadGrid');
               jQuery(gridM).trigger('@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.reloadGrid');
         }, 5000)

        });


    </script>



  <script type="text/javascript">

        $(document).ready(function () {

            var grid1 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity';
            var grid2 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity';
            var grid3 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity';
            var grid4 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity';
            var grid5 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity';
            var grid6 = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity';

            $(window).bind('resize', function () {
                $(grid1).setGridWidth($(window).width());
                $(grid2).setGridWidth($(window).width()/3);
                $(grid3).setGridWidth($(window).width()/3);
                $(grid4).setGridWidth($(window).width()/1.5);
                $(grid5).setGridWidth($(window).width()/3);
                $(grid6).setGridWidth($(window).width()/3);

            }).trigger('resize');

        });

</script>


 <script type="text/javascript">

     $(function () {
         $("#jqgh_UgovorStanOtkup_IDValuta").text("Valuta");
         $("#jqgh_UgovorStanOtkup_BrojUgovor").text("Br. ugovora");
         $("#jqgh_UgovorStanOtkup_BrojObrok").text("Br. obroka");
         $("#jqgh_UgovorStanOtkup_TecajDM").text("Tečaj DM");
         $("#jqgh_UgovorStanOtkup_NadstojnickiAdaptiran").text("N/A");
         $("#jqgh_UgovorStanOtkup_NeZateznaKamata").text("Ne zatez. kam.");
         $("#jqgh_UgovorStanOtkup_UgovorTuzen").text("Tužen");
         $("#jqgh_UgovorStanOtkup_DokumentGrupa").text("Dok. Gr.");
         $("#jqgh_UgovorStanOtkup_DokumentVrsta").text("Dok. Vr.");
         $("#jqgh_UgovorStanOtkup_IznosKredit").text("Ukupan kredit");
         $("#jqgh_UgovorStanOtkup_IznosKamata").text("Kamata");
         $("#jqgh_UgovorStanOtkup_IznosKreditObrok").text("Kredit obrok");
         $("#jqgh_UgovorStanOtkup_IznosKamataObrok").text("Kamata obrok");
         $("#jqgh_UgovorStanOtkup_IznosUkupnoObrok").text("Ukupno obrok");


         $("#jqgh_UgovorStanOtkupAneks_BrojAneks").text("Broj aneks");
         $("#jqgh_UgovorStanOtkupAneks_TecajDM").text("Tečaj DM");
         $("#jqgh_UgovorStanOtkupAneks_TemeljnicaGodina").text("Tem. godina");
         $("#jqgh_UgovorStanOtkupAneks_TemeljnicaVrsta").text("Tem. vrsta");
         $("#jqgh_UgovorStanOtkupAneks_TemeljnicaBroj").text("Tem. br.");
         $("#jqgh_UgovorStanOtkupAneks_DokumentGrupa").text("Dok. gr.");
         $("#jqgh_UgovorStanOtkupAneks_DokumentVrsta").text("Dok. vr.");
         $("#jqgh_UgovorStanOtkupAneks_BrojObrokaOd").text("Od obroka");


         $("#jqgh_UgovorStanOtkupMoratorij_BrojMoratorij").text("Broj moratorija");
     });

</script>


 <script type="text/javascript">

     $.UgovoriMasterLoad = function (data) {
         var prvisw = $(this).getDataIDs()[0];
         jQuery(this).setSelection(prvisw, true);
     };

     $.MoratorijMasterLoad = function (data) {
         var prvisw = $(this).getDataIDs()[0];
         jQuery(this).setSelection(prvisw, true);
     };

     $.UgovorStanOtkupOnSelectRow = function () {

         var selectedRowId = $(this).jqGrid('@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.getGridParam', '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.selrow');
         var selectedRowIdUgovorStanOtkup = $(this).jqGrid('@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.getCell', selectedRowId, '@InLine.Model.Data.FieldString.View.UgovorStanOtkup.ID_UgovorStanOtkup');
         var polje = 'ID_UgovorStanOtkup';


         var napomena = $(this).jqGrid('getCell', selectedRowId, 'Napomena');
         var grid_id = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity';


         if (selectedRowId == null) {

             $.jgrid.viewModal("#alertmod", { gbox: "#gbox_" + grid_id, jqm: true });
             $("#jqg_alrt").focus();
         }
         else {

             if ($.trim(napomena) != "") {
                 $('#napomenaHolder').val(napomena);
             }
             else {
                 $('#napomenaHolder').val('');
             }

             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity').jqGrid('setGridParam', { url: "../PregledUgovora/UgovorKupci", postData: { key: polje, value: selectedRowId} });
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity').trigger('reloadGrid');


             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity').jqGrid('setGridParam', { url: "../OtkupStanova/UgovorStanOtkupZavrsetakGrid", postData: { key: polje, value: selectedRowId} });
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupZavrsetak.UgovorStanOtkupZavrsetakEntity').trigger('reloadGrid');


             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity').jqGrid('setGridParam', { url: "../PregledUgovora/AneksGrid", postData: { key: polje, value: selectedRowId} });
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity').trigger('reloadGrid');


             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity').jqGrid('setGridParam', { url: "../PregledUgovora/MoratorijGrid", postData: { key: polje, value: selectedRowId} });
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity').trigger('reloadGrid');

             var prviRedMoratorij = $("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity').getDataIDs()[0];
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity').setSelection(prviRedMoratorij, true);

             $("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity').jqGrid("clearGridData", true);

         }

     };


     $.moratorijmjesec = function () {
         var selectedRowId = $(this).jqGrid('getGridParam', 'selrow');
         var polje = 'ID_UgovorStanOtkupMoratorij';
         var grid_id = "#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity';

         if (selectedRowId == null) {

             $.jgrid.viewModal("#alertmod", { gbox: "#gbox_" + grid_id, jqm: true });
             $("#jqg_alrt").focus();
         }
         else {

             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity').jqGrid('setGridParam', { url: "../PregledUgovora/MoratorijMjesecGrid", postData: { key: polje, value: selectedRowId} });
             jQuery("#" + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity').trigger('reloadGrid');

         }

     };



     $.addUgovorStanOtkup = function () {
         $.addUgovorStanOtkup();
     };

     $.UgovorStanOtkupDetail = function () {
         $.UgovorStanOtkupDetail();
     };

     $.deleteUgovorStanOtkup = function () {
         Dialozi.DeleteIzGrida("@InLine.Model.Data.FieldString.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "UgovorStanOtkup");
     };


     $.addUgovorStanOtkup = function () {

         var kojidialog = "#" + "UgovorStanOtkup" + "Dialog";
         var kojidialogButton = "UgovorStanOtkup" + "Dialog";
         var kojikontroler = "../" + "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova" + "/";
         var kojigrid = "#" + "UgovorStanOtkup";
         var loader = kojikontroler + "UgovorStanOtkup" + "Detalj/";
         var kojasirina = 920;
         var kojavisina = 850;
         var kojaforma = "#" + "UgovorStanOtkup" + "Form";
         var kojaakcija = "UgovorStanOtkup" + "Insert";
         var kontrolerakcija = kojikontroler + kojaakcija;
         var kojitip = "Insert";
         var kojititle = "UGOVOR";
         var kojaakcijaDelete = "UgovorStanOtkup" + "Delete";
         var kontrolerakcijaDelete = kojikontroler + kojaakcijaDelete;
         var kojaPorukaDiv = "UgovorStanOtkup";


         if (kojitip == "Insert") {
             kojititle = kojititle + " UNOS "
         }

         // Iniciranje Dialoga
         $(function () {
             $(kojidialog).dialog({
                 autoOpen: false,
                 show: {
                     effect: "none",
                     duration: 0
                 },
                 hide: {
                     effect: "none",
                     duration: 0
                 },
                 width: kojasirina,
                 height: kojavisina,
                 modal: true,
                 resizable: true,
                 position: 'top',
                 draggable: true,
                 title: kojititle,
                 buttons: {

                     Spremi: {
                         text: "",
                         title: "Spremi",
                         id: kojidialogButton + "Spremi",
                         class: 'SpremiClass',
                         value: "Spremi",
                         click: function () {
                             var frm = kojaforma;
                             var disabled = $(kojaforma).find(':input:disabled').removeAttr('disabled');

                             var serializeData = $(kojaforma).serialize();

                             var provjera = $.ProvjeraKodUnosaUgovora();

                             if (provjera == false) {
                                 return false;
                             }
                             else {
                                 if ($(frm).validate().form()) {
                                     $.ajax({
                                         url: kontrolerakcija,
                                         data: serializeData,
                                         type: 'POST',
                                         success: function (data) {
                                             if (data.length > 0) {
                                                 porukeIzSkripte.VratiPorukuStatus(data, kojaPorukaDiv);
                                                 InsertEditError();
                                             }
                                             else {
                                                 jQuery(kojigrid).trigger('reloadGrid');
                                                 InsertEditSucces();
                                                 $(kojidialog).dialog("close");
                                                 $(kojidialog).empty();
                                             }

                                         }
                                     });
                                 }
                             }


                         }

                     },

                     Obrisi: {
                         text: "",
                         title: "Obriši",
                         id: kojidialogButton + "Obrisi",
                         class: 'ObrisiClass',
                         value: "Obrisi",

                         click: function () {
                             if (slaveId == null)
                             { alert('Nije odabrana stavka'); }

                             else {
                                 if (confirm('Da li sigurno želite obrisati stavku?')) {
                                     var frm = kojaforma;
                                     var serializeData = $(kojaforma).serialize();
                                     $.ajax({
                                         url: kontrolerakcijaDelete,
                                         data: serializeData,
                                         type: 'POST',
                                         success: function (data) {

                                             if (data.length > 0) {
                                                 porukeIzSkripte.VratiPorukuStatus(data, kojaPorukaDiv);
                                                 DeleteError();
                                             }
                                             else {
                                                 jQuery(kojigrid).trigger('reloadGrid');
                                                 DeleteSucces();
                                                 $(kojidialog).dialog("close");
                                                 $(kojidialog).empty();
                                             }

                                         }
                                     });
                                 }

                             }

                         }

                     },


                     Zatvori:
                    {
                        text: "",
                        title: "Zatvori",
                        class: 'ZatvoriClass',
                        click: function () {
                            $(this).dialog("close");
                            $(this).empty();
                        }
                    }
                 }
             });
         });



         if (kojitip == "Insert") {
             slaveId = null
             $(kojidialog).dialog("open").load(loader, { Id: null, IdMaster: null })

         }


     };

     $.UgovorStanOtkupDetail = function () {

         var kojidialog = "#" + "UgovorStanOtkup" + "Dialog";
         var kojidialogButton = "UgovorStanOtkup" + "Dialog";
         var kojikontroler = "../" + "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova" + "/";
         var kojigrid = "#" + "UgovorStanOtkup";
         var loader = kojikontroler + "UgovorStanOtkup" + "Detalj/";
         var kojasirina = 920;
         var kojavisina = 850;
         var kojaforma = "#" + "UgovorStanOtkup" + "Form";
         var kojaakcija = "UgovorStanOtkup" + "Insert";
         var kontrolerakcija = kojikontroler + kojaakcija;
         var kojitip = "Edit";
         var kojititle = "UGOVOR";
         var kojaakcijaDelete = "UgovorStanOtkup" + "Delete";
         var kontrolerakcijaDelete = kojikontroler + kojaakcijaDelete;
         var kojaPorukaDiv = "UgovorStanOtkup";

         if (kojitip == "Edit") {
             kojititle = kojititle + " DETALJ "
         }

         var slaveId = $(kojigrid).jqGrid('getGridParam', 'selrow');


         // Iniciranje Dialoga
         $(function () {
             $(kojidialog).dialog({
                 autoOpen: false,
                 show: {
                     effect: "none",
                     duration: 0
                 },
                 hide: {
                     effect: "none",
                     duration: 0
                 },
                 width: kojasirina,
                 height: kojavisina,
                 modal: true,
                 resizable: true,
                 position: 'top',
                 draggable: true,
                 title: kojititle,
                 buttons: {

                     Spremi: {
                         text: "",
                         title: "Spremi",
                         id: kojidialogButton + "Spremi",
                         class: 'SpremiClass',
                         value: "Spremi",
                         click: function () {
                             var frm = kojaforma;
                             var disabled = $(kojaforma).find(':input:disabled').removeAttr('disabled');

                             var serializeData = $(kojaforma).serialize();

                             var provjera = $.ProvjeraKodUnosaUgovora();

                             if (provjera == false) {
                                 return false;
                             }
                             else {

                                 if ($(frm).validate().form()) {
                                     $.ajax({
                                         url: kontrolerakcija,
                                         data: serializeData,
                                         type: 'POST',
                                         success: function (data) {
                                             if (data.length > 0) {
                                                 porukeIzSkripte.VratiPorukuStatus(data, kojaPorukaDiv);
                                                 InsertEditError();
                                             }
                                             else {
                                                 jQuery(kojigrid).trigger('reloadGrid');
                                                 InsertEditSucces();
                                                 $(kojidialog).dialog("close");
                                                 $(kojidialog).empty();
                                             }

                                         }
                                     });
                                 }
                             }

                         }

                     },

                     Obrisi: {
                         text: "",
                         title: "Obriši",
                         id: kojidialogButton + "Obrisi",
                         class: 'ObrisiClass',
                         value: "Obrisi",

                         click: function () {
                             if (slaveId == null)
                             { alert('Nije odabrana stavka'); }

                             else {
                                 if (confirm('Da li sigurno želite obrisati stavku?')) {
                                     var frm = kojaforma;
                                     var serializeData = $(kojaforma).serialize();
                                     $.ajax({
                                         url: kontrolerakcijaDelete,
                                         data: serializeData,
                                         type: 'POST',
                                         success: function (data) {

                                             if (data.length > 0) {
                                                 porukeIzSkripte.VratiPorukuStatus(data, kojaPorukaDiv);
                                                 DeleteError();
                                             }
                                             else {
                                                 jQuery(kojigrid).trigger('reloadGrid');
                                                 DeleteSucces();
                                                 $(kojidialog).dialog("close");
                                                 $(kojidialog).empty();
                                             }

                                         }
                                     });
                                 }

                             }

                         }

                     },


                     Zatvori:
                    {
                        text: "",
                        title: "Zatvori",
                        class: 'ZatvoriClass',
                        click: function () {
                            $(this).dialog("close");
                            $(this).empty();
                        }
                    }
                 }
             });
         });



         if (kojitip == "Edit") {

             if (slaveId == null) {
                 $.jgrid.viewModal("#alertmod", { gbox: "#gbox_" + kojigrid, jqm: true });
                 $("#jqg_alrt").focus();
             }
             else {
                 $(kojidialog).dialog("open").load(loader, { Id: slaveId, IdMaster: null })

             }

         }


     };

     $.ProvjeraKodUnosaUgovora = function () {

        var kojaVrsta = $("input:radio[name=VrstaUgovora]:checked").val();
        var dokumet = $("#ID_DokumentVr").val();
        var datumUgovora = $("#DatumUgovora").val();
        var tecaj = $("#TecajPoUgovoru").val();
        var ucesce = $("#IznosUcesce").val();
        var datumDospijeceUcesce = $("#DatumDospijeceUcesce").val();
        var brojObrok = $("#BrojObrok").val();
        var IznosJednokratno = $("#IznosJednokratno").val();
        var iznosJednokratnoValuta = $("#IznosJednokratnoValuta").val();
        var DatumDospijeceJednokratno = $("#DatumDospijeceJednokratno").val();


        if (kojaVrsta == 1) {
            if (tecaj != '' && ucesce != '0,00' && datumUgovora != '' && datumDospijeceUcesce != '' && brojObrok != '0' && dokumet != '') {
                return true;
            }
            else {

                $("#Provjera").html("Kod unosa obročnog ugovora obavezno: vrsta dokumenta, tečaj, učešće, datum dospijeća i broj obroka");
                return false;
            }
        }

        if (kojaVrsta == 2) {
   
            if (dokumet != '')
            {
                if (dokumet == 2) {
                    if (datumUgovora != '' && DatumDospijeceJednokratno != '' && IznosJednokratno != '0,00') {
                        $("#Provjera").html("");
                        return true;
                    }
                    else {

                        $("#Provjera").html("Kod unosa jednokratnog kunskog ugovora obavezno: datum dospijeća, iznos u kunama");
                        return false;
                    }
                }

                if (dokumet == 3) {
                    if (tecaj != '' && datumUgovora != '' && DatumDospijeceJednokratno != '' && iznosJednokratnoValuta != '0,00') {
                        $("#Provjera").html("");
                        return true;
                    }
                    else {

                        $("#Provjera").html("Kod unosa jednokratnog deviznog ugovora obavezno: tečaj,  datum dospijeća, iznos u valuti");
                        return false;
                    }
                }
            }

            else {

                $("#Provjera").html("Izaberite vrstu dokumenta.");
                return false;
            }

        }

    };


</script>


<script>

    $.addUgovorStanOtkupKupac = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Insert", 800, 410, title, "UgovorStanOtkupKupac");
    };


    $.UgovorStanOtkupKupacDetail = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Edit", 800, 410, title, "UgovorStanOtkupKupac");
    };


    $.deleteUgovorStanOtkupKupac = function () {
        Dialozi.DeleteIzGrida("@InLine.Model.Data.FieldString.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupKupac.UgovorStanOtkupKupacEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "Master");
    };


    $.addUgovorStanOtkupAneks = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Insert", 830, 600, title, "UgovorStanOtkupAneks");
    };

    $.UgovorStanOtkupAneksDetail = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Edit", 830, 600, title, "UgovorStanOtkupAneks");
    };

    $.deleteUgovorStanOtkupAneks = function () {
        Dialozi.DeleteIzGrida("@InLine.Model.Data.FieldString.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupAneks.UgovorStanOtkupAneksEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "Master");
    };

    $.addUgovorStanOtkupMoratorij = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Insert", 700, 270, title, "UgovorStanOtkupMoratorij");
    };

    $.UgovorStanOtkupMoratorijDetail = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkup.UgovorStanOtkupEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Edit", 700, 270, title, "UgovorStanOtkupMoratorij");
    };

    $.deleteUgovorStanOtkupMoratorij = function () {
        Dialozi.DeleteIzGrida("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "Master");
    };



    $.addUgovorStanOtkupMoratorijMjesec = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Insert", 700, 270, title, "UgovorStanOtkupMoratorijMjesec");
    };

    $.UgovorStanOtkupMoratorijMjesecDetail = function () {
        var gridTitle = '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.gview_' + '@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity' + '@InLine.UI.Web.Helper.KeyWord.JqGridAtributi.JqGridTitle';
        var title = jQuery(gridTitle).text();
        Dialozi.InsertEditSlave("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorij.UgovorStanOtkupMoratorijEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.UI.Web.Helper.KeyWord.TipAkcija.Edit", 700, 270, title, "UgovorStanOtkupMoratorijMjesec");
    };

    $.deleteUgovorStanOtkupMoratorijMjesec = function () {
        Dialozi.DeleteIzGrida("@InLine.Model.Data.FieldString.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.Model.Data.FieldString.View.UgovorStanOtkupMoratorijMjesec.UgovorStanOtkupMoratorijMjesecEntity", "@InLine.UI.Web.T4.ControllerName.ControllerName.OtkupStanova", "Master");
    };


</script>




  <script type="text/javascript">
          $.NositeljFormatter = function (cellvalue, options, rowObject) {
              if (cellvalue == true)
                  return "D";
              else
                  return "N";
          };
  </script>

}