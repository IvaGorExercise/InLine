@model InLine.UI.Web.T4.FormFormattedTemplate.View.TecajListaStDetaljFormFormatted
@using InLine.Repository.Data.Helper;
@using InLine.UI.Web.Helper;


 <style type="text/css">
     
 .DecimalNumber {text-align:right}
  .Right {text-align:right}
 
</style>


 @{
     string prefixLabela = "labela_TecajListaSt_Detalj_";
 }
 

 @{
     string Akcija = @InLine.Model.Data.FieldString.View.TecajListaSt.TecajListaStEntity + InLine.UI.Web.Helper.KeyWord.TipAkcija.Insert;
     string IDForma = @InLine.Model.Data.FieldString.View.TecajListaSt.TecajListaStEntity + InLine.UI.Web.Helper.KeyWord.Forma.Rijec.Forma;
     string DecimalNumber = "DecimalNumber";
     string DecimalNumberVise = "DecimalNumberVise";
     string AutocompleteValutaIz = "AutocompleteValutaIz";
     string ulValutaIz = "#ulValutaIz";
     string AutocompleteValutaU = "AutocompleteValutaU";
     string ulValutaU = "#ulValutaU";
     string Start = CommonFunctions.PagingVrijednostiDefault.Start;
     string Count = CommonFunctions.PagingVrijednostiDefault.Count;
     string kojaIDDrzavaIz = @Model.IDDrzavaIz;
     string kojaIDDrzavaU = @Model.IDDrzavaU;
     string kojaIDValutaIz = @Model.IDValutaIz;
     string kojaIDValutaU = @Model.IDValutaU;
     string Right = "Right";
 }



 @using (Html.BeginForm(Akcija, @InLine.UI.Web.T4.ControllerName.ControllerName.MaticniPodaci, FormMethod.Post, new { id = IDForma, @class = InLine.UI.Web.Helper.KeyWord.Forma.Rijec.FormClass }))
 {
    @Html.HiddenFor(model => model.ID_TecajListaSt)
    @Html.HiddenFor(model => model.ID_TecajLista)
    @Html.HiddenFor(model => model.ID_TecajVrSD)
    @Html.HiddenFor(model => model.ID_TecajVrKD)
    @Html.HiddenFor(model => model.ID_TecajVrPD)
    @Html.HiddenFor(model => model.ID_TecajVrKE)
    @Html.HiddenFor(model => model.ID_TecajVrPE)
    @Html.HiddenFor(model => model.ID_TecajSD)
    @Html.HiddenFor(model => model.ID_TecajKD)
    @Html.HiddenFor(model => model.ID_TecajPD)
    @Html.HiddenFor(model => model.ID_TecajKE)
    @Html.HiddenFor(model => model.ID_TecajPE)
    @Html.HiddenFor(model => model.IDDrzavaIz)
    @Html.HiddenFor(model => model.IDDrzavaU)
    @Html.HiddenFor(model => model.IDValutaIz)
    @Html.HiddenFor(model => model.IDValutaU)



    @Html.ValidationSummary(true)


<table class ="TecajListaStDetail @InLine.UI.Web.Helper.KeyWord.Forma.Rijec.FormBackground" width="100%" cellspacing="0" cellpadding="0" border="0" style="width:100%;">
   <tbody>

     <tr><td colspan='4'style="height:5px; background-color:#E7E7E7; padding-top: 2px; padding-bottom:2px; "></td></tr>
     
      <tr>
	    <td colspan='4'>
           <div>
          <table width="100%" valign="top">
            <tr>
                <td class="Left" width="15%">VALUTA TEČAJA</td>
                <td width="20%"> @Html.TextBoxFor(model => model.ValutaIz, new { @class = "btnDropDownSymbol AutocompleteValutaIz ui-autocomplete-input", @type = "text", @name = "ValutaIz", @autocomplete = "off" }) @Html.ValidationMessageFor(model => model.ValutaIz)</td>
                <td class="Right" width="15%">TEČAJ PREMA</td>
                <td width="20%"> @Html.TextBoxFor(model => model.ValutaU, new { @class = "btnDropDownSymbol AutocompleteValutaU ui-autocomplete-input", @type = "text", @name = "ValutaU", @autocomplete = "off" }) @Html.ValidationMessageFor(model => model.ValutaU)</td>
                <td class="Right" width="15%">BROJ JEDINICA</td>
                <td width="10%">@Html.EditorFor(model => model.BrojJedinica)</td>
 @*               <td width="15%"> &nbsp TEČAJ PREMA</td>
                <td width="35%"> <input id="ValutaU" class="btnDropDownSymbol AutocompleteValutaU ui-autocomplete-input" type="text" value="" name="ValutaU" autocomplete="off">@Html.ValidationMessageFor(model => model.IDValutaU)</td>*@
            </tr>
            </table>
         </div>  
        </td>
  							                
    </tr>

   <tr>
        <td colspan='4'>
            <table width="100%" valign="top">
                <tr>
                       <td>Kupovni</td>
                        <td>Srednji</td>	
                        <td>Prodajni</td>
                        <td>Kupovni efekt.</td>
                        <td>Prodajni efekt.</td>
                </tr>

                  <tr>
                       <td>@Html.TextBoxFor(model => model.TecajKD, String.Format(KeyWord.FormaterRazno.DecimalFormat.TockaZarez6Decimala, Model.TecajKD), new { @class = @DecimalNumberVise + " " + @Right }) @Html.ValidationMessageFor(model => model.TecajKD)</td>
                       <td>@Html.TextBoxFor(model => model.TecajSD, String.Format(KeyWord.FormaterRazno.DecimalFormat.TockaZarez6Decimala, Model.TecajSD), new { @class = @DecimalNumberVise + " " + @Right }) @Html.ValidationMessageFor(model => model.TecajSD)</td>
                       <td>@Html.TextBoxFor(model => model.TecajPD, String.Format(KeyWord.FormaterRazno.DecimalFormat.TockaZarez6Decimala, Model.TecajPD), new { @class = @DecimalNumberVise + " " + @Right }) @Html.ValidationMessageFor(model => model.TecajPD)</td>
                       <td>@Html.TextBoxFor(model => model.TecajKE, String.Format(KeyWord.FormaterRazno.DecimalFormat.TockaZarez6Decimala, Model.TecajKE), new { @class = @DecimalNumberVise + " " + @Right }) @Html.ValidationMessageFor(model => model.TecajKE)</td>
                       <td>@Html.TextBoxFor(model => model.TecajPE, String.Format(KeyWord.FormaterRazno.DecimalFormat.TockaZarez6Decimala, Model.TecajPE), new { @class = @DecimalNumberVise + " " + @Right }) @Html.ValidationMessageFor(model => model.TecajPE)</td>
                </tr>
        </table>
        </td>					                
   </tr>


  </tbody>
</table>
<div>
<div id="poruka_TecajLista" ></div>
</div>

 }

  <script src="@Url.Content("~/Scripts/jquery.jqGrid.addons-4.4.1.js")" type="text/javascript"></script>
   <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
   <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/DecimalValidator.js")" type="text/javascript"></script>
      <script src="@Url.Content("~/Scripts/chosen.jquery.min.js")" type="text/javascript"></script>


   <script type="text/javascript">

       $(document).ready(function () {

           $('#TecajListaStDialogSpremiKopiraj').hide();
           $('#TecajListaStDialogSpremiDodaj').hide();

           $('#IDDrzavaIz').val('@kojaIDDrzavaIz');
           $('#IDDrzavaU').val('@kojaIDDrzavaU');

           $('#IDValutaIz').val('@kojaIDValutaIz');
           $('#IDValutaU').val('@kojaIDValutaU');

           $('#ValutaIz').val('@kojaIDValutaIz');
           $('#ValutaU').val('@kojaIDValutaU');



           $(".DecimalNumberVise").blur(function () {
               var ULAZ = $(this).val();
               var IZLAZ = Dialozi.DecimalFunkcija6(ULAZ);
               $(this).val(IZLAZ)
        
           });

           $(".DecimalNumberVise").keypress(function (e) {
               if (e.which == 13) {
                   $(".DecimalNumberVise").blur();
               }
           });

       });


   </script>



    <script type="text/javascript">

        $(function () {
            $("#labela_TecajListaSt_Detalj_Oznaka").text("Broj");

        });


    </script>



    <script type="text/javascript">

     $("." + '@AutocompleteValutaIz').each(function () {

        var widgetAutoComplete = $(this).autocomplete({
            showHeader: true,
            source: function (request, response) {

                var url = '@Url.Action("GetDrzavaValuta", @InLine.UI.Web.T4.ControllerName.ControllerName.MaticniPodaci)';
                var kojalista = "@ulValutaIz";

               $.AutocompleteValutaIz(request, response, kojalista, url, @Start, @Count);

            },

            select:
                function (event, ui) {
                    //kojaValutaIz = ui.item.label;
                    $("#IDValutaIz").val($.trim(ui.item.label.toUpperCase()));
                    $("#ValutaIz").val($.trim(ui.item.label.toUpperCase()));
                    $("#IDDrzavaIz").val($.trim(ui.item.value1.toUpperCase()));
                    return false;
                },

            minLength: 0

        }).data("autocomplete");


        widgetAutoComplete._renderItem = function (ul, item) {

            ul.attr('id', 'ulValutaIz');
            return $("<li class='tblAutocompleteLi'><table class='tblAutocomplete'></table></li>").data("item.autocomplete-item", item).append("<a><table width='100%' class='table table-condensed table-hover' style='margin-bottom:0px;'><tr><td width='40px'>" + item.label.toUpperCase() + "</td> <td width='200px'>" + item.value3.toUpperCase() + "</td> <td width='200px'>" + item.value2.toUpperCase() + "</td></tr></table></a>").appendTo("#ulValutaIz");
        }

        widgetAutoComplete._renderMenu = function (ul, item) {

            var self = this;
            $.each(item, function (index, items) {
                if (index == 0)
                    ul.append("<li><table class='autocompleteHeader'  width='100%' class='table table-condensed table-hover' style='margin-bottom:0px;'><tr><th width='40px'> VALUTA </th> <th width='120px'> IME VALUTE </th><th width='120px'> DRZAVA</th></tr></table></li>");
                self._renderItemData(ul, items);
            });
        }

    });

      $.AutocompleteValutaIz = function (request, response, kojalista, url, Start, Count ) {

                $.ajax({
                    url: url,
                    data: { query: request.term, start: Start, count: Count },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data,
                        function (item) {
                            return {
                                label: item.IDValuta,
                                value1: item.IDDrzava,
                                value2: item.NazivDrzava,
                                value3: item.NazivValuta
                            }

                        }));

                        var previousScroll = 0;
                        var page = 1;

                        $(kojalista).scroll(function () {

                            var currentScroll = $(this).scrollTop();

                            var x = $(kojalista).prop('scrollHeight');
                            var y = $(kojalista).prop('offsetHeight');

                            if (currentScroll > previousScroll) {

                                if(page >=0)
                                {
                                    if (currentScroll >= x - y)
                                        {
                                           page += 1;

                                            var countPage = page * Count
                                            $.ajax({
                                                url: url,
                                                data: { query: request.term, start: Start, count: countPage },
                                                dataType: 'json',
                                                type: 'GET',
                                                success: function (data) {
                                                    response($.map(data,
                                                        function (item) {

                                                                return {
                                                                           label: item.IDValuta,
                                                                           value1: item.IDDrzava,
                                                                           value2: item.NazivDrzava,
                                                                           value3: item.NazivValuta
                                                                        }
                                                                }));
                                                            }
                                                        })
                                            }
                                }
                                    

                            }
                            else {
                                page -= 1;
                            }

                            previousScroll = currentScroll;

                        });
                    }
                })
    };





     $("." + '@AutocompleteValutaU').each(function () {

        var widgetAutoComplete = $(this).autocomplete({
            showHeader: true,
            source: function (request, response) {

                var url = '@Url.Action("GetDrzavaValuta", @InLine.UI.Web.T4.ControllerName.ControllerName.MaticniPodaci)';
                var kojalista = "@ulValutaIz";

               $.AutocompleteValutaU(request, response, kojalista, url, @Start, @Count);

            },

            select:
                function (event, ui) {
                    //kojaValutaIz = ui.item.label;
                    $("#IDValutaU").val($.trim(ui.item.label.toUpperCase()));
                    $("#ValutaU").val($.trim(ui.item.label.toUpperCase()));
                    $("#IDDrzavaU").val($.trim(ui.item.value1.toUpperCase()));
                    return false;
                },

            minLength: 0

        }).data("autocomplete");


        widgetAutoComplete._renderItem = function (ul, item) {

            ul.attr('id', 'ulValutaU');
            return $("<li class='tblAutocompleteLi'><table class='tblAutocomplete'></table></li>").data("item.autocomplete-item", item).append("<a><table width='100%' class='table table-condensed table-hover' style='margin-bottom:0px;'><tr><td width='40px'>" + item.label.toUpperCase() + "</td> <td width='200px'>" + item.value3.toUpperCase() + "</td> <td width='200px'>" + item.value2.toUpperCase() + "</td></tr></table></a>").appendTo("#ulValutaU");
        }

        widgetAutoComplete._renderMenu = function (ul, item) {

            var self = this;
            $.each(item, function (index, items) {
                if (index == 0)
                    ul.append("<li><table class='autocompleteHeader'  width='100%' class='table table-condensed table-hover' style='margin-bottom:0px;'><tr><th width='40px'> VALUTA </th> <th width='120px'> IME VALUTE </th><th width='120px'> DRZAVA</th></tr></table></li>");
                self._renderItemData(ul, items);
            });
        }

    });

      $.AutocompleteValutaU = function (request, response, kojalista, url, Start, Count ) {

                $.ajax({
                    url: url,
                    data: { query: request.term, start: Start, count: Count },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data,
                        function (item) {
                            return {
                                label: item.IDValuta,
                                value1: item.IDDrzava,
                                value2: item.NazivDrzava,
                                value3: item.NazivValuta
                            }

                        }));

                        var previousScroll = 0;
                        var page = 1;

                        $(kojalista).scroll(function () {

                            var currentScroll = $(this).scrollTop();

                            var x = $(kojalista).prop('scrollHeight');
                            var y = $(kojalista).prop('offsetHeight');

                            if (currentScroll > previousScroll) {

                                if(page >=0)
                                {
                                    if (currentScroll >= x - y)
                                        {
                                           page += 1;

                                            var countPage = page * Count
                                            $.ajax({
                                                url: url,
                                                data: { query: request.term, start: Start, count: countPage },
                                                dataType: 'json',
                                                type: 'GET',
                                                success: function (data) {
                                                    response($.map(data,
                                                        function (item) {

                                                                return {
                                                                           label: item.IDValuta,
                                                                           value1: item.IDDrzava,
                                                                           value2: item.NazivDrzava,
                                                                           value3: item.NazivValuta
                                                                        }
                                                                }));
                                                            }
                                                        })
                                            }
                                }
                                    

                            }
                            else {
                                page -= 1;
                            }

                            previousScroll = currentScroll;

                        });
                    }
                })
    };




</script>
    


    <script type="text/javascript">
        function InsertEditSucces() {


        }

        function InsertEditError() {

        }


        function DeleteSucces() {

        }

        function DeleteError() {

        }

        function ProvjeraKodUnosa() {
            return true;
        }


    </script>
